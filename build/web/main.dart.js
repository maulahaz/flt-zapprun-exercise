// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const _js_helper = dart_sdk._js_helper;
  const _internal = dart_sdk._internal;
  const collection = dart_sdk.collection;
  const developer = dart_sdk.developer;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const framework = flutter_sdk.src__widgets__framework;
  const app = flutter_sdk.src__material__app;
  const binding = flutter_sdk.src__widgets__binding;
  const theme_data = flutter_sdk.src__material__theme_data;
  const color_scheme = flutter_sdk.src__material__color_scheme;
  const colors = flutter_sdk.src__material__colors;
  const scaffold = flutter_sdk.src__material__scaffold;
  const safe_area = flutter_sdk.src__widgets__safe_area;
  const basic = flutter_sdk.src__widgets__basic;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const alignment = flutter_sdk.src__painting__alignment;
  const icon_button = flutter_sdk.src__material__icon_button;
  const icon = flutter_sdk.src__widgets__icon;
  const icons = flutter_sdk.src__material__icons;
  const text$ = flutter_sdk.src__widgets__text;
  const text_span = flutter_sdk.src__painting__text_span;
  const text_style = flutter_sdk.src__painting__text_style;
  const inline_span = flutter_sdk.src__painting__inline_span;
  const colors$ = flutter_sdk.src__painting__colors;
  const floating_action_button_theme = flutter_sdk.src__material__floating_action_button_theme;
  const elevated_button_theme = flutter_sdk.src__material__elevated_button_theme;
  const button_style = flutter_sdk.src__material__button_style;
  const material_state = flutter_sdk.src__material__material_state;
  const borders = flutter_sdk.src__painting__borders;
  const rounded_rectangle_border = flutter_sdk.src__painting__rounded_rectangle_border;
  const border_radius = flutter_sdk.src__painting__border_radius;
  const input_decorator = flutter_sdk.src__material__input_decorator;
  const input_border = flutter_sdk.src__material__input_border;
  const switch_theme = flutter_sdk.src__material__switch_theme;
  const assertions = flutter_sdk.src__foundation__assertions;
  const change_notifier = flutter_sdk.src__foundation__change_notifier;
  const diagnostics = flutter_sdk.src__foundation__diagnostics;
  const sliver = flutter_sdk.src__widgets__sliver;
  const layout_builder = flutter_sdk.src__widgets__layout_builder;
  const equality = flutter_sdk.src__equality;
  const value_listenable_builder = flutter_sdk.src__widgets__value_listenable_builder;
  const media_query = flutter_sdk.src__widgets__media_query;
  const container = flutter_sdk.src__widgets__container;
  const box_decoration = flutter_sdk.src__painting__box_decoration;
  const decoration_image = flutter_sdk.src__painting__decoration_image;
  const box_fit = flutter_sdk.src__painting__box_fit;
  const image_resolution = flutter_sdk.src__painting__image_resolution;
  const flex = flutter_sdk.src__rendering__flex;
  const circle_avatar = flutter_sdk.src__material__circle_avatar;
  const scroll_view = flutter_sdk.src__widgets__scroll_view;
  const sliver_grid = flutter_sdk.src__rendering__sliver_grid;
  const image = flutter_sdk.src__widgets__image;
  const gradient = flutter_sdk.src__painting__gradient;
  const app_bar = flutter_sdk.src__material__app_bar;
  const theme = flutter_sdk.src__material__theme;
  const gesture_detector = flutter_sdk.src__widgets__gesture_detector;
  const material_button = flutter_sdk.src__material__material_button;
  const box_border = flutter_sdk.src__painting__box_border;
  const tabs = flutter_sdk.src__material__tabs;
  const icon_data = flutter_sdk.src__widgets__icon_data;
  const box = flutter_sdk.src__rendering__box;
  const vector_math_64 = flutter_sdk.vector_math_64;
  const key = flutter_sdk.src__foundation__key;
  const custom_paint = flutter_sdk.src__rendering__custom_paint;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var light_mode = Object.create(dart.library);
  var provider = Object.create(dart.library);
  var all_glassmorphics = Object.create(dart.library);
  var quiz_pg = Object.create(dart.library);
  var theme_options = Object.create(dart.library);
  var async_provider = Object.create(dart.library);
  var change_notifier_provider = Object.create(dart.library);
  var consumer = Object.create(dart.library);
  var listenable_provider = Object.create(dart.library);
  var provider$ = Object.create(dart.library);
  var proxy_provider = Object.create(dart.library);
  var reassemble_handler = Object.create(dart.library);
  var selector$ = Object.create(dart.library);
  var value_listenable_provider = Object.create(dart.library);
  var area_mdl = Object.create(dart.library);
  var glassmorphic_pg = Object.create(dart.library);
  var quiz_area_tile = Object.create(dart.library);
  var all_configs = Object.create(dart.library);
  var nested = Object.create(dart.library);
  var all_components = Object.create(dart.library);
  var colors$0 = Object.create(dart.library);
  var sizes = Object.create(dart.library);
  var styles = Object.create(dart.library);
  var themes = Object.create(dart.library);
  var myappbar = Object.create(dart.library);
  var mybuttons = Object.create(dart.library);
  var menu_tab = Object.create(dart.library);
  var custom_glassmorphism = Object.create(dart.library);
  var all_helpers = Object.create(dart.library);
  var glassmorphism = Object.create(dart.library);
  var myfunctions_hlp = Object.create(dart.library);
  var $toString = dartx.toString;
  var $runtimeType = dartx.runtimeType;
  var $isNotEmpty = dartx.isNotEmpty;
  var $add = dartx.add;
  var $_set = dartx._set;
  var $clear = dartx.clear;
  var $remove = dartx.remove;
  var $reversed = dartx.reversed;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T$ = {
    VoidTovoid: () => (T$.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T$.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T$.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T$.ListOfString()])))(),
    JSArrayOfString: () => (T$.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T$.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T$.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T$.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T$.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    ChangeNotifierProviderOfAreaModel: () => (T$.ChangeNotifierProviderOfAreaModel = dart.constFn(change_notifier_provider.ChangeNotifierProvider$(area_mdl.AreaModel)))(),
    BuildContextToAreaModel: () => (T$.BuildContextToAreaModel = dart.constFn(dart.fnType(area_mdl.AreaModel, [framework.BuildContext])))(),
    JSArrayOfInlineSpan: () => (T$.JSArrayOfInlineSpan = dart.constFn(_interceptors.JSArray$(inline_span.InlineSpan)))(),
    JSArrayOfWidget: () => (T$.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    BuildContextToWidget: () => (T$.BuildContextToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext])))(),
    ObjectN: () => (T$.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    ObjectNToNull: () => (T$.ObjectNToNull = dart.constFn(dart.fnType(core.Null, [T$.ObjectN()])))(),
    ChangeNotifierN: () => (T$.ChangeNotifierN = dart.constFn(dart.nullable(change_notifier.ChangeNotifier)))(),
    BuildContextAndChangeNotifierNTovoid: () => (T$.BuildContextAndChangeNotifierNTovoid = dart.constFn(dart.fnType(dart.void, [framework.BuildContext, T$.ChangeNotifierN()])))(),
    ListenableN: () => (T$.ListenableN = dart.constFn(dart.nullable(change_notifier.Listenable)))(),
    InheritedContextOfListenableN: () => (T$.InheritedContextOfListenableN = dart.constFn(provider$.InheritedContext$(T$.ListenableN())))(),
    InheritedContextOfListenableNAndListenableNToFn: () => (T$.InheritedContextOfListenableNAndListenableNToFn = dart.constFn(dart.fnType(T$.VoidTovoid(), [T$.InheritedContextOfListenableN(), T$.ListenableN()])))(),
    VoidTobool: () => (T$.VoidTobool = dart.constFn(dart.fnType(core.bool, [])))(),
    TTovoid$1: () => (T$.TTovoid$1 = dart.constFn(dart.gFnType(T => [dart.void, [T]], T => [T$.ObjectN()])))(),
    JSArrayOfPostEventCall: () => (T$.JSArrayOfPostEventCall = dart.constFn(_interceptors.JSArray$(provider$.PostEventCall)))(),
    IdentityMapOfString$ProviderNode: () => (T$.IdentityMapOfString$ProviderNode = dart.constFn(_js_helper.IdentityMap$(core.String, provider$.ProviderNode)))(),
    ElementTovoid: () => (T$.ElementTovoid = dart.constFn(dart.fnType(dart.void, [framework.Element])))(),
    _NestedHookElementN: () => (T$._NestedHookElementN = dart.constFn(dart.nullable(nested._NestedHookElement)))(),
    ElementTobool: () => (T$.ElementTobool = dart.constFn(dart.fnType(core.bool, [framework.Element])))(),
    LinkedHashMapOfString$ProviderNode: () => (T$.LinkedHashMapOfString$ProviderNode = dart.constFn(collection.LinkedHashMap$(core.String, provider$.ProviderNode)))(),
    FutureOfNull: () => (T$.FutureOfNull = dart.constFn(async.Future$(core.Null)))(),
    JSArrayOfDiagnosticsNode: () => (T$.JSArrayOfDiagnosticsNode = dart.constFn(_interceptors.JSArray$(diagnostics.DiagnosticsNode)))(),
    DefaultEqualityOfNever: () => (T$.DefaultEqualityOfNever = dart.constFn(equality.DefaultEquality$(dart.Never)))(),
    FnToR: () => (T$.FnToR = dart.constFn(dart.gFnType((T, R) => {
      var __t$TToR = () => (__t$TToR = dart.constFn(dart.fnType(R, [T])))();
      return [R, [__t$TToR()]];
    }, (T, R) => {
      var __t$TToR = () => (__t$TToR = dart.constFn(dart.fnType(R, [T])))();
      return [T$.ObjectN(), T$.ObjectN()];
    })))(),
    VoidToT: () => (T$.VoidToT = dart.constFn(dart.gFnType(T => [T, []], T => [T$.ObjectN()])))(),
    intN: () => (T$.intN = dart.constFn(dart.nullable(core.int)))(),
    JSArrayOfintN: () => (T$.JSArrayOfintN = dart.constFn(_interceptors.JSArray$(T$.intN())))(),
    ListOfint: () => (T$.ListOfint = dart.constFn(core.List$(core.int)))(),
    WidgetN: () => (T$.WidgetN = dart.constFn(dart.nullable(framework.Widget)))(),
    JSArrayOfObject: () => (T$.JSArrayOfObject = dart.constFn(_interceptors.JSArray$(core.Object)))(),
    ConsumerOfAreaModel: () => (T$.ConsumerOfAreaModel = dart.constFn(consumer.Consumer$(area_mdl.AreaModel)))(),
    BuildContextAndintToQuizAreaTile: () => (T$.BuildContextAndintToQuizAreaTile = dart.constFn(dart.fnType(quiz_area_tile.QuizAreaTile, [framework.BuildContext, core.int])))(),
    BuildContextAndAreaModelAndWidgetNToGridView: () => (T$.BuildContextAndAreaModelAndWidgetNToGridView = dart.constFn(dart.fnType(scroll_view.GridView, [framework.BuildContext, area_mdl.AreaModel, T$.WidgetN()])))(),
    ColorN: () => (T$.ColorN = dart.constFn(dart.nullable(ui.Color)))(),
    LinkedHashSetOf_NestedHookElement: () => (T$.LinkedHashSetOf_NestedHookElement = dart.constFn(collection.LinkedHashSet$(nested._NestedHookElement)))(),
    SingleChildStateOfSingleChildStatefulWidget: () => (T$.SingleChildStateOfSingleChildStatefulWidget = dart.constFn(nested.SingleChildState$(nested.SingleChildStatefulWidget)))(),
    SingleChildStateMixinOfStatefulWidget: () => (T$.SingleChildStateMixinOfStatefulWidget = dart.constFn(nested.SingleChildStateMixin$(framework.StatefulWidget)))(),
    JSArrayOfColor: () => (T$.JSArrayOfColor = dart.constFn(_interceptors.JSArray$(ui.Color)))(),
    DiagnosticsPropertyOfAlignmentGeometry: () => (T$.DiagnosticsPropertyOfAlignmentGeometry = dart.constFn(diagnostics.DiagnosticsProperty$(alignment.AlignmentGeometry)))(),
    DiagnosticsPropertyOfEdgeInsetsGeometry: () => (T$.DiagnosticsPropertyOfEdgeInsetsGeometry = dart.constFn(diagnostics.DiagnosticsProperty$(edge_insets.EdgeInsetsGeometry)))(),
    DiagnosticsPropertyOfBoxConstraints: () => (T$.DiagnosticsPropertyOfBoxConstraints = dart.constFn(diagnostics.DiagnosticsProperty$(box.BoxConstraints)))(),
    ObjectFlagPropertyOfMatrix4: () => (T$.ObjectFlagPropertyOfMatrix4 = dart.constFn(diagnostics.ObjectFlagProperty$(vector_math_64.Matrix4)))(),
    doubleN: () => (T$.doubleN = dart.constFn(dart.nullable(core.double)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T$.VoidTovoid());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: glassmorphic_pg.GlassmorphicPage.prototype,
        [Widget_key]: null
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: quiz_pg.QuizPage.prototype,
        [Widget_key]: null
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: main.GlassmorphicApp.prototype,
        [Widget_key]: null
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 12,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 12
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294942336
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294929984
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294917376
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292684800
      });
    },
    get C6() {
      return C[6] = dart.constMap(core.int, ui.Color, [100, C[7] || CT.C7, 200, C[8] || CT.C8, 400, C[9] || CT.C9, 700, C[10] || CT.C10]);
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: colors.MaterialAccentColor.prototype,
        [Color_value]: 4294929984,
        [ColorSwatch__swatch]: C[6] || CT.C6
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294964192
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294959282
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294954112
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294948685
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294944550
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294940672
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294675456
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294278144
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293880832
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293284096
      });
    },
    get C12() {
      return C[12] = dart.constMap(core.int, ui.Color, [50, C[13] || CT.C13, 100, C[14] || CT.C14, 200, C[15] || CT.C15, 300, C[16] || CT.C16, 400, C[17] || CT.C17, 500, C[18] || CT.C18, 600, C[19] || CT.C19, 700, C[20] || CT.C20, 800, C[21] || CT.C21, 900, C[22] || CT.C22]);
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4294940672,
        [ColorSwatch__swatch]: C[12] || CT.C12
      });
    },
    get C23() {
      return C[23] = dart.fn(change_notifier_provider.ChangeNotifierProvider._dispose, T$.BuildContextAndChangeNotifierNTovoid());
    },
    get C24() {
      return C[24] = dart.fn(listenable_provider.ListenableProvider._startListening, T$.InheritedContextOfListenableNAndListenableNToFn());
    },
    get C25() {
      return C[25] = dart.constList([], core.String);
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: core.Object.prototype
      });
    },
    get C27() {
      return C[27] = dart.constMap(T$.ObjectN(), T$.ObjectN(), []);
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: T$.DefaultEqualityOfNever().prototype
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: equality.DeepCollectionEquality.prototype,
        [DeepCollectionEquality__unordered]: false,
        [DeepCollectionEquality__base]: C[29] || CT.C29
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 12,
        [EdgeInsets_right]: 12,
        [EdgeInsets_top]: 12,
        [EdgeInsets_left]: 12
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293471792
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4285186649
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293128957
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290502395
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4287679225
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4284790262
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4282557941
      });
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280391411
      });
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280191205
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279858898
      });
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279592384
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279060385
      });
    },
    get C34() {
      return C[34] = dart.constMap(core.int, ui.Color, [50, C[35] || CT.C35, 100, C[36] || CT.C36, 200, C[37] || CT.C37, 300, C[38] || CT.C38, 400, C[39] || CT.C39, 500, C[40] || CT.C40, 600, C[41] || CT.C41, 700, C[42] || CT.C42, 800, C[43] || CT.C43, 900, C[44] || CT.C44]);
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4280391411,
        [ColorSwatch__swatch]: C[34] || CT.C34
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294966759
      });
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294965700
      });
    },
    get C49() {
      return C[49] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294964637
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294963574
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294962776
      });
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294961979
      });
    },
    get C53() {
      return C[53] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294826037
      });
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294688813
      });
    },
    get C55() {
      return C[55] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294551589
      });
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294278935
      });
    },
    get C46() {
      return C[46] = dart.constMap(core.int, ui.Color, [50, C[47] || CT.C47, 100, C[48] || CT.C48, 200, C[49] || CT.C49, 300, C[50] || CT.C50, 400, C[51] || CT.C51, 500, C[52] || CT.C52, 600, C[53] || CT.C53, 700, C[54] || CT.C54, 800, C[55] || CT.C55, 900, C[56] || CT.C56]);
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4294961979,
        [ColorSwatch__swatch]: C[46] || CT.C46
      });
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290888129
      });
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294967295
      });
    },
    get C59() {
      return C[59] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279242768
      });
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 0
      });
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4288529382
      });
    },
    get C62() {
      return C[62] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4288860927
      });
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4291671259
      });
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290633982
      });
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 16756684
      });
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 16763101
      });
    },
    get C67() {
      return C[67] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278223271
      });
    },
    get C68() {
      return C[68] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294835420
      });
    },
    get C69() {
      return C[69] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294891959
      });
    },
    get C70() {
      return C[70] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293947751
      });
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293848814
      });
    },
    get C72() {
      return C[72] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278221823
      });
    },
    get C73() {
      return C[73] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4285298045
      });
    },
    get C74() {
      return C[74] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280854341
      });
    },
    get C75() {
      return C[75] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292621637
      });
    },
    get C76() {
      return C[76] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294951175
      });
    },
    get C77() {
      return C[77] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279739064
      });
    },
    get C78() {
      return C[78] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294507002
      });
    },
    get C79() {
      return C[79] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4281612864
      });
    },
    get C80() {
      return C[80] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292927712
      });
    },
    get C82() {
      return C[82] = dart.constList([C[61] || CT.C61, C[58] || CT.C58, C[62] || CT.C62], ui.Color);
    },
    get C83() {
      return C[83] = dart.const({
        __proto__: ui.TileMode.prototype,
        [_Enum__name]: "clamp",
        [_Enum_index]: 0
      });
    },
    get C84() {
      return C[84] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: 1,
        [Alignment_x]: 1
      });
    },
    get C85() {
      return C[85] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: -1,
        [Alignment_x]: -1
      });
    },
    get C81() {
      return C[81] = dart.const({
        __proto__: gradient.LinearGradient.prototype,
        [Gradient_transform]: null,
        [Gradient_stops]: null,
        [Gradient_colors]: C[82] || CT.C82,
        [LinearGradient_tileMode]: C[83] || CT.C83,
        [LinearGradient_end]: C[84] || CT.C84,
        [LinearGradient_begin]: C[85] || CT.C85
      });
    },
    get C87() {
      return C[87] = dart.constList([C[61] || CT.C61, C[58] || CT.C58], ui.Color);
    },
    get C88() {
      return C[88] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: 1,
        [Alignment_x]: 0
      });
    },
    get C89() {
      return C[89] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: -1,
        [Alignment_x]: 0
      });
    },
    get C86() {
      return C[86] = dart.const({
        __proto__: gradient.LinearGradient.prototype,
        [Gradient_transform]: null,
        [Gradient_stops]: null,
        [Gradient_colors]: C[87] || CT.C87,
        [LinearGradient_tileMode]: C[83] || CT.C83,
        [LinearGradient_end]: C[88] || CT.C88,
        [LinearGradient_begin]: C[89] || CT.C89
      });
    },
    get C90() {
      return C[90] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 24
      });
    },
    get C91() {
      return C[91] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 24,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 0
      });
    },
    get C92() {
      return C[92] = dart.const({
        __proto__: box_border.BoxShape.prototype,
        [_Enum__name]: "rectangle",
        [_Enum_index]: 0
      });
    }
  }, false);
  var C = Array(93).fill(void 0);
  var I = [
    "file:///zapp/project/lib/main.dart",
    "file:///zapp/project/lib/modules/quiz/pages/quiz_pg.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/inherited_provider.dart",
    "package:nested/nested.dart",
    "package:provider/src/provider.dart",
    "package:provider/src/async_provider.dart",
    "package:provider/src/listenable_provider.dart",
    "package:provider/src/change_notifier_provider.dart",
    "package:provider/src/consumer.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/nested-1.0.0/lib/nested.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/provider.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/deferred_inherited_provider.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/devtool.dart",
    "package:provider/src/proxy_provider.dart",
    "package:provider/src/reassemble_handler.dart",
    "package:provider/src/selector.dart",
    "package:provider/src/value_listenable_provider.dart",
    "file:///zapp/project/lib/modules/glassmorphic/data/area_mdl.dart",
    "file:///zapp/project/lib/modules/glassmorphic/views/glassmorphic_pg.dart",
    "file:///zapp/project/lib/modules/glassmorphic/components/quiz_area_tile.dart",
    "package:flutter_app/configs/themes.dart",
    "package:flutter_app/components/mybuttons.dart",
    "package:flutter_app/components/menu_tab.dart",
    "package:flutter_app/components/custom_glassmorphism.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/glassmorphism-3.0.0/lib/glassmorphism.dart",
    "package:glassmorphism/glassmorphism.dart"
  ];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T$.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T$.ListOfStringTodynamic().as(C[0] || CT.C0)(T$.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T$.dynamicToNull()));
      }
    }, T$.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T$.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T$.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T$.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T$.VoidToNull())});
    });
  };
  var Widget_key = dart.privateName(framework, "Widget.key");
  main.GlassmorphicApp = class GlassmorphicApp extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.GlassmorphicApp.new({key: key});
    }
    build(context) {
      return new (T$.ChangeNotifierProviderOfAreaModel()).new({create: dart.fn(contex => new area_mdl.AreaModel.new(), T$.BuildContextToAreaModel()), child: new app.MaterialApp.new({title: "Glassmorphic App", theme: theme_options.lightTheme, debugShowCheckedModeBanner: false, home: C[1] || CT.C1})});
    }
  };
  (main.GlassmorphicApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.GlassmorphicApp.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.GlassmorphicApp.prototype;
  dart.addTypeTests(main.GlassmorphicApp);
  dart.addTypeCaches(main.GlassmorphicApp);
  dart.setMethodSignature(main.GlassmorphicApp, () => ({
    __proto__: dart.getMethods(main.GlassmorphicApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.GlassmorphicApp, I[0]);
  main.MyApp = class MyApp extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.MyApp.new({key: key});
    }
    build(context) {
      return new app.MaterialApp.new({title: "Flutter App!!", debugShowCheckedModeBanner: false, theme: light_mode.lightMode, home: C[2] || CT.C2});
    }
  };
  (main.MyApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.MyApp.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.MyApp.prototype;
  dart.addTypeTests(main.MyApp);
  dart.addTypeCaches(main.MyApp);
  dart.setMethodSignature(main.MyApp, () => ({
    __proto__: dart.getMethods(main.MyApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.MyApp, I[0]);
  main.main = function main$0() {
    binding.runApp(C[3] || CT.C3);
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  dart.defineLazy(light_mode, {
    /*light_mode.lightMode*/get lightMode() {
      return theme_data.ThemeData.new({colorScheme: new color_scheme.ColorScheme.light({background: colors.Colors.grey.shade300, primary: colors.Colors.grey.shade200, secondary: colors.Colors.white, inversePrimary: colors.Colors.grey.shade700})});
    },
    set lightMode(value) {}
  }, false);
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  quiz_pg.QuizPage = class QuizPage extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new quiz_pg.QuizPage.new({key: key});
    }
    build(context) {
      return new scaffold.Scaffold.new({body: new safe_area.SafeArea.new({child: new basic.Padding.new({padding: C[4] || CT.C4, child: new basic.Column.new({children: T$.JSArrayOfWidget().of([new basic.Align.new({alignment: alignment.Alignment.centerRight, child: new icon_button.IconButton.new({onPressed: dart.fn(() => {
                    }, T$.VoidTovoid()), icon: new icon.Icon.new(icons.Icons.sort)})}), new text$.Text.rich(new text_span.TextSpan.new({text: "Question 1", style: new text_style.TextStyle.new({color: colors$0.kAppSecondary}), children: T$.JSArrayOfInlineSpan().of([new text_span.TextSpan.new({text: "/10", style: new text_style.TextStyle.new({color: colors$0.kAppSecondary, fontSize: 10})})])}))])})})})});
    }
  };
  (quiz_pg.QuizPage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    quiz_pg.QuizPage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = quiz_pg.QuizPage.prototype;
  dart.addTypeTests(quiz_pg.QuizPage);
  dart.addTypeCaches(quiz_pg.QuizPage);
  dart.setMethodSignature(quiz_pg.QuizPage, () => ({
    __proto__: dart.getMethods(quiz_pg.QuizPage.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(quiz_pg.QuizPage, I[1]);
  var Color_value = dart.privateName(ui, "Color.value");
  var ColorSwatch__swatch = dart.privateName(colors$, "ColorSwatch._swatch");
  dart.defineLazy(theme_options, {
    /*theme_options.COLOR_PRIMARY*/get COLOR_PRIMARY() {
      return C[5] || CT.C5;
    },
    /*theme_options.COLOR_ACCENT*/get COLOR_ACCENT() {
      return C[11] || CT.C11;
    },
    /*theme_options.lightTheme*/get lightTheme() {
      return theme_data.ThemeData.new({brightness: ui.Brightness.light, primaryColor: theme_options.COLOR_PRIMARY, floatingActionButtonTheme: new floating_action_button_theme.FloatingActionButtonThemeData.new({backgroundColor: theme_options.COLOR_ACCENT}), elevatedButtonTheme: new elevated_button_theme.ElevatedButtonThemeData.new({style: new button_style.ButtonStyle.new({padding: material_state.MaterialStateProperty.all(edge_insets.EdgeInsetsGeometry, new edge_insets.EdgeInsets.symmetric({horizontal: 40, vertical: 20})), shape: material_state.MaterialStateProperty.all(borders.OutlinedBorder, new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(20)})), backgroundColor: material_state.MaterialStateProperty.all(ui.Color, theme_options.COLOR_ACCENT)})}), inputDecorationTheme: new input_decorator.InputDecorationTheme.new({border: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(20), borderSide: borders.BorderSide.none}), filled: true, fillColor: colors.Colors.grey.withOpacity(0.1)})});
    },
    set lightTheme(value) {},
    /*theme_options.darkTheme*/get darkTheme() {
      return theme_data.ThemeData.new({brightness: ui.Brightness.dark, switchTheme: new switch_theme.SwitchThemeData.new({trackColor: material_state.MaterialStateProperty.all(ui.Color, colors.Colors.grey), thumbColor: material_state.MaterialStateProperty.all(ui.Color, colors.Colors.white)}), inputDecorationTheme: new input_decorator.InputDecorationTheme.new({border: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(20), borderSide: borders.BorderSide.none}), filled: true, fillColor: colors.Colors.grey.withOpacity(0.1)}), elevatedButtonTheme: new elevated_button_theme.ElevatedButtonThemeData.new({style: new button_style.ButtonStyle.new({padding: material_state.MaterialStateProperty.all(edge_insets.EdgeInsetsGeometry, new edge_insets.EdgeInsets.symmetric({horizontal: 40, vertical: 20})), shape: material_state.MaterialStateProperty.all(borders.OutlinedBorder, new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(20)})), backgroundColor: material_state.MaterialStateProperty.all(ui.Color, colors.Colors.white), foregroundColor: material_state.MaterialStateProperty.all(ui.Color, colors.Colors.black), overlayColor: material_state.MaterialStateProperty.all(ui.Color, colors.Colors.black26)})})});
    },
    set darkTheme(value) {}
  }, false);
  var builder$ = dart.privateName(provider$, "InheritedProvider.builder");
  var _lazy = dart.privateName(provider$, "_lazy");
  var _delegate = dart.privateName(provider$, "_delegate");
  var _child = dart.privateName(nested, "SingleChildStatelessWidget._child");
  var _child$ = dart.privateName(nested, "_child");
  nested.SingleChildStatelessWidget = class SingleChildStatelessWidget extends framework.StatelessWidget {
    get [_child$]() {
      return this[_child];
    }
    set [_child$](value) {
      super[_child$] = value;
    }
    build(context) {
      return this.buildWithChild(context, this[_child$]);
    }
    createElement() {
      return new nested.SingleChildStatelessElement.new(this);
    }
  };
  (nested.SingleChildStatelessWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    this[_child] = child;
    nested.SingleChildStatelessWidget.__proto__.new.call(this, {key: key});
    ;
  }).prototype = nested.SingleChildStatelessWidget.prototype;
  dart.addTypeTests(nested.SingleChildStatelessWidget);
  dart.addTypeCaches(nested.SingleChildStatelessWidget);
  nested.SingleChildStatelessWidget[dart.implements] = () => [nested.SingleChildWidget];
  dart.setMethodSignature(nested.SingleChildStatelessWidget, () => ({
    __proto__: dart.getMethods(nested.SingleChildStatelessWidget.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    createElement: dart.fnType(nested.SingleChildStatelessElement, [])
  }));
  dart.setLibraryUri(nested.SingleChildStatelessWidget, I[3]);
  dart.setFieldSignature(nested.SingleChildStatelessWidget, () => ({
    __proto__: dart.getFields(nested.SingleChildStatelessWidget.__proto__),
    [_child$]: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  const _is_InheritedProvider_default = Symbol('_is_InheritedProvider_default');
  provider$.InheritedProvider$ = dart.generic(T => {
    var __t$_CreateInheritedProviderOfT = () => (__t$_CreateInheritedProviderOfT = dart.constFn(provider$._CreateInheritedProvider$(T)))();
    var __t$_ValueInheritedProviderOfT = () => (__t$_ValueInheritedProviderOfT = dart.constFn(provider$._ValueInheritedProvider$(T)))();
    var __t$_InheritedProviderElementOfT = () => (__t$_InheritedProviderElementOfT = dart.constFn(provider$._InheritedProviderElement$(T)))();
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$_InheritedProviderScopeOfTN = () => (__t$_InheritedProviderScopeOfTN = dart.constFn(provider$._InheritedProviderScope$(__t$TN())))();
    class InheritedProvider extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let debugCheckInvalidValueType = opts && 'debugCheckInvalidValueType' in opts ? opts.debugCheckInvalidValueType : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.InheritedProvider$(T)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, debugCheckInvalidValueType: debugCheckInvalidValueType, startListening: startListening, dispose: dispose, builder: builder, lazy: lazy, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.InheritedProvider$(T)).value({key: key, value: value, updateShouldNotify: updateShouldNotify, startListening: startListening, lazy: lazy, builder: builder, child: child});
      }
      static ['_#_constructor#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let delegate = opts && 'delegate' in opts ? opts.delegate : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.InheritedProvider$(T))._constructor({key: key, delegate: delegate, lazy: lazy, builder: builder, child: child});
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        this[_delegate].debugFillProperties(properties);
      }
      createElement() {
        return new (__t$_InheritedProviderElementOfT()).new(this);
      }
      buildWithChild(context, child) {
        if (!(this.builder != null || child != null)) dart.assertFailed(dart.str(this[$runtimeType]) + " used outside of MultiProvider must specify a child", I[2], 158, 7, "builder != null || child != null");
        return new (__t$_InheritedProviderScopeOfTN()).new({owner: this, debugType: dart.str(this[$runtimeType]), child: this.builder != null ? new basic.Builder.new({builder: dart.fn(context => dart.nullCheck(this.builder)(context, child), T$.BuildContextToWidget())}) : dart.nullCheck(child)});
      }
    }
    (InheritedProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let debugCheckInvalidValueType = opts && 'debugCheckInvalidValueType' in opts ? opts.debugCheckInvalidValueType : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$] = builder;
      this[_lazy] = lazy;
      this[_delegate] = new (__t$_CreateInheritedProviderOfT()).new({create: create, update: update, updateShouldNotify: updateShouldNotify, debugCheckInvalidValueType: debugCheckInvalidValueType, startListening: startListening, dispose: dispose});
      InheritedProvider.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = InheritedProvider.prototype;
    (InheritedProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$] = builder;
      this[_lazy] = lazy;
      this[_delegate] = new (__t$_ValueInheritedProviderOfT()).new({value: value, updateShouldNotify: updateShouldNotify, startListening: startListening});
      InheritedProvider.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = InheritedProvider.prototype;
    (InheritedProvider._constructor = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let delegate = opts && 'delegate' in opts ? opts.delegate : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$] = builder;
      this[_lazy] = lazy;
      this[_delegate] = delegate;
      InheritedProvider.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = InheritedProvider.prototype;
    dart.addTypeTests(InheritedProvider);
    InheritedProvider.prototype[_is_InheritedProvider_default] = true;
    dart.addTypeCaches(InheritedProvider);
    dart.setMethodSignature(InheritedProvider, () => ({
      __proto__: dart.getMethods(InheritedProvider.__proto__),
      createElement: dart.fnType(provider$._InheritedProviderElement$(T), []),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(InheritedProvider, I[4]);
    dart.setFieldSignature(InheritedProvider, () => ({
      __proto__: dart.getFields(InheritedProvider.__proto__),
      [_delegate]: dart.finalFieldType(provider$._Delegate$(T)),
      [_lazy]: dart.finalFieldType(dart.nullable(core.bool)),
      builder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])))
    }));
    return InheritedProvider;
  });
  provider$.InheritedProvider = provider$.InheritedProvider$();
  dart.addTypeTests(provider$.InheritedProvider, _is_InheritedProvider_default);
  const _is_DeferredInheritedProvider_default = Symbol('_is_DeferredInheritedProvider_default');
  provider$.DeferredInheritedProvider$ = dart.generic((T, R) => {
    var __t$_CreateDeferredInheritedProviderOfT$R = () => (__t$_CreateDeferredInheritedProviderOfT$R = dart.constFn(provider$._CreateDeferredInheritedProvider$(T, R)))();
    var __t$_ValueDeferredInheritedProviderOfT$R = () => (__t$_ValueDeferredInheritedProviderOfT$R = dart.constFn(provider$._ValueDeferredInheritedProvider$(T, R)))();
    class DeferredInheritedProvider extends provider$.InheritedProvider$(R) {
      static ['_#new#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.DeferredInheritedProvider$(T, R)).new({key: key, create: create, dispose: dispose, startListening: startListening, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.DeferredInheritedProvider$(T, R)).value({key: key, value: value, startListening: startListening, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
    }
    (DeferredInheritedProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      DeferredInheritedProvider.__proto__._constructor.call(this, {key: key, child: child, lazy: lazy, builder: builder, delegate: new (__t$_CreateDeferredInheritedProviderOfT$R()).new({create: create, dispose: dispose, updateShouldNotify: updateShouldNotify, startListening: startListening})});
      ;
    }).prototype = DeferredInheritedProvider.prototype;
    (DeferredInheritedProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      DeferredInheritedProvider.__proto__._constructor.call(this, {key: key, lazy: lazy, builder: builder, delegate: new (__t$_ValueDeferredInheritedProviderOfT$R()).new(value, updateShouldNotify, startListening), child: child});
      ;
    }).prototype = DeferredInheritedProvider.prototype;
    dart.addTypeTests(DeferredInheritedProvider);
    DeferredInheritedProvider.prototype[_is_DeferredInheritedProvider_default] = true;
    dart.addTypeCaches(DeferredInheritedProvider);
    dart.setLibraryUri(DeferredInheritedProvider, I[4]);
    return DeferredInheritedProvider;
  });
  provider$.DeferredInheritedProvider = provider$.DeferredInheritedProvider$();
  dart.addTypeTests(provider$.DeferredInheritedProvider, _is_DeferredInheritedProvider_default);
  const _is_StreamProvider_default = Symbol('_is_StreamProvider_default');
  async_provider.StreamProvider$ = dart.generic(T => {
    class StreamProvider extends provider$.DeferredInheritedProvider$(dart.nullable(async.Stream$(T)), T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let initialData = opts && 'initialData' in opts ? opts.initialData : null;
        let catchError = opts && 'catchError' in opts ? opts.catchError : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (async_provider.StreamProvider$(T)).new({key: key, create: create, initialData: initialData, catchError: catchError, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let initialData = opts && 'initialData' in opts ? opts.initialData : null;
        let catchError = opts && 'catchError' in opts ? opts.catchError : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (async_provider.StreamProvider$(T)).value({key: key, value: value, initialData: initialData, catchError: catchError, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
    }
    (StreamProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let catchError = opts && 'catchError' in opts ? opts.catchError : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      StreamProvider.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, updateShouldNotify: updateShouldNotify, startListening: async_provider._streamStartListening(T, {catchError: catchError, initialData: initialData}), child: child});
      ;
    }).prototype = StreamProvider.prototype;
    (StreamProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let catchError = opts && 'catchError' in opts ? opts.catchError : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      StreamProvider.__proto__.value.call(this, {key: key, lazy: lazy, builder: builder, value: value, updateShouldNotify: updateShouldNotify, startListening: async_provider._streamStartListening(T, {catchError: catchError, initialData: initialData}), child: child});
      ;
    }).prototype = StreamProvider.prototype;
    dart.addTypeTests(StreamProvider);
    StreamProvider.prototype[_is_StreamProvider_default] = true;
    dart.addTypeCaches(StreamProvider);
    dart.setLibraryUri(StreamProvider, I[5]);
    return StreamProvider;
  });
  async_provider.StreamProvider = async_provider.StreamProvider$();
  dart.addTypeTests(async_provider.StreamProvider, _is_StreamProvider_default);
  const _is_FutureProvider_default = Symbol('_is_FutureProvider_default');
  async_provider.FutureProvider$ = dart.generic(T => {
    class FutureProvider extends provider$.DeferredInheritedProvider$(dart.nullable(async.Future$(T)), T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let initialData = opts && 'initialData' in opts ? opts.initialData : null;
        let catchError = opts && 'catchError' in opts ? opts.catchError : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (async_provider.FutureProvider$(T)).new({key: key, create: create, initialData: initialData, catchError: catchError, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let initialData = opts && 'initialData' in opts ? opts.initialData : null;
        let catchError = opts && 'catchError' in opts ? opts.catchError : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (async_provider.FutureProvider$(T)).value({key: key, value: value, initialData: initialData, catchError: catchError, updateShouldNotify: updateShouldNotify, builder: builder, child: child});
      }
    }
    (FutureProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let catchError = opts && 'catchError' in opts ? opts.catchError : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      FutureProvider.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, updateShouldNotify: updateShouldNotify, startListening: async_provider._futureStartListening(T, {catchError: catchError, initialData: initialData}), child: child});
      ;
    }).prototype = FutureProvider.prototype;
    (FutureProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let catchError = opts && 'catchError' in opts ? opts.catchError : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      FutureProvider.__proto__.value.call(this, {key: key, builder: builder, lazy: false, value: value, updateShouldNotify: updateShouldNotify, startListening: async_provider._futureStartListening(T, {catchError: catchError, initialData: initialData}), child: child});
      ;
    }).prototype = FutureProvider.prototype;
    dart.addTypeTests(FutureProvider);
    FutureProvider.prototype[_is_FutureProvider_default] = true;
    dart.addTypeCaches(FutureProvider);
    dart.setLibraryUri(FutureProvider, I[5]);
    return FutureProvider;
  });
  async_provider.FutureProvider = async_provider.FutureProvider$();
  dart.addTypeTests(async_provider.FutureProvider, _is_FutureProvider_default);
  async_provider._streamStartListening = function _streamStartListening(T, opts) {
    let initialData = opts && 'initialData' in opts ? opts.initialData : null;
    let catchError = opts && 'catchError' in opts ? opts.catchError : null;
    return dart.fn((e, setState, controller, __) => {
      if (!e.hasValue) {
        setState(initialData);
      }
      if (controller == null) {
        return dart.fn(() => {
        }, T$.VoidTovoid());
      }
      let sub = controller.listen(setState, {onError: dart.fn(error => {
          if (catchError != null) {
            setState(catchError(e, error));
          } else {
            assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({library: "provider", exception: assertions.FlutterError.new("An exception was throw by " + dart.str(dart.runtimeType(controller)) + " listened by\nStreamProvider<" + dart.str(dart.wrapType(T)) + ">, but no `catchError` was provided.\n\nException:\n" + dart.str(error) + "\n")}));
          }
        }, T$.ObjectNToNull())});
      return dart.bind(sub, 'cancel');
    }, dart.fnType(T$.VoidTovoid(), [provider$.InheritedContext$(dart.nullable(T)), dart.fnType(dart.void, [T]), dart.nullable(async.Stream$(T)), dart.nullable(T)]));
  };
  async_provider._futureStartListening = function _futureStartListening(T, opts) {
    let initialData = opts && 'initialData' in opts ? opts.initialData : null;
    let catchError = opts && 'catchError' in opts ? opts.catchError : null;
    return dart.fn((e, setState, controller, __) => {
      let t0;
      if (!e.hasValue) {
        setState(initialData);
      }
      let canceled = false;
      t0 = controller;
      t0 == null ? null : t0.then(core.Null, dart.fn(value => {
        if (canceled) {
          return;
        }
        setState(value);
      }, dart.fnType(core.Null, [T])), {onError: dart.fn(error => {
          if (canceled) {
            return;
          }
          if (catchError != null) {
            setState(catchError(e, error));
          } else {
            assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({library: "provider", exception: assertions.FlutterError.new("An exception was throw by " + dart.str(dart.runtimeType(controller)) + " listened by\nFutureProvider<" + dart.str(dart.wrapType(T)) + ">, but no `catchError` was provided.\n\nException:\n" + dart.str(error) + "\n")}));
          }
        }, T$.ObjectNToNull())});
      return dart.fn(() => canceled = true, T$.VoidTovoid());
    }, dart.fnType(T$.VoidTovoid(), [provider$.InheritedContext$(dart.nullable(T)), dart.fnType(dart.void, [T]), dart.nullable(async.Future$(T)), dart.nullable(T)]));
  };
  const _is_ListenableProvider_default = Symbol('_is_ListenableProvider_default');
  listenable_provider.ListenableProvider$ = dart.generic(T => {
    class ListenableProvider extends provider$.InheritedProvider$(T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProvider$(T)).new({key: key, create: create, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProvider$(T)).value({key: key, value: value, updateShouldNotify: updateShouldNotify, builder: builder, child: child});
      }
      static _startListening(e, value) {
        let t0;
        t0 = value;
        t0 == null ? null : t0.addListener(dart.bind(e, 'markNeedsNotifyDependents'));
        return dart.fn(() => {
          let t0;
          t0 = value;
          return t0 == null ? null : t0.removeListener(dart.bind(e, 'markNeedsNotifyDependents'));
        }, T$.VoidTovoid());
      }
    }
    (ListenableProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProvider.__proto__.new.call(this, {key: key, startListening: C[24] || CT.C24, create: create, dispose: dispose, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ListenableProvider.prototype;
    (ListenableProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProvider.__proto__.value.call(this, {key: key, builder: builder, value: value, updateShouldNotify: updateShouldNotify, startListening: C[24] || CT.C24, child: child});
      ;
    }).prototype = ListenableProvider.prototype;
    dart.addTypeTests(ListenableProvider);
    ListenableProvider.prototype[_is_ListenableProvider_default] = true;
    dart.addTypeCaches(ListenableProvider);
    dart.setStaticMethodSignature(ListenableProvider, () => ['_startListening']);
    dart.setLibraryUri(ListenableProvider, I[6]);
    return ListenableProvider;
  });
  listenable_provider.ListenableProvider = listenable_provider.ListenableProvider$();
  dart.addTypeTests(listenable_provider.ListenableProvider, _is_ListenableProvider_default);
  const _is_ChangeNotifierProvider_default = Symbol('_is_ChangeNotifierProvider_default');
  change_notifier_provider.ChangeNotifierProvider$ = dart.generic(T => {
    class ChangeNotifierProvider extends listenable_provider.ListenableProvider$(T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProvider$(T)).new({key: key, create: create, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProvider$(T)).value({key: key, value: value, builder: builder, child: child});
      }
      static _dispose(context, notifier) {
        let t0;
        t0 = notifier;
        t0 == null ? null : t0.dispose();
      }
    }
    (ChangeNotifierProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProvider.__proto__.new.call(this, {key: key, create: create, dispose: C[23] || CT.C23, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProvider.prototype;
    (ChangeNotifierProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProvider.__proto__.value.call(this, {key: key, builder: builder, value: value, child: child});
      ;
    }).prototype = ChangeNotifierProvider.prototype;
    dart.addTypeTests(ChangeNotifierProvider);
    ChangeNotifierProvider.prototype[_is_ChangeNotifierProvider_default] = true;
    dart.addTypeCaches(ChangeNotifierProvider);
    dart.setStaticMethodSignature(ChangeNotifierProvider, () => ['_dispose']);
    dart.setLibraryUri(ChangeNotifierProvider, I[7]);
    return ChangeNotifierProvider;
  });
  change_notifier_provider.ChangeNotifierProvider = change_notifier_provider.ChangeNotifierProvider$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProvider, _is_ChangeNotifierProvider_default);
  const _is_ListenableProxyProvider0_default = Symbol('_is_ListenableProxyProvider0_default');
  listenable_provider.ListenableProxyProvider0$ = dart.generic(R => {
    class ListenableProxyProvider0 extends provider$.InheritedProvider$(R) {
      static ['_#new#tearOff'](R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider0$(R)).new({key: key, create: create, update: update, dispose: dispose, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider0.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider0.__proto__.new.call(this, {key: key, create: create, update: update, lazy: lazy, builder: builder, dispose: dispose, updateShouldNotify: updateShouldNotify, startListening: C[24] || CT.C24, child: child});
      ;
    }).prototype = ListenableProxyProvider0.prototype;
    dart.addTypeTests(ListenableProxyProvider0);
    ListenableProxyProvider0.prototype[_is_ListenableProxyProvider0_default] = true;
    dart.addTypeCaches(ListenableProxyProvider0);
    dart.setLibraryUri(ListenableProxyProvider0, I[6]);
    return ListenableProxyProvider0;
  });
  listenable_provider.ListenableProxyProvider0 = listenable_provider.ListenableProxyProvider0$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider0, _is_ListenableProxyProvider0_default);
  const _is_ListenableProxyProvider_default = Symbol('_is_ListenableProxyProvider_default');
  listenable_provider.ListenableProxyProvider$ = dart.generic((T, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider$(T, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider.prototype;
    dart.addTypeTests(ListenableProxyProvider);
    ListenableProxyProvider.prototype[_is_ListenableProxyProvider_default] = true;
    dart.addTypeCaches(ListenableProxyProvider);
    dart.setLibraryUri(ListenableProxyProvider, I[6]);
    return ListenableProxyProvider;
  });
  listenable_provider.ListenableProxyProvider = listenable_provider.ListenableProxyProvider$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider, _is_ListenableProxyProvider_default);
  const _is_ChangeNotifierProxyProvider_default = Symbol('_is_ChangeNotifierProxyProvider_default');
  change_notifier_provider.ChangeNotifierProxyProvider$ = dart.generic((T, R) => {
    class ChangeNotifierProxyProvider extends listenable_provider.ListenableProxyProvider$(T, R) {
      static ['_#new#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider$(T, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[23] || CT.C23, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider);
    ChangeNotifierProxyProvider.prototype[_is_ChangeNotifierProxyProvider_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider);
    dart.setLibraryUri(ChangeNotifierProxyProvider, I[7]);
    return ChangeNotifierProxyProvider;
  });
  change_notifier_provider.ChangeNotifierProxyProvider = change_notifier_provider.ChangeNotifierProxyProvider$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider, _is_ChangeNotifierProxyProvider_default);
  const _is_ChangeNotifierProxyProvider0_default = Symbol('_is_ChangeNotifierProxyProvider0_default');
  change_notifier_provider.ChangeNotifierProxyProvider0$ = dart.generic(R => {
    class ChangeNotifierProxyProvider0 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider0$(R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider0.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider0.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[23] || CT.C23, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider0.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider0);
    ChangeNotifierProxyProvider0.prototype[_is_ChangeNotifierProxyProvider0_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider0);
    dart.setLibraryUri(ChangeNotifierProxyProvider0, I[7]);
    return ChangeNotifierProxyProvider0;
  });
  change_notifier_provider.ChangeNotifierProxyProvider0 = change_notifier_provider.ChangeNotifierProxyProvider0$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider0, _is_ChangeNotifierProxyProvider0_default);
  const _is_ListenableProxyProvider2_default = Symbol('_is_ListenableProxyProvider2_default');
  listenable_provider.ListenableProxyProvider2$ = dart.generic((T, T2, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider2 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider2$(T, T2, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider2.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider2.prototype;
    dart.addTypeTests(ListenableProxyProvider2);
    ListenableProxyProvider2.prototype[_is_ListenableProxyProvider2_default] = true;
    dart.addTypeCaches(ListenableProxyProvider2);
    dart.setLibraryUri(ListenableProxyProvider2, I[6]);
    return ListenableProxyProvider2;
  });
  listenable_provider.ListenableProxyProvider2 = listenable_provider.ListenableProxyProvider2$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider2, _is_ListenableProxyProvider2_default);
  const _is_ChangeNotifierProxyProvider2_default = Symbol('_is_ChangeNotifierProxyProvider2_default');
  change_notifier_provider.ChangeNotifierProxyProvider2$ = dart.generic((T, T2, R) => {
    class ChangeNotifierProxyProvider2 extends listenable_provider.ListenableProxyProvider2$(T, T2, R) {
      static ['_#new#tearOff'](T, T2, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider2$(T, T2, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider2.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[23] || CT.C23, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider2.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider2);
    ChangeNotifierProxyProvider2.prototype[_is_ChangeNotifierProxyProvider2_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider2);
    dart.setLibraryUri(ChangeNotifierProxyProvider2, I[7]);
    return ChangeNotifierProxyProvider2;
  });
  change_notifier_provider.ChangeNotifierProxyProvider2 = change_notifier_provider.ChangeNotifierProxyProvider2$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider2, _is_ChangeNotifierProxyProvider2_default);
  const _is_ListenableProxyProvider3_default = Symbol('_is_ListenableProxyProvider3_default');
  listenable_provider.ListenableProxyProvider3$ = dart.generic((T, T2, T3, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider3 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider3$(T, T2, T3, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider3.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider3.prototype;
    dart.addTypeTests(ListenableProxyProvider3);
    ListenableProxyProvider3.prototype[_is_ListenableProxyProvider3_default] = true;
    dart.addTypeCaches(ListenableProxyProvider3);
    dart.setLibraryUri(ListenableProxyProvider3, I[6]);
    return ListenableProxyProvider3;
  });
  listenable_provider.ListenableProxyProvider3 = listenable_provider.ListenableProxyProvider3$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider3, _is_ListenableProxyProvider3_default);
  const _is_ChangeNotifierProxyProvider3_default = Symbol('_is_ChangeNotifierProxyProvider3_default');
  change_notifier_provider.ChangeNotifierProxyProvider3$ = dart.generic((T, T2, T3, R) => {
    class ChangeNotifierProxyProvider3 extends listenable_provider.ListenableProxyProvider3$(T, T2, T3, R) {
      static ['_#new#tearOff'](T, T2, T3, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider3$(T, T2, T3, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider3.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[23] || CT.C23, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider3.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider3);
    ChangeNotifierProxyProvider3.prototype[_is_ChangeNotifierProxyProvider3_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider3);
    dart.setLibraryUri(ChangeNotifierProxyProvider3, I[7]);
    return ChangeNotifierProxyProvider3;
  });
  change_notifier_provider.ChangeNotifierProxyProvider3 = change_notifier_provider.ChangeNotifierProxyProvider3$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider3, _is_ChangeNotifierProxyProvider3_default);
  const _is_ListenableProxyProvider4_default = Symbol('_is_ListenableProxyProvider4_default');
  listenable_provider.ListenableProxyProvider4$ = dart.generic((T, T2, T3, T4, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider4 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider4$(T, T2, T3, T4, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider4.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider4.prototype;
    dart.addTypeTests(ListenableProxyProvider4);
    ListenableProxyProvider4.prototype[_is_ListenableProxyProvider4_default] = true;
    dart.addTypeCaches(ListenableProxyProvider4);
    dart.setLibraryUri(ListenableProxyProvider4, I[6]);
    return ListenableProxyProvider4;
  });
  listenable_provider.ListenableProxyProvider4 = listenable_provider.ListenableProxyProvider4$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider4, _is_ListenableProxyProvider4_default);
  const _is_ChangeNotifierProxyProvider4_default = Symbol('_is_ChangeNotifierProxyProvider4_default');
  change_notifier_provider.ChangeNotifierProxyProvider4$ = dart.generic((T, T2, T3, T4, R) => {
    class ChangeNotifierProxyProvider4 extends listenable_provider.ListenableProxyProvider4$(T, T2, T3, T4, R) {
      static ['_#new#tearOff'](T, T2, T3, T4, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider4$(T, T2, T3, T4, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider4.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[23] || CT.C23, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider4.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider4);
    ChangeNotifierProxyProvider4.prototype[_is_ChangeNotifierProxyProvider4_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider4);
    dart.setLibraryUri(ChangeNotifierProxyProvider4, I[7]);
    return ChangeNotifierProxyProvider4;
  });
  change_notifier_provider.ChangeNotifierProxyProvider4 = change_notifier_provider.ChangeNotifierProxyProvider4$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider4, _is_ChangeNotifierProxyProvider4_default);
  const _is_ListenableProxyProvider5_default = Symbol('_is_ListenableProxyProvider5_default');
  listenable_provider.ListenableProxyProvider5$ = dart.generic((T, T2, T3, T4, T5, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider5 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider5$(T, T2, T3, T4, T5, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider5.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), provider$.Provider.of(T5, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider5.prototype;
    dart.addTypeTests(ListenableProxyProvider5);
    ListenableProxyProvider5.prototype[_is_ListenableProxyProvider5_default] = true;
    dart.addTypeCaches(ListenableProxyProvider5);
    dart.setLibraryUri(ListenableProxyProvider5, I[6]);
    return ListenableProxyProvider5;
  });
  listenable_provider.ListenableProxyProvider5 = listenable_provider.ListenableProxyProvider5$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider5, _is_ListenableProxyProvider5_default);
  const _is_ChangeNotifierProxyProvider5_default = Symbol('_is_ChangeNotifierProxyProvider5_default');
  change_notifier_provider.ChangeNotifierProxyProvider5$ = dart.generic((T, T2, T3, T4, T5, R) => {
    class ChangeNotifierProxyProvider5 extends listenable_provider.ListenableProxyProvider5$(T, T2, T3, T4, T5, R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider5$(T, T2, T3, T4, T5, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider5.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[23] || CT.C23, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider5.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider5);
    ChangeNotifierProxyProvider5.prototype[_is_ChangeNotifierProxyProvider5_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider5);
    dart.setLibraryUri(ChangeNotifierProxyProvider5, I[7]);
    return ChangeNotifierProxyProvider5;
  });
  change_notifier_provider.ChangeNotifierProxyProvider5 = change_notifier_provider.ChangeNotifierProxyProvider5$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider5, _is_ChangeNotifierProxyProvider5_default);
  const _is_ListenableProxyProvider6_default = Symbol('_is_ListenableProxyProvider6_default');
  listenable_provider.ListenableProxyProvider6$ = dart.generic((T, T2, T3, T4, T5, T6, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider6 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, T6, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider6$(T, T2, T3, T4, T5, T6, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider6.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), provider$.Provider.of(T5, context), provider$.Provider.of(T6, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider6.prototype;
    dart.addTypeTests(ListenableProxyProvider6);
    ListenableProxyProvider6.prototype[_is_ListenableProxyProvider6_default] = true;
    dart.addTypeCaches(ListenableProxyProvider6);
    dart.setLibraryUri(ListenableProxyProvider6, I[6]);
    return ListenableProxyProvider6;
  });
  listenable_provider.ListenableProxyProvider6 = listenable_provider.ListenableProxyProvider6$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider6, _is_ListenableProxyProvider6_default);
  const _is_ChangeNotifierProxyProvider6_default = Symbol('_is_ChangeNotifierProxyProvider6_default');
  change_notifier_provider.ChangeNotifierProxyProvider6$ = dart.generic((T, T2, T3, T4, T5, T6, R) => {
    class ChangeNotifierProxyProvider6 extends listenable_provider.ListenableProxyProvider6$(T, T2, T3, T4, T5, T6, R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, T6, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider6$(T, T2, T3, T4, T5, T6, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider6.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[23] || CT.C23, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider6.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider6);
    ChangeNotifierProxyProvider6.prototype[_is_ChangeNotifierProxyProvider6_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider6);
    dart.setLibraryUri(ChangeNotifierProxyProvider6, I[7]);
    return ChangeNotifierProxyProvider6;
  });
  change_notifier_provider.ChangeNotifierProxyProvider6 = change_notifier_provider.ChangeNotifierProxyProvider6$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider6, _is_ChangeNotifierProxyProvider6_default);
  var builder$0 = dart.privateName(consumer, "Consumer.builder");
  const _is_Consumer_default = Symbol('_is_Consumer_default');
  consumer.Consumer$ = dart.generic(T => {
    class Consumer extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$0];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer$(T)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t2, t1, t0;
        t0 = context;
        t1 = provider$.Provider.of(T, context);
        t2 = child;
        return this.builder(t0, t1, t2);
      }
    }
    (Consumer.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$0] = builder;
      Consumer.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer.prototype;
    dart.addTypeTests(Consumer);
    Consumer.prototype[_is_Consumer_default] = true;
    dart.addTypeCaches(Consumer);
    dart.setMethodSignature(Consumer, () => ({
      __proto__: dart.getMethods(Consumer.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer, I[8]);
    dart.setFieldSignature(Consumer, () => ({
      __proto__: dart.getFields(Consumer.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, T, dart.nullable(framework.Widget)]))
    }));
    return Consumer;
  });
  consumer.Consumer = consumer.Consumer$();
  dart.addTypeTests(consumer.Consumer, _is_Consumer_default);
  var builder$1 = dart.privateName(consumer, "Consumer2.builder");
  const _is_Consumer2_default = Symbol('_is_Consumer2_default');
  consumer.Consumer2$ = dart.generic((A, B) => {
    class Consumer2 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$1];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer2$(A, B)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t3, t2, t1, t0;
        t0 = context;
        t1 = provider$.Provider.of(A, context);
        t2 = provider$.Provider.of(B, context);
        t3 = child;
        return this.builder(t0, t1, t2, t3);
      }
    }
    (Consumer2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$1] = builder;
      Consumer2.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer2.prototype;
    dart.addTypeTests(Consumer2);
    Consumer2.prototype[_is_Consumer2_default] = true;
    dart.addTypeCaches(Consumer2);
    dart.setMethodSignature(Consumer2, () => ({
      __proto__: dart.getMethods(Consumer2.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer2, I[8]);
    dart.setFieldSignature(Consumer2, () => ({
      __proto__: dart.getFields(Consumer2.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, dart.nullable(framework.Widget)]))
    }));
    return Consumer2;
  });
  consumer.Consumer2 = consumer.Consumer2$();
  dart.addTypeTests(consumer.Consumer2, _is_Consumer2_default);
  var builder$2 = dart.privateName(consumer, "Consumer3.builder");
  const _is_Consumer3_default = Symbol('_is_Consumer3_default');
  consumer.Consumer3$ = dart.generic((A, B, C) => {
    class Consumer3 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$2];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, C, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer3$(A, B, C)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t4, t3, t2, t1, t0;
        t0 = context;
        t1 = provider$.Provider.of(A, context);
        t2 = provider$.Provider.of(B, context);
        t3 = provider$.Provider.of(C, context);
        t4 = child;
        return this.builder(t0, t1, t2, t3, t4);
      }
    }
    (Consumer3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$2] = builder;
      Consumer3.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer3.prototype;
    dart.addTypeTests(Consumer3);
    Consumer3.prototype[_is_Consumer3_default] = true;
    dart.addTypeCaches(Consumer3);
    dart.setMethodSignature(Consumer3, () => ({
      __proto__: dart.getMethods(Consumer3.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer3, I[8]);
    dart.setFieldSignature(Consumer3, () => ({
      __proto__: dart.getFields(Consumer3.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, C, dart.nullable(framework.Widget)]))
    }));
    return Consumer3;
  });
  consumer.Consumer3 = consumer.Consumer3$();
  dart.addTypeTests(consumer.Consumer3, _is_Consumer3_default);
  var builder$3 = dart.privateName(consumer, "Consumer4.builder");
  const _is_Consumer4_default = Symbol('_is_Consumer4_default');
  consumer.Consumer4$ = dart.generic((A, B, C, D) => {
    class Consumer4 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$3];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, C, D, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer4$(A, B, C, D)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t5, t4, t3, t2, t1, t0;
        t0 = context;
        t1 = provider$.Provider.of(A, context);
        t2 = provider$.Provider.of(B, context);
        t3 = provider$.Provider.of(C, context);
        t4 = provider$.Provider.of(D, context);
        t5 = child;
        return this.builder(t0, t1, t2, t3, t4, t5);
      }
    }
    (Consumer4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$3] = builder;
      Consumer4.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer4.prototype;
    dart.addTypeTests(Consumer4);
    Consumer4.prototype[_is_Consumer4_default] = true;
    dart.addTypeCaches(Consumer4);
    dart.setMethodSignature(Consumer4, () => ({
      __proto__: dart.getMethods(Consumer4.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer4, I[8]);
    dart.setFieldSignature(Consumer4, () => ({
      __proto__: dart.getFields(Consumer4.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, C, D, dart.nullable(framework.Widget)]))
    }));
    return Consumer4;
  });
  consumer.Consumer4 = consumer.Consumer4$();
  dart.addTypeTests(consumer.Consumer4, _is_Consumer4_default);
  var builder$4 = dart.privateName(consumer, "Consumer5.builder");
  const _is_Consumer5_default = Symbol('_is_Consumer5_default');
  consumer.Consumer5$ = dart.generic((A, B, C, D, E) => {
    class Consumer5 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$4];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, C, D, E, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer5$(A, B, C, D, E)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t6, t5, t4, t3, t2, t1, t0;
        t0 = context;
        t1 = provider$.Provider.of(A, context);
        t2 = provider$.Provider.of(B, context);
        t3 = provider$.Provider.of(C, context);
        t4 = provider$.Provider.of(D, context);
        t5 = provider$.Provider.of(E, context);
        t6 = child;
        return this.builder(t0, t1, t2, t3, t4, t5, t6);
      }
    }
    (Consumer5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$4] = builder;
      Consumer5.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer5.prototype;
    dart.addTypeTests(Consumer5);
    Consumer5.prototype[_is_Consumer5_default] = true;
    dart.addTypeCaches(Consumer5);
    dart.setMethodSignature(Consumer5, () => ({
      __proto__: dart.getMethods(Consumer5.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer5, I[8]);
    dart.setFieldSignature(Consumer5, () => ({
      __proto__: dart.getFields(Consumer5.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, C, D, E, dart.nullable(framework.Widget)]))
    }));
    return Consumer5;
  });
  consumer.Consumer5 = consumer.Consumer5$();
  dart.addTypeTests(consumer.Consumer5, _is_Consumer5_default);
  var builder$5 = dart.privateName(consumer, "Consumer6.builder");
  const _is_Consumer6_default = Symbol('_is_Consumer6_default');
  consumer.Consumer6$ = dart.generic((A, B, C, D, E, F) => {
    class Consumer6 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$5];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, C, D, E, F, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer6$(A, B, C, D, E, F)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t7, t6, t5, t4, t3, t2, t1, t0;
        t0 = context;
        t1 = provider$.Provider.of(A, context);
        t2 = provider$.Provider.of(B, context);
        t3 = provider$.Provider.of(C, context);
        t4 = provider$.Provider.of(D, context);
        t5 = provider$.Provider.of(E, context);
        t6 = provider$.Provider.of(F, context);
        t7 = child;
        return this.builder(t0, t1, t2, t3, t4, t5, t6, t7);
      }
    }
    (Consumer6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$5] = builder;
      Consumer6.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer6.prototype;
    dart.addTypeTests(Consumer6);
    Consumer6.prototype[_is_Consumer6_default] = true;
    dart.addTypeCaches(Consumer6);
    dart.setMethodSignature(Consumer6, () => ({
      __proto__: dart.getMethods(Consumer6.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer6, I[8]);
    dart.setFieldSignature(Consumer6, () => ({
      __proto__: dart.getFields(Consumer6.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, C, D, E, F, dart.nullable(framework.Widget)]))
    }));
    return Consumer6;
  });
  consumer.Consumer6 = consumer.Consumer6$();
  dart.addTypeTests(consumer.Consumer6, _is_Consumer6_default);
  var _children = dart.privateName(nested, "_children");
  nested.Nested = class Nested extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let children = opts && 'children' in opts ? opts.children : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new nested.Nested.new({key: key, children: children, child: child});
    }
    build(context) {
      dart.throw(new core.StateError.new("implemented internally"));
    }
    createElement() {
      return new nested._NestedElement.new(this);
    }
  };
  (nested.Nested.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let children = opts && 'children' in opts ? opts.children : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (!children[$isNotEmpty]) dart.assertFailed(null, I[9], 71, 16, "children.isNotEmpty");
    this[_children] = children;
    this[_child$] = child;
    nested.Nested.__proto__.new.call(this, {key: key});
    ;
  }).prototype = nested.Nested.prototype;
  dart.addTypeTests(nested.Nested);
  dart.addTypeCaches(nested.Nested);
  nested.Nested[dart.implements] = () => [nested.SingleChildWidget];
  dart.setMethodSignature(nested.Nested, () => ({
    __proto__: dart.getMethods(nested.Nested.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    createElement: dart.fnType(nested._NestedElement, [])
  }));
  dart.setLibraryUri(nested.Nested, I[3]);
  dart.setFieldSignature(nested.Nested, () => ({
    __proto__: dart.getFields(nested.Nested.__proto__),
    [_children]: dart.finalFieldType(core.List$(nested.SingleChildWidget)),
    [_child$]: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  provider$.MultiProvider = class MultiProvider extends nested.Nested {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let providers = opts && 'providers' in opts ? opts.providers : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      return new provider$.MultiProvider.new({key: key, providers: providers, child: child, builder: builder});
    }
  };
  (provider$.MultiProvider.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let providers = opts && 'providers' in opts ? opts.providers : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    provider$.MultiProvider.__proto__.new.call(this, {key: key, children: providers, child: builder != null ? new basic.Builder.new({builder: dart.fn(context => builder(context, child), T$.BuildContextToWidget())}) : child});
    ;
  }).prototype = provider$.MultiProvider.prototype;
  dart.addTypeTests(provider$.MultiProvider);
  dart.addTypeCaches(provider$.MultiProvider);
  dart.setLibraryUri(provider$.MultiProvider, I[4]);
  const _is_Provider_default = Symbol('_is_Provider_default');
  provider$.Provider$ = dart.generic(T => {
    var __t$TTovoid = () => (__t$TTovoid = dart.constFn(dart.fnType(dart.void, [T])))();
    class Provider extends provider$.InheritedProvider$(T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.Provider$(T)).new({key: key, create: create, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.Provider$(T)).value({key: key, value: value, updateShouldNotify: updateShouldNotify, builder: builder, child: child});
      }
      static of(T, context, opts) {
        let t0;
        let listen = opts && 'listen' in opts ? opts.listen : true;
        if (!(dart.nullCheck(context.owner).debugBuilding || listen === false || provider$.debugIsInInheritedProviderUpdate)) dart.assertFailed("Tried to listen to a value exposed with provider, from outside of the widget tree.\n\nThis is likely caused by an event handler (like a button's onPressed) that called\nProvider.of without passing `listen: false`.\n\nTo fix, write:\nProvider.of<" + dart.str(dart.wrapType(T)) + ">(context, listen: false);\n\nIt is unsupported because may pointlessly rebuild the widget associated to the\nevent handler, when the widget tree doesn't care about the value.\n\nThe context used was: " + dart.str(context) + "\n", I[10], 274, 7, "context.owner!.debugBuilding ||\n          listen == false ||\n          debugIsInInheritedProviderUpdate");
        let inheritedElement = provider$.Provider._inheritedElementOf(T, context);
        if (listen) {
          context.dependOnInheritedWidgetOfExactType(provider$._InheritedProviderScope$(dart.nullable(T)));
        }
        let value = (t0 = inheritedElement, t0 == null ? null : t0.value);
        if (provider$._isSoundMode) {
          if (!T.is(value)) {
            dart.throw(new provider$.ProviderNullException.new(dart.wrapType(T), context.widget[$runtimeType]));
          }
          return value;
        }
        return T.as(value);
      }
      static _inheritedElementOf(T, context) {
        if (!(context !== null)) dart.assertFailed("Tried to call context.read/watch/select or similar on a `context` that is null.\n\nThis can happen if you used the context of a StatefulWidget and that\nStatefulWidget was disposed.\n", I[10], 319, 12, "context != null");
        if (!(provider$._debugIsSelecting === false)) dart.assertFailed("Cannot call context.read/watch/select inside the callback of a context.select", I[10], 326, 7, "_debugIsSelecting == false");
        if (!!dart.wrapType(T)._equals(dart.wrapType(dart.dynamic))) dart.assertFailed("Tried to call Provider.of<dynamic>. This is likely a mistake and is therefore\nunsupported.\n\nIf you want to expose a variable that can be anything, consider changing\n`dynamic` to `Object` instead.\n", I[10], 330, 7, "T != dynamic");
        let inheritedElement = dart.nullable(provider$._InheritedProviderScopeElement$(dart.nullable(T))).as(context.getElementForInheritedWidgetOfExactType(provider$._InheritedProviderScope$(dart.nullable(T))));
        if (inheritedElement == null && !T.is(null)) {
          dart.throw(new provider$.ProviderNotFoundException.new(dart.wrapType(T), context.widget[$runtimeType]));
        }
        return inheritedElement;
      }
    }
    (Provider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Provider.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, dispose: dispose, debugCheckInvalidValueType: dart.fn(value => {
          let t0;
          t0 = provider$.Provider.debugCheckInvalidValueType;
          return t0 == null ? null : t0(T, value);
        }, __t$TTovoid()), child: child});
      ;
    }).prototype = Provider.prototype;
    (Provider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      if (!dart.fn(() => {
        let t0;
        t0 = provider$.Provider.debugCheckInvalidValueType;
        t0 == null ? null : t0(T, value);
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[10], 243, 16, "() {\n          Provider.debugCheckInvalidValueType?.call<T>(value);\n          return true;\n        }()");
      Provider.__proto__.value.call(this, {key: key, builder: builder, value: value, updateShouldNotify: updateShouldNotify, child: child});
      ;
    }).prototype = Provider.prototype;
    dart.addTypeTests(Provider);
    Provider.prototype[_is_Provider_default] = true;
    dart.addTypeCaches(Provider);
    dart.setStaticMethodSignature(Provider, () => ['of', '_inheritedElementOf']);
    dart.setLibraryUri(Provider, I[4]);
    dart.setStaticFieldSignature(Provider, () => ['debugCheckInvalidValueType']);
    return Provider;
  });
  provider$.Provider = provider$.Provider$();
  dart.defineLazy(provider$.Provider, {
    /*provider$.Provider.debugCheckInvalidValueType*/get debugCheckInvalidValueType() {
      return dart.fn((T, value) => {
        if (!dart.fn(() => {
          if (change_notifier.Listenable.is(value) || async.Stream.is(value)) {
            dart.throw(assertions.FlutterError.new("Tried to use Provider with a subtype of Listenable/Stream (" + dart.str(dart.wrapType(T)) + ").\n\nThis is likely a mistake, as Provider will not automatically update dependents\nwhen " + dart.str(dart.wrapType(T)) + " is updated. Instead, consider changing Provider for more specific\nimplementation that handles the update mechanism, such as:\n\n- ListenableProvider\n- ChangeNotifierProvider\n- ValueListenableProvider\n- StreamProvider\n\nAlternatively, if you are making your own provider, consider using InheritedProvider.\n\nIf you think that this is not an error, you can disable this check by setting\nProvider.debugCheckInvalidValueType to `null` in your main file:\n\n```\nvoid main() {\n  Provider.debugCheckInvalidValueType = null;\n\n  runApp(MyApp());\n}\n```\n"));
          }
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[10], 385, 12, "() {\n      if (value is Listenable || value is Stream) {\n        throw FlutterError('''\nTried to use Provider with a subtype of Listenable/Stream ($T).\n\nThis is likely a mistake, as Provider will not automatically update dependents\nwhen $T is updated. Instead, consider changing Provider for more specific\nimplementation that handles the update mechanism, such as:\n\n- ListenableProvider\n- ChangeNotifierProvider\n- ValueListenableProvider\n- StreamProvider\n\nAlternatively, if you are making your own provider, consider using InheritedProvider.\n\nIf you think that this is not an error, you can disable this check by setting\nProvider.debugCheckInvalidValueType to `null` in your main file:\n\n```\nvoid main() {\n  Provider.debugCheckInvalidValueType = null;\n\n  runApp(MyApp());\n}\n```\n''');\n      }\n      return true;\n    }()");
      }, T$.TTovoid$1());
    },
    set debugCheckInvalidValueType(value) {}
  }, false);
  dart.addTypeTests(provider$.Provider, _is_Provider_default);
  var valueType$ = dart.privateName(provider$, "ProviderNullException.valueType");
  var widgetType$ = dart.privateName(provider$, "ProviderNullException.widgetType");
  provider$.ProviderNullException = class ProviderNullException extends core.Object {
    get valueType() {
      return this[valueType$];
    }
    set valueType(value) {
      super.valueType = value;
    }
    get widgetType() {
      return this[widgetType$];
    }
    set widgetType(value) {
      super.widgetType = value;
    }
    static ['_#new#tearOff'](valueType, widgetType) {
      return new provider$.ProviderNullException.new(valueType, widgetType);
    }
    toString() {
      ;
      return "Error: The widget " + dart.str(this.widgetType) + " tried to read Provider<" + dart.str(this.valueType) + "> but the matching\nprovider returned null.\n\nTo fix the error, consider changing Provider<" + dart.str(this.valueType) + "> to Provider<" + dart.str(this.valueType) + "?>.\n";
    }
  };
  (provider$.ProviderNullException.new = function(valueType, widgetType) {
    this[valueType$] = valueType;
    this[widgetType$] = widgetType;
    ;
  }).prototype = provider$.ProviderNullException.prototype;
  dart.addTypeTests(provider$.ProviderNullException);
  dart.addTypeCaches(provider$.ProviderNullException);
  provider$.ProviderNullException[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(provider$.ProviderNullException, I[4]);
  dart.setFieldSignature(provider$.ProviderNullException, () => ({
    __proto__: dart.getFields(provider$.ProviderNullException.__proto__),
    valueType: dart.finalFieldType(core.Type),
    widgetType: dart.finalFieldType(core.Type)
  }));
  dart.defineExtensionMethods(provider$.ProviderNullException, ['toString']);
  var valueType$0 = dart.privateName(provider$, "ProviderNotFoundException.valueType");
  var widgetType$0 = dart.privateName(provider$, "ProviderNotFoundException.widgetType");
  provider$.ProviderNotFoundException = class ProviderNotFoundException extends core.Object {
    get valueType() {
      return this[valueType$0];
    }
    set valueType(value) {
      super.valueType = value;
    }
    get widgetType() {
      return this[widgetType$0];
    }
    set widgetType(value) {
      super.widgetType = value;
    }
    static ['_#new#tearOff'](valueType, widgetType) {
      return new provider$.ProviderNotFoundException.new(valueType, widgetType);
    }
    toString() {
      ;
      return "Error: Could not find the correct Provider<" + dart.str(this.valueType) + "> above this " + dart.str(this.widgetType) + " Widget\n\nThis happens because you used a `BuildContext` that does not include the provider\nof your choice. There are a few common scenarios:\n\n- You added a new provider in your `main.dart` and performed a hot-reload.\n  To fix, perform a hot-restart.\n\n- The provider you are trying to read is in a different route.\n\n  Providers are \"scoped\". So if you insert of provider inside a route, then\n  other routes will not be able to access that provider.\n\n- You used a `BuildContext` that is an ancestor of the provider you are trying to read.\n\n  Make sure that " + dart.str(this.widgetType) + " is under your MultiProvider/Provider<" + dart.str(this.valueType) + ">.\n  This usually happens when you are creating a provider and trying to read it immediately.\n\n  For example, instead of:\n\n  ```\n  Widget build(BuildContext context) {\n    return Provider<Example>(\n      create: (_) => Example(),\n      // Will throw a ProviderNotFoundError, because `context` is associated\n      // to the widget that is the parent of `Provider<Example>`\n      child: Text(context.watch<Example>().toString()),\n    );\n  }\n  ```\n\n  consider using `builder` like so:\n\n  ```\n  Widget build(BuildContext context) {\n    return Provider<Example>(\n      create: (_) => Example(),\n      // we use `builder` to obtain a new `BuildContext` that has access to the provider\n      builder: (context, child) {\n        // No longer throws\n        return Text(context.watch<Example>().toString());\n      }\n    );\n  }\n  ```\n\nIf none of these solutions work, consider asking for help on StackOverflow:\nhttps://stackoverflow.com/questions/tagged/flutter\n";
    }
  };
  (provider$.ProviderNotFoundException.new = function(valueType, widgetType) {
    this[valueType$0] = valueType;
    this[widgetType$0] = widgetType;
    ;
  }).prototype = provider$.ProviderNotFoundException.prototype;
  dart.addTypeTests(provider$.ProviderNotFoundException);
  dart.addTypeCaches(provider$.ProviderNotFoundException);
  provider$.ProviderNotFoundException[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(provider$.ProviderNotFoundException, I[4]);
  dart.setFieldSignature(provider$.ProviderNotFoundException, () => ({
    __proto__: dart.getFields(provider$.ProviderNotFoundException.__proto__),
    valueType: dart.finalFieldType(core.Type),
    widgetType: dart.finalFieldType(core.Type)
  }));
  dart.defineExtensionMethods(provider$.ProviderNotFoundException, ['toString']);
  const _is__Delegate_default = Symbol('_is__Delegate_default');
  provider$._Delegate$ = dart.generic(T => {
    class _Delegate extends core.Object {
      debugFillProperties(properties) {
      }
    }
    (_Delegate.new = function() {
      ;
    }).prototype = _Delegate.prototype;
    dart.addTypeTests(_Delegate);
    _Delegate.prototype[_is__Delegate_default] = true;
    dart.addTypeCaches(_Delegate);
    dart.setMethodSignature(_Delegate, () => ({
      __proto__: dart.getMethods(_Delegate.__proto__),
      debugFillProperties: dart.fnType(dart.void, [diagnostics.DiagnosticPropertiesBuilder])
    }));
    dart.setLibraryUri(_Delegate, I[4]);
    return _Delegate;
  });
  provider$._Delegate = provider$._Delegate$();
  dart.addTypeTests(provider$._Delegate, _is__Delegate_default);
  const _is__DeferredDelegate_default = Symbol('_is__DeferredDelegate_default');
  provider$._DeferredDelegate$ = dart.generic((T, R) => {
    class _DeferredDelegate extends provider$._Delegate$(R) {}
    (_DeferredDelegate.new = function(updateShouldNotify, startListening) {
      this.updateShouldNotify = updateShouldNotify;
      this.startListening = startListening;
      ;
    }).prototype = _DeferredDelegate.prototype;
    dart.addTypeTests(_DeferredDelegate);
    _DeferredDelegate.prototype[_is__DeferredDelegate_default] = true;
    dart.addTypeCaches(_DeferredDelegate);
    dart.setLibraryUri(_DeferredDelegate, I[4]);
    dart.setFieldSignature(_DeferredDelegate, () => ({
      __proto__: dart.getFields(_DeferredDelegate.__proto__),
      updateShouldNotify: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [R, R]))),
      startListening: dart.finalFieldType(dart.fnType(dart.fnType(dart.void, []), [provider$.InheritedContext$(dart.nullable(R)), dart.fnType(dart.void, [R]), T, dart.nullable(R)]))
    }));
    return _DeferredDelegate;
  });
  provider$._DeferredDelegate = provider$._DeferredDelegate$();
  dart.addTypeTests(provider$._DeferredDelegate, _is__DeferredDelegate_default);
  var _removeListener = dart.privateName(provider$, "_removeListener");
  var _value = dart.privateName(provider$, "_value");
  var _hasValue = dart.privateName(provider$, "_hasValue");
  var _isNotifyDependentsEnabled = dart.privateName(provider$, "_isNotifyDependentsEnabled");
  var element = dart.privateName(provider$, "_DelegateState.element");
  var _debugSetInheritedLock = dart.privateName(provider$, "_debugSetInheritedLock");
  const _is__DelegateState_default = Symbol('_is__DelegateState_default');
  provider$._DelegateState$ = dart.generic((T, D) => {
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$_InheritedProviderScopeElementOfTN = () => (__t$_InheritedProviderScopeElementOfTN = dart.constFn(provider$._InheritedProviderScopeElement$(__t$TN())))();
    var __t$_InheritedProviderScopeElementNOfTN = () => (__t$_InheritedProviderScopeElementNOfTN = dart.constFn(dart.nullable(__t$_InheritedProviderScopeElementOfTN())))();
    class _DelegateState extends core.Object {
      get element() {
        return this[element];
      }
      set element(value) {
        this[element] = __t$_InheritedProviderScopeElementNOfTN().as(value);
      }
      get delegate() {
        return D.as(dart.nullCheck(this.element).widget.owner[_delegate]);
      }
      debugSetInheritedLock(value) {
        return dart.nullCheck(this.element)[_debugSetInheritedLock](value);
      }
      willUpdateDelegate(newDelegate) {
        D.as(newDelegate);
        return false;
      }
      dispose() {
      }
      debugFillProperties(properties) {
      }
      build(opts) {
        let isBuildFromExternalSources = opts && 'isBuildFromExternalSources' in opts ? opts.isBuildFromExternalSources : null;
      }
    }
    (_DelegateState.new = function() {
      this[element] = null;
      ;
    }).prototype = _DelegateState.prototype;
    dart.addTypeTests(_DelegateState);
    _DelegateState.prototype[_is__DelegateState_default] = true;
    dart.addTypeCaches(_DelegateState);
    dart.setMethodSignature(_DelegateState, () => ({
      __proto__: dart.getMethods(_DelegateState.__proto__),
      debugSetInheritedLock: dart.fnType(core.bool, [core.bool]),
      willUpdateDelegate: dart.fnType(core.bool, [dart.nullable(core.Object)]),
      dispose: dart.fnType(dart.void, []),
      debugFillProperties: dart.fnType(dart.void, [diagnostics.DiagnosticPropertiesBuilder]),
      build: dart.fnType(dart.void, [], {}, {isBuildFromExternalSources: core.bool})
    }));
    dart.setGetterSignature(_DelegateState, () => ({
      __proto__: dart.getGetters(_DelegateState.__proto__),
      delegate: D
    }));
    dart.setLibraryUri(_DelegateState, I[4]);
    dart.setFieldSignature(_DelegateState, () => ({
      __proto__: dart.getFields(_DelegateState.__proto__),
      element: dart.fieldType(dart.nullable(provider$._InheritedProviderScopeElement$(dart.nullable(T))))
    }));
    return _DelegateState;
  });
  provider$._DelegateState = provider$._DelegateState$();
  dart.addTypeTests(provider$._DelegateState, _is__DelegateState_default);
  const _is__DeferredDelegateState_default = Symbol('_is__DeferredDelegateState_default');
  provider$._DeferredDelegateState$ = dart.generic((T, R, W) => {
    var __t$InheritedContextOfRNAndFnAndT__ToFn = () => (__t$InheritedContextOfRNAndFnAndT__ToFn = dart.constFn(dart.fnType(T$.VoidTovoid(), [__t$InheritedContextOfRN(), __t$RTovoid(), T, __t$RN()])))();
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$InheritedContextOfRN = () => (__t$InheritedContextOfRN = dart.constFn(provider$.InheritedContext$(__t$RN())))();
    var __t$RTovoid = () => (__t$RTovoid = dart.constFn(dart.fnType(dart.void, [R])))();
    var __t$RAndRTobool = () => (__t$RAndRTobool = dart.constFn(dart.fnType(core.bool, [R, R])))();
    var __t$RAndRToNbool = () => (__t$RAndRToNbool = dart.constFn(dart.nullable(__t$RAndRTobool())))();
    class _DeferredDelegateState extends provider$._DelegateState$(R, W) {
      get value() {
        let t4, t3, t2, t1, t0;
        dart.nullCheck(this.element)[_isNotifyDependentsEnabled] = false;
        this[_removeListener] == null ? this[_removeListener] = (t0 = this.delegate, t1 = dart.nullCheck(this.element), t2 = dart.bind(this, 'setState'), t3 = this.controller, t4 = this[_value], __t$InheritedContextOfRNAndFnAndT__ToFn().as(t0.startListening)(t1, t2, t3, t4)) : null;
        dart.nullCheck(this.element)[_isNotifyDependentsEnabled] = true;
        if (!dart.nullCheck(this.element).hasValue) dart.assertFailed("The callback \"startListening\" was called, but it left DeferredInhertitedProviderElement<" + dart.str(dart.wrapType(T)) + ", " + dart.str(dart.wrapType(R)) + ">\nin an uninitialized state.\n\nIt is necessary for \"startListening\" to call \"setState\" at least once the very\nfirst time \"value\" is requested.\n\nTo fix, consider:\n\nDeferredInheritedProvider(\n  ...,\n  startListening: (element, setState, controller, value) {\n    if (!element.hasValue) {\n      setState(myInitialValue); // TODO replace myInitialValue with your own\n    }\n    ...\n  }\n)\n    ", I[11], 109, 12, "element!.hasValue");
        if (!(this[_removeListener] != null)) dart.assertFailed(null, I[11], 128, 12, "_removeListener != null");
        return R.as(this[_value]);
      }
      dispose() {
        let t0;
        super.dispose();
        t0 = this[_removeListener];
        t0 == null ? null : t0();
      }
      get isLoaded() {
        return this[_removeListener] != null;
      }
      get hasValue() {
        return this[_hasValue];
      }
      setState(value) {
        R.as(value);
        if (this[_hasValue]) {
          let shouldNotify = __t$RAndRToNbool().as(this.delegate.updateShouldNotify) != null ? dart.nullCheck(__t$RAndRToNbool().as(this.delegate.updateShouldNotify))(R.as(this[_value]), value) : !dart.equals(this[_value], value);
          if (shouldNotify) {
            dart.nullCheck(this.element).markNeedsNotifyDependents();
          }
        }
        this[_hasValue] = true;
        this[_value] = value;
      }
    }
    (_DeferredDelegateState.new = function() {
      this[_removeListener] = null;
      this[_value] = null;
      this[_hasValue] = false;
      _DeferredDelegateState.__proto__.new.call(this);
      ;
    }).prototype = _DeferredDelegateState.prototype;
    dart.addTypeTests(_DeferredDelegateState);
    _DeferredDelegateState.prototype[_is__DeferredDelegateState_default] = true;
    dart.addTypeCaches(_DeferredDelegateState);
    dart.setMethodSignature(_DeferredDelegateState, () => ({
      __proto__: dart.getMethods(_DeferredDelegateState.__proto__),
      setState: dart.fnType(dart.void, [dart.nullable(core.Object)])
    }));
    dart.setGetterSignature(_DeferredDelegateState, () => ({
      __proto__: dart.getGetters(_DeferredDelegateState.__proto__),
      value: R,
      isLoaded: core.bool,
      hasValue: core.bool
    }));
    dart.setLibraryUri(_DeferredDelegateState, I[4]);
    dart.setFieldSignature(_DeferredDelegateState, () => ({
      __proto__: dart.getFields(_DeferredDelegateState.__proto__),
      [_removeListener]: dart.fieldType(dart.nullable(dart.fnType(dart.void, []))),
      [_value]: dart.fieldType(dart.nullable(R)),
      [_hasValue]: dart.fieldType(core.bool)
    }));
    return _DeferredDelegateState;
  });
  provider$._DeferredDelegateState = provider$._DeferredDelegateState$();
  dart.addTypeTests(provider$._DeferredDelegateState, _is__DeferredDelegateState_default);
  const _is__CreateDeferredInheritedProvider_default = Symbol('_is__CreateDeferredInheritedProvider_default');
  provider$._CreateDeferredInheritedProvider$ = dart.generic((T, R) => {
    var __t$_CreateDeferredInheritedProviderElementOfT$R = () => (__t$_CreateDeferredInheritedProviderElementOfT$R = dart.constFn(provider$._CreateDeferredInheritedProviderElement$(T, R)))();
    class _CreateDeferredInheritedProvider extends provider$._DeferredDelegate$(T, R) {
      static ['_#new#tearOff'](T, R, opts) {
        let create = opts && 'create' in opts ? opts.create : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        return new (provider$._CreateDeferredInheritedProvider$(T, R)).new({create: create, dispose: dispose, updateShouldNotify: updateShouldNotify, startListening: startListening});
      }
      createState() {
        return new (__t$_CreateDeferredInheritedProviderElementOfT$R()).new();
      }
    }
    (_CreateDeferredInheritedProvider.new = function(opts) {
      let create = opts && 'create' in opts ? opts.create : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      this.create = create;
      this.dispose = dispose;
      _CreateDeferredInheritedProvider.__proto__.new.call(this, updateShouldNotify, startListening);
      ;
    }).prototype = _CreateDeferredInheritedProvider.prototype;
    dart.addTypeTests(_CreateDeferredInheritedProvider);
    _CreateDeferredInheritedProvider.prototype[_is__CreateDeferredInheritedProvider_default] = true;
    dart.addTypeCaches(_CreateDeferredInheritedProvider);
    dart.setMethodSignature(_CreateDeferredInheritedProvider, () => ({
      __proto__: dart.getMethods(_CreateDeferredInheritedProvider.__proto__),
      createState: dart.fnType(provider$._CreateDeferredInheritedProviderElement$(T, R), [])
    }));
    dart.setLibraryUri(_CreateDeferredInheritedProvider, I[4]);
    dart.setFieldSignature(_CreateDeferredInheritedProvider, () => ({
      __proto__: dart.getFields(_CreateDeferredInheritedProvider.__proto__),
      create: dart.finalFieldType(dart.fnType(T, [framework.BuildContext])),
      dispose: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [framework.BuildContext, T])))
    }));
    return _CreateDeferredInheritedProvider;
  });
  provider$._CreateDeferredInheritedProvider = provider$._CreateDeferredInheritedProvider$();
  dart.addTypeTests(provider$._CreateDeferredInheritedProvider, _is__CreateDeferredInheritedProvider_default);
  var _didBuild = dart.privateName(provider$, "_didBuild");
  var _controller = dart.privateName(provider$, "_controller");
  const _is__CreateDeferredInheritedProviderElement_default = Symbol('_is__CreateDeferredInheritedProviderElement_default');
  provider$._CreateDeferredInheritedProviderElement$ = dart.generic((T, R) => {
    var __t$BuildContextAndTTovoid = () => (__t$BuildContextAndTTovoid = dart.constFn(dart.fnType(dart.void, [framework.BuildContext, T])))();
    var __t$BuildContextAndTToNvoid = () => (__t$BuildContextAndTToNvoid = dart.constFn(dart.nullable(__t$BuildContextAndTTovoid())))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    var __t$DiagnosticsPropertyOfR = () => (__t$DiagnosticsPropertyOfR = dart.constFn(diagnostics.DiagnosticsProperty$(R)))();
    class _CreateDeferredInheritedProviderElement extends provider$._DeferredDelegateState$(T, R, provider$._CreateDeferredInheritedProvider$(T, R)) {
      get controller() {
        let t1, t0;
        if (!this[_didBuild]) {
          if (!this.debugSetInheritedLock(true)) dart.assertFailed(null, I[11], 186, 14, "debugSetInheritedLock(true)");
          let _debugPreviousIsInInheritedProviderCreate = null;
          let _debugPreviousIsInInheritedProviderUpdate = null;
          if (!dart.fn(() => {
            _debugPreviousIsInInheritedProviderCreate = provider$.debugIsInInheritedProviderCreate;
            _debugPreviousIsInInheritedProviderUpdate = provider$.debugIsInInheritedProviderUpdate;
            return true;
          }, T$.VoidTobool())()) dart.assertFailed(null, I[11], 190, 14, "() {\n        _debugPreviousIsInInheritedProviderCreate =\n            debugIsInInheritedProviderCreate;\n        _debugPreviousIsInInheritedProviderUpdate =\n            debugIsInInheritedProviderUpdate;\n        return true;\n      }()");
          try {
            if (!dart.fn(() => {
              provider$.debugIsInInheritedProviderCreate = true;
              provider$.debugIsInInheritedProviderUpdate = false;
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[11], 199, 16, "() {\n          debugIsInInheritedProviderCreate = true;\n          debugIsInInheritedProviderUpdate = false;\n          return true;\n        }()");
            this[_controller] = (t0 = this.delegate, t1 = dart.nullCheck(this.element), t0.create(t1));
          } finally {
            if (!dart.fn(() => {
              provider$.debugIsInInheritedProviderCreate = dart.nullCheck(_debugPreviousIsInInheritedProviderCreate);
              provider$.debugIsInInheritedProviderUpdate = dart.nullCheck(_debugPreviousIsInInheritedProviderUpdate);
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[11], 206, 16, "() {\n          debugIsInInheritedProviderCreate =\n              _debugPreviousIsInInheritedProviderCreate!;\n          debugIsInInheritedProviderUpdate =\n              _debugPreviousIsInInheritedProviderUpdate!;\n          return true;\n        }()");
          }
          this[_didBuild] = true;
        }
        return T.as(this[_controller]);
      }
      dispose() {
        let t0;
        super.dispose();
        if (this[_didBuild]) {
          t0 = __t$BuildContextAndTToNvoid().as(this.delegate.dispose);
          t0 == null ? null : t0(dart.nullCheck(this.element), T.as(this[_controller]));
        }
      }
      debugFillProperties(properties) {
        let t0, t0$;
        super.debugFillProperties(properties);
        if (this.isLoaded) {
          t0 = properties;
          (() => {
            t0.add(new (__t$DiagnosticsPropertyOfT()).new("controller", this.controller));
            t0.add(new (__t$DiagnosticsPropertyOfR()).new("value", this.value));
            return t0;
          })();
        } else {
          t0$ = properties;
          (() => {
            t0$.add(new diagnostics.FlagProperty.new("controller", {value: true, showName: true, ifTrue: "<not yet loaded>"}));
            t0$.add(new diagnostics.FlagProperty.new("value", {value: true, showName: true, ifTrue: "<not yet loaded>"}));
            return t0$;
          })();
        }
      }
      static ['_#new#tearOff'](T, R) {
        return new (provider$._CreateDeferredInheritedProviderElement$(T, R)).new();
      }
    }
    (_CreateDeferredInheritedProviderElement.new = function() {
      this[_didBuild] = false;
      this[_controller] = null;
      _CreateDeferredInheritedProviderElement.__proto__.new.call(this);
      ;
    }).prototype = _CreateDeferredInheritedProviderElement.prototype;
    dart.addTypeTests(_CreateDeferredInheritedProviderElement);
    _CreateDeferredInheritedProviderElement.prototype[_is__CreateDeferredInheritedProviderElement_default] = true;
    dart.addTypeCaches(_CreateDeferredInheritedProviderElement);
    dart.setGetterSignature(_CreateDeferredInheritedProviderElement, () => ({
      __proto__: dart.getGetters(_CreateDeferredInheritedProviderElement.__proto__),
      controller: T
    }));
    dart.setLibraryUri(_CreateDeferredInheritedProviderElement, I[4]);
    dart.setFieldSignature(_CreateDeferredInheritedProviderElement, () => ({
      __proto__: dart.getFields(_CreateDeferredInheritedProviderElement.__proto__),
      [_didBuild]: dart.fieldType(core.bool),
      [_controller]: dart.fieldType(dart.nullable(T))
    }));
    return _CreateDeferredInheritedProviderElement;
  });
  provider$._CreateDeferredInheritedProviderElement = provider$._CreateDeferredInheritedProviderElement$();
  dart.addTypeTests(provider$._CreateDeferredInheritedProviderElement, _is__CreateDeferredInheritedProviderElement_default);
  const _is__ValueDeferredInheritedProvider_default = Symbol('_is__ValueDeferredInheritedProvider_default');
  provider$._ValueDeferredInheritedProvider$ = dart.generic((T, R) => {
    var __t$_ValueDeferredInheritedProviderStateOfT$R = () => (__t$_ValueDeferredInheritedProviderStateOfT$R = dart.constFn(provider$._ValueDeferredInheritedProviderState$(T, R)))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    class _ValueDeferredInheritedProvider extends provider$._DeferredDelegate$(T, R) {
      static ['_#new#tearOff'](T, R, value, updateShouldNotify, startListening) {
        return new (provider$._ValueDeferredInheritedProvider$(T, R)).new(value, updateShouldNotify, startListening);
      }
      createState() {
        return new (__t$_ValueDeferredInheritedProviderStateOfT$R()).new();
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new (__t$DiagnosticsPropertyOfT()).new("controller", this.value));
      }
    }
    (_ValueDeferredInheritedProvider.new = function(value, updateShouldNotify, startListening) {
      this.value = value;
      _ValueDeferredInheritedProvider.__proto__.new.call(this, updateShouldNotify, startListening);
      ;
    }).prototype = _ValueDeferredInheritedProvider.prototype;
    dart.addTypeTests(_ValueDeferredInheritedProvider);
    _ValueDeferredInheritedProvider.prototype[_is__ValueDeferredInheritedProvider_default] = true;
    dart.addTypeCaches(_ValueDeferredInheritedProvider);
    dart.setMethodSignature(_ValueDeferredInheritedProvider, () => ({
      __proto__: dart.getMethods(_ValueDeferredInheritedProvider.__proto__),
      createState: dart.fnType(provider$._ValueDeferredInheritedProviderState$(T, R), [])
    }));
    dart.setLibraryUri(_ValueDeferredInheritedProvider, I[4]);
    dart.setFieldSignature(_ValueDeferredInheritedProvider, () => ({
      __proto__: dart.getFields(_ValueDeferredInheritedProvider.__proto__),
      value: dart.finalFieldType(T)
    }));
    return _ValueDeferredInheritedProvider;
  });
  provider$._ValueDeferredInheritedProvider = provider$._ValueDeferredInheritedProvider$();
  dart.addTypeTests(provider$._ValueDeferredInheritedProvider, _is__ValueDeferredInheritedProvider_default);
  const _is__ValueDeferredInheritedProviderState_default = Symbol('_is__ValueDeferredInheritedProviderState_default');
  provider$._ValueDeferredInheritedProviderState$ = dart.generic((T, R) => {
    var __t$_ValueDeferredInheritedProviderOfT$R = () => (__t$_ValueDeferredInheritedProviderOfT$R = dart.constFn(provider$._ValueDeferredInheritedProvider$(T, R)))();
    var __t$DiagnosticsPropertyOfR = () => (__t$DiagnosticsPropertyOfR = dart.constFn(diagnostics.DiagnosticsProperty$(R)))();
    class _ValueDeferredInheritedProviderState extends provider$._DeferredDelegateState$(T, R, provider$._ValueDeferredInheritedProvider$(T, R)) {
      willUpdateDelegate(oldDelegate) {
        __t$_ValueDeferredInheritedProviderOfT$R().as(oldDelegate);
        if (!dart.equals(this.delegate.value, oldDelegate.value)) {
          if (this[_removeListener] != null) {
            dart.nullCheck(this[_removeListener])();
            this[_removeListener] = null;
          }
          return true;
        }
        return false;
      }
      get controller() {
        return this.delegate.value;
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        if (this[_removeListener] != null) {
          properties.add(new (__t$DiagnosticsPropertyOfR()).new("value", this.value));
        } else {
          properties.add(new diagnostics.FlagProperty.new("value", {value: true, showName: true, ifTrue: "<not yet loaded>"}));
        }
      }
      static ['_#new#tearOff'](T, R) {
        return new (provider$._ValueDeferredInheritedProviderState$(T, R)).new();
      }
    }
    (_ValueDeferredInheritedProviderState.new = function() {
      _ValueDeferredInheritedProviderState.__proto__.new.call(this);
      ;
    }).prototype = _ValueDeferredInheritedProviderState.prototype;
    dart.addTypeTests(_ValueDeferredInheritedProviderState);
    _ValueDeferredInheritedProviderState.prototype[_is__ValueDeferredInheritedProviderState_default] = true;
    dart.addTypeCaches(_ValueDeferredInheritedProviderState);
    dart.setGetterSignature(_ValueDeferredInheritedProviderState, () => ({
      __proto__: dart.getGetters(_ValueDeferredInheritedProviderState.__proto__),
      controller: T
    }));
    dart.setLibraryUri(_ValueDeferredInheritedProviderState, I[4]);
    return _ValueDeferredInheritedProviderState;
  });
  provider$._ValueDeferredInheritedProviderState = provider$._ValueDeferredInheritedProviderState$();
  dart.addTypeTests(provider$._ValueDeferredInheritedProviderState, _is__ValueDeferredInheritedProviderState_default);
  var eventKind$ = dart.privateName(provider$, "PostEventCall.eventKind");
  var event$ = dart.privateName(provider$, "PostEventCall.event");
  provider$.PostEventCall = class PostEventCall extends core.Object {
    get eventKind() {
      return this[eventKind$];
    }
    set eventKind(value) {
      super.eventKind = value;
    }
    get event() {
      return this[event$];
    }
    set event(value) {
      super.event = value;
    }
    static ['_#_#tearOff'](eventKind, event) {
      return new provider$.PostEventCall.__(eventKind, event);
    }
  };
  (provider$.PostEventCall.__ = function(eventKind, event) {
    this[eventKind$] = eventKind;
    this[event$] = event;
    ;
  }).prototype = provider$.PostEventCall.prototype;
  dart.addTypeTests(provider$.PostEventCall);
  dart.addTypeCaches(provider$.PostEventCall);
  dart.setLibraryUri(provider$.PostEventCall, I[4]);
  dart.setFieldSignature(provider$.PostEventCall, () => ({
    __proto__: dart.getFields(provider$.PostEventCall.__proto__),
    eventKind: dart.finalFieldType(core.String),
    event: dart.finalFieldType(core.Map$(dart.nullable(core.Object), dart.nullable(core.Object)))
  }));
  var logs = dart.privateName(provider$, "PostEventSpy.logs");
  var _postEvent = dart.privateName(provider$, "_postEvent");
  provider$.PostEventSpy = class PostEventSpy extends core.Object {
    get logs() {
      return this[logs];
    }
    set logs(value) {
      super.logs = value;
    }
    static ['_#_#tearOff']() {
      return new provider$.PostEventSpy.__();
    }
    dispose() {
      if (!dart.equals(provider$._debugPostEventOverride, dart.bind(this, _postEvent))) dart.assertFailed("disposed a spy different from the current spy", I[12], 43, 7, "_debugPostEventOverride == _postEvent");
      provider$._debugPostEventOverride = null;
    }
    [_postEvent](eventKind, event) {
      this.logs[$add](new provider$.PostEventCall.__(eventKind, event));
    }
  };
  (provider$.PostEventSpy.__ = function() {
    this[logs] = T$.JSArrayOfPostEventCall().of([]);
    ;
  }).prototype = provider$.PostEventSpy.prototype;
  dart.addTypeTests(provider$.PostEventSpy);
  dart.addTypeCaches(provider$.PostEventSpy);
  dart.setMethodSignature(provider$.PostEventSpy, () => ({
    __proto__: dart.getMethods(provider$.PostEventSpy.__proto__),
    dispose: dart.fnType(dart.void, []),
    [_postEvent]: dart.fnType(dart.void, [core.String, core.Map$(dart.nullable(core.Object), dart.nullable(core.Object))])
  }));
  dart.setLibraryUri(provider$.PostEventSpy, I[4]);
  dart.setFieldSignature(provider$.PostEventSpy, () => ({
    __proto__: dart.getFields(provider$.PostEventSpy.__proto__),
    logs: dart.finalFieldType(core.List$(provider$.PostEventCall))
  }));
  var id$ = dart.privateName(provider$, "ProviderNode.id");
  var type$ = dart.privateName(provider$, "ProviderNode.type");
  var childrenNodeIds$ = dart.privateName(provider$, "ProviderNode.childrenNodeIds");
  var _element = dart.privateName(provider$, "ProviderNode._element");
  var _element$ = dart.privateName(provider$, "_element");
  var _delegateState = dart.privateName(provider$, "_delegateState");
  provider$.ProviderNode = class ProviderNode extends core.Object {
    get id() {
      return this[id$];
    }
    set id(value) {
      super.id = value;
    }
    get type() {
      return this[type$];
    }
    set type(value) {
      super.type = value;
    }
    get childrenNodeIds() {
      return this[childrenNodeIds$];
    }
    set childrenNodeIds(value) {
      super.childrenNodeIds = value;
    }
    get [_element$]() {
      return this[_element];
    }
    set [_element$](value) {
      super[_element$] = value;
    }
    static ['_#new#tearOff'](opts) {
      let id = opts && 'id' in opts ? opts.id : null;
      let childrenNodeIds = opts && 'childrenNodeIds' in opts ? opts.childrenNodeIds : null;
      let type = opts && 'type' in opts ? opts.type : null;
      let element = opts && 'element' in opts ? opts.element : null;
      return new provider$.ProviderNode.new({id: id, childrenNodeIds: childrenNodeIds, type: type, element: element});
    }
    get value() {
      return this[_element$][_delegateState].value;
    }
  };
  (provider$.ProviderNode.new = function(opts) {
    let id = opts && 'id' in opts ? opts.id : null;
    let childrenNodeIds = opts && 'childrenNodeIds' in opts ? opts.childrenNodeIds : null;
    let type = opts && 'type' in opts ? opts.type : null;
    let element = opts && 'element' in opts ? opts.element : null;
    this[id$] = id;
    this[childrenNodeIds$] = childrenNodeIds;
    this[type$] = type;
    this[_element] = element;
    ;
  }).prototype = provider$.ProviderNode.prototype;
  dart.addTypeTests(provider$.ProviderNode);
  dart.addTypeCaches(provider$.ProviderNode);
  dart.setGetterSignature(provider$.ProviderNode, () => ({
    __proto__: dart.getGetters(provider$.ProviderNode.__proto__),
    value: dart.nullable(core.Object)
  }));
  dart.setLibraryUri(provider$.ProviderNode, I[4]);
  dart.setFieldSignature(provider$.ProviderNode, () => ({
    __proto__: dart.getFields(provider$.ProviderNode.__proto__),
    id: dart.finalFieldType(core.String),
    type: dart.finalFieldType(core.String),
    childrenNodeIds: dart.finalFieldType(core.List$(core.String)),
    [_element$]: dart.finalFieldType(provider$._InheritedProviderScopeElement$(dart.nullable(core.Object)))
  }));
  var _providerDetails = dart.privateName(provider$, "_providerDetails");
  provider$.ProviderBinding = class ProviderBinding extends core.Object {
    static ['_#_#tearOff']() {
      return new provider$.ProviderBinding.__();
    }
    get providerDetails() {
      return this[_providerDetails];
    }
    set providerDetails(value) {
      provider$.debugPostEvent("provider:provider_list_changed", new _js_helper.LinkedMap.new());
      this[_providerDetails] = value;
    }
    providerDidChange(providerId) {
      provider$.debugPostEvent("provider:provider_changed", new _js_helper.LinkedMap.from(["id", providerId]));
    }
  };
  (provider$.ProviderBinding.__ = function() {
    this[_providerDetails] = new (T$.IdentityMapOfString$ProviderNode()).new();
    ;
  }).prototype = provider$.ProviderBinding.prototype;
  dart.addTypeTests(provider$.ProviderBinding);
  dart.addTypeCaches(provider$.ProviderBinding);
  dart.setMethodSignature(provider$.ProviderBinding, () => ({
    __proto__: dart.getMethods(provider$.ProviderBinding.__proto__),
    providerDidChange: dart.fnType(dart.void, [core.String])
  }));
  dart.setGetterSignature(provider$.ProviderBinding, () => ({
    __proto__: dart.getGetters(provider$.ProviderBinding.__proto__),
    providerDetails: core.Map$(core.String, provider$.ProviderNode)
  }));
  dart.setSetterSignature(provider$.ProviderBinding, () => ({
    __proto__: dart.getSetters(provider$.ProviderBinding.__proto__),
    providerDetails: core.Map$(core.String, provider$.ProviderNode)
  }));
  dart.setLibraryUri(provider$.ProviderBinding, I[4]);
  dart.setFieldSignature(provider$.ProviderBinding, () => ({
    __proto__: dart.getFields(provider$.ProviderBinding.__proto__),
    [_providerDetails]: dart.fieldType(core.Map$(core.String, provider$.ProviderNode))
  }));
  dart.setStaticFieldSignature(provider$.ProviderBinding, () => ['debugInstance']);
  dart.defineLazy(provider$.ProviderBinding, {
    /*provider$.ProviderBinding.debugInstance*/get debugInstance() {
      return new provider$.ProviderBinding.__();
    }
  }, false);
  var _parent = dart.privateName(nested, "_parent");
  var _parent$ = dart.privateName(nested, "SingleChildWidgetElementMixin._parent");
  nested.SingleChildWidgetElementMixin = class SingleChildWidgetElementMixin extends framework.Element {};
  nested.SingleChildWidgetElementMixin[dart.mixinOn] = Element => class SingleChildWidgetElementMixin extends Element {
    get [_parent]() {
      return this[_parent$];
    }
    set [_parent](value) {
      this[_parent$] = value;
    }
    mount(parent, newSlot) {
      if (T$._NestedHookElementN().is(parent)) {
        this[_parent] = parent;
      }
      super.mount(parent, newSlot);
    }
    activate() {
      super.activate();
      this.visitAncestorElements(dart.fn(parent => {
        if (nested._NestedHookElement.is(parent)) {
          this[_parent] = parent;
        }
        return false;
      }, T$.ElementTobool()));
    }
  };
  (nested.SingleChildWidgetElementMixin[dart.mixinNew] = function() {
    this[_parent$] = null;
  }).prototype = nested.SingleChildWidgetElementMixin.prototype;
  dart.addTypeTests(nested.SingleChildWidgetElementMixin);
  dart.addTypeCaches(nested.SingleChildWidgetElementMixin);
  nested.SingleChildWidgetElementMixin[dart.implements] = () => [framework.Element];
  dart.setMethodSignature(nested.SingleChildWidgetElementMixin, () => ({
    __proto__: dart.getMethods(nested.SingleChildWidgetElementMixin.__proto__),
    mount: dart.fnType(dart.void, [dart.nullable(framework.Element), dart.dynamic])
  }));
  dart.setLibraryUri(nested.SingleChildWidgetElementMixin, I[3]);
  dart.setFieldSignature(nested.SingleChildWidgetElementMixin, () => ({
    __proto__: dart.getFields(nested.SingleChildWidgetElementMixin.__proto__),
    [_parent]: dart.fieldType(dart.nullable(nested._NestedHookElement))
  }));
  const StatelessElement_SingleChildWidgetElementMixin$36 = class StatelessElement_SingleChildWidgetElementMixin extends framework.StatelessElement {};
  (StatelessElement_SingleChildWidgetElementMixin$36.new = function(widget) {
    nested.SingleChildWidgetElementMixin[dart.mixinNew].call(this);
    StatelessElement_SingleChildWidgetElementMixin$36.__proto__.new.call(this, widget);
  }).prototype = StatelessElement_SingleChildWidgetElementMixin$36.prototype;
  dart.applyMixin(StatelessElement_SingleChildWidgetElementMixin$36, nested.SingleChildWidgetElementMixin);
  nested.SingleChildStatelessElement = class SingleChildStatelessElement extends StatelessElement_SingleChildWidgetElementMixin$36 {
    static ['_#new#tearOff'](widget) {
      return new nested.SingleChildStatelessElement.new(widget);
    }
    build() {
      if (this[_parent] != null) {
        return this.widget.buildWithChild(this, dart.nullCheck(this[_parent]).injectedChild);
      }
      return super.build();
    }
    get widget() {
      return nested.SingleChildStatelessWidget.as(super.widget);
    }
  };
  (nested.SingleChildStatelessElement.new = function(widget) {
    nested.SingleChildStatelessElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested.SingleChildStatelessElement.prototype;
  dart.addTypeTests(nested.SingleChildStatelessElement);
  dart.addTypeCaches(nested.SingleChildStatelessElement);
  dart.setGetterSignature(nested.SingleChildStatelessElement, () => ({
    __proto__: dart.getGetters(nested.SingleChildStatelessElement.__proto__),
    widget: nested.SingleChildStatelessWidget
  }));
  dart.setLibraryUri(nested.SingleChildStatelessElement, I[3]);
  const _is__InheritedProviderElement_default = Symbol('_is__InheritedProviderElement_default');
  provider$._InheritedProviderElement$ = dart.generic(T => {
    class _InheritedProviderElement extends nested.SingleChildStatelessElement {
      static ['_#new#tearOff'](T, widget) {
        return new (provider$._InheritedProviderElement$(T)).new(widget);
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        this.visitChildren(dart.fn(e => e.debugFillProperties(properties), T$.ElementTovoid()));
      }
    }
    (_InheritedProviderElement.new = function(widget) {
      _InheritedProviderElement.__proto__.new.call(this, widget);
      ;
    }).prototype = _InheritedProviderElement.prototype;
    dart.addTypeTests(_InheritedProviderElement);
    _InheritedProviderElement.prototype[_is__InheritedProviderElement_default] = true;
    dart.addTypeCaches(_InheritedProviderElement);
    dart.setLibraryUri(_InheritedProviderElement, I[4]);
    return _InheritedProviderElement;
  });
  provider$._InheritedProviderElement = provider$._InheritedProviderElement$();
  dart.addTypeTests(provider$._InheritedProviderElement, _is__InheritedProviderElement_default);
  const _is_InheritedContext_default = Symbol('_is_InheritedContext_default');
  provider$.InheritedContext$ = dart.generic(T => {
    class InheritedContext extends framework.BuildContext {}
    (InheritedContext.new = function() {
      ;
    }).prototype = InheritedContext.prototype;
    dart.addTypeTests(InheritedContext);
    InheritedContext.prototype[_is_InheritedContext_default] = true;
    dart.addTypeCaches(InheritedContext);
    dart.setLibraryUri(InheritedContext, I[4]);
    return InheritedContext;
  });
  provider$.InheritedContext = provider$.InheritedContext$();
  dart.addTypeTests(provider$.InheritedContext, _is_InheritedContext_default);
  var owner$ = dart.privateName(provider$, "_InheritedProviderScope.owner");
  var debugType$ = dart.privateName(provider$, "_InheritedProviderScope.debugType");
  const _is__InheritedProviderScope_default = Symbol('_is__InheritedProviderScope_default');
  provider$._InheritedProviderScope$ = dart.generic(T => {
    var __t$_InheritedProviderScopeElementOfT = () => (__t$_InheritedProviderScopeElementOfT = dart.constFn(provider$._InheritedProviderScopeElement$(T)))();
    class _InheritedProviderScope extends framework.InheritedWidget {
      get owner() {
        return this[owner$];
      }
      set owner(value) {
        super.owner = value;
      }
      get debugType() {
        return this[debugType$];
      }
      set debugType(value) {
        super.debugType = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let owner = opts && 'owner' in opts ? opts.owner : null;
        let debugType = opts && 'debugType' in opts ? opts.debugType : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$._InheritedProviderScope$(T)).new({owner: owner, debugType: debugType, child: child});
      }
      updateShouldNotify(oldWidget) {
        framework.InheritedWidget.as(oldWidget);
        return false;
      }
      createElement() {
        return new (__t$_InheritedProviderScopeElementOfT()).new(this);
      }
    }
    (_InheritedProviderScope.new = function(opts) {
      let owner = opts && 'owner' in opts ? opts.owner : null;
      let debugType = opts && 'debugType' in opts ? opts.debugType : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[owner$] = owner;
      this[debugType$] = debugType;
      if (!T.is(null)) dart.assertFailed(null, I[2], 341, 16, "null is T");
      _InheritedProviderScope.__proto__.new.call(this, {child: child});
      ;
    }).prototype = _InheritedProviderScope.prototype;
    dart.addTypeTests(_InheritedProviderScope);
    _InheritedProviderScope.prototype[_is__InheritedProviderScope_default] = true;
    dart.addTypeCaches(_InheritedProviderScope);
    dart.setMethodSignature(_InheritedProviderScope, () => ({
      __proto__: dart.getMethods(_InheritedProviderScope.__proto__),
      updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)]),
      createElement: dart.fnType(provider$._InheritedProviderScopeElement$(T), [])
    }));
    dart.setLibraryUri(_InheritedProviderScope, I[4]);
    dart.setFieldSignature(_InheritedProviderScope, () => ({
      __proto__: dart.getFields(_InheritedProviderScope.__proto__),
      owner: dart.finalFieldType(provider$.InheritedProvider$(T)),
      debugType: dart.finalFieldType(core.String)
    }));
    return _InheritedProviderScope;
  });
  provider$._InheritedProviderScope = provider$._InheritedProviderScope$();
  dart.addTypeTests(provider$._InheritedProviderScope, _is__InheritedProviderScope_default);
  const _is__Dependency_default = Symbol('_is__Dependency_default');
  provider$._Dependency$ = dart.generic(T => {
    var __t$TTobool = () => (__t$TTobool = dart.constFn(dart.fnType(core.bool, [T])))();
    var __t$JSArrayOfTTobool = () => (__t$JSArrayOfTTobool = dart.constFn(_interceptors.JSArray$(__t$TTobool())))();
    class _Dependency extends core.Object {
      static ['_#new#tearOff'](T) {
        return new (provider$._Dependency$(T)).new();
      }
    }
    (_Dependency.new = function() {
      this.shouldClearSelectors = false;
      this.shouldClearMutationScheduled = false;
      this.selectors = __t$JSArrayOfTTobool().of([]);
      ;
    }).prototype = _Dependency.prototype;
    dart.addTypeTests(_Dependency);
    _Dependency.prototype[_is__Dependency_default] = true;
    dart.addTypeCaches(_Dependency);
    dart.setLibraryUri(_Dependency, I[4]);
    dart.setFieldSignature(_Dependency, () => ({
      __proto__: dart.getFields(_Dependency.__proto__),
      shouldClearSelectors: dart.fieldType(core.bool),
      shouldClearMutationScheduled: dart.fieldType(core.bool),
      selectors: dart.finalFieldType(core.List$(dart.fnType(core.bool, [T])))
    }));
    return _Dependency;
  });
  provider$._Dependency = provider$._Dependency$();
  dart.addTypeTests(provider$._Dependency, _is__Dependency_default);
  var _shouldNotifyDependents = dart.privateName(provider$, "_shouldNotifyDependents");
  var _debugInheritLocked = dart.privateName(provider$, "_debugInheritLocked");
  var _updatedShouldNotify = dart.privateName(provider$, "_updatedShouldNotify");
  var _isBuildFromExternalSources = dart.privateName(provider$, "_isBuildFromExternalSources");
  var ___InheritedProviderScopeElement__delegateState = dart.privateName(provider$, "_#_InheritedProviderScopeElement#_delegateState");
  var ___InheritedProviderScopeElement__debugId = dart.privateName(provider$, "_#_InheritedProviderScopeElement#_debugId");
  var _debugId = dart.privateName(provider$, "_debugId");
  const _is__InheritedProviderScopeElement_default = Symbol('_is__InheritedProviderScopeElement_default');
  provider$._InheritedProviderScopeElement$ = dart.generic(T => {
    var __t$_InheritedProviderScopeOfT = () => (__t$_InheritedProviderScopeOfT = dart.constFn(provider$._InheritedProviderScope$(T)))();
    var __t$_DependencyOfT = () => (__t$_DependencyOfT = dart.constFn(provider$._Dependency$(T)))();
    var __t$TTobool = () => (__t$TTobool = dart.constFn(dart.fnType(core.bool, [T])))();
    var __t$ListOfTTobool = () => (__t$ListOfTTobool = dart.constFn(core.List$(__t$TTobool())))();
    class _InheritedProviderScopeElement extends framework.InheritedElement {
      static ['_#new#tearOff'](T, widget) {
        return new (provider$._InheritedProviderScopeElement$(T)).new(widget);
      }
      get [_delegateState]() {
        let t1, t1$, t0;
        t0 = this[___InheritedProviderScopeElement__delegateState];
        return t0 == null ? (t1$ = (t1 = this.widget.owner[_delegate].createState(), (() => {
          t1.element = this;
          return t1;
        })()), this[___InheritedProviderScopeElement__delegateState] == null ? this[___InheritedProviderScopeElement__delegateState] = t1$ : dart.throw(new _internal.LateError.fieldADI("_delegateState"))) : t0;
      }
      get [_debugId]() {
        let t0;
        t0 = this[___InheritedProviderScopeElement__debugId];
        return t0 == null ? dart.throw(new _internal.LateError.fieldNI("_debugId")) : t0;
      }
      set [_debugId](_debugId$35param) {
        this[___InheritedProviderScopeElement__debugId] = _debugId$35param;
      }
      getElementForInheritedWidgetOfExactType(InheritedWidgetType) {
        let inheritedElement = null;
        this.visitAncestorElements(dart.fn(parent => {
          inheritedElement = parent.getElementForInheritedWidgetOfExactType(InheritedWidgetType);
          return false;
        }, T$.ElementTobool()));
        return inheritedElement;
      }
      mount(parent, newSlot) {
        let t0;
        {
          this[_debugId] = dart.str((t0 = provider$._InheritedProviderScopeElement._nextProviderId, provider$._InheritedProviderScopeElement._nextProviderId = t0 + 1, t0));
          provider$.ProviderBinding.debugInstance.providerDetails = (() => {
            let t0 = T$.LinkedHashMapOfString$ProviderNode().of(provider$.ProviderBinding.debugInstance.providerDetails);
            t0[$_set](this[_debugId], new provider$.ProviderNode.new({id: this[_debugId], childrenNodeIds: C[25] || CT.C25, type: this.widget.debugType, element: this}));
            return t0;
          })();
        }
        super.mount(parent, newSlot);
      }
      get widget() {
        return __t$_InheritedProviderScopeOfT().as(super.widget);
      }
      reassemble() {
        super.reassemble();
        let value = this[_delegateState].hasValue ? this[_delegateState].value : null;
        if (reassemble_handler.ReassembleHandler.is(value)) {
          value.reassemble();
        }
      }
      updateDependencies(dependent, aspect) {
        let t1;
        let dependencies = this.getDependencies(dependent);
        if (dependencies != null && !__t$_DependencyOfT().is(dependencies)) {
          return;
        }
        if (__t$TTobool().is(aspect)) {
          let selectorDependency = __t$_DependencyOfT().as((t1 = dependencies, t1 == null ? new (__t$_DependencyOfT()).new() : t1));
          if (selectorDependency.shouldClearSelectors) {
            selectorDependency.shouldClearSelectors = false;
            __t$ListOfTTobool().as(selectorDependency.selectors)[$clear]();
          }
          if (selectorDependency.shouldClearMutationScheduled === false) {
            selectorDependency.shouldClearMutationScheduled = true;
            T$.FutureOfNull().microtask(dart.fn(() => {
              let t1;
              t1 = selectorDependency;
              (() => {
                t1.shouldClearMutationScheduled = false;
                t1.shouldClearSelectors = true;
                return t1;
              })();
            }, T$.VoidToNull()));
          }
          __t$ListOfTTobool().as(selectorDependency.selectors)[$add](aspect);
          this.setDependencies(dependent, selectorDependency);
        } else {
          this.setDependencies(dependent, C[26] || CT.C26);
        }
      }
      notifyDependent(oldWidget, dependent) {
        framework.InheritedWidget.as(oldWidget);
        let dependencies = this.getDependencies(dependent);
        {
          provider$.ProviderBinding.debugInstance.providerDidChange(this[_debugId]);
        }
        let shouldNotify = false;
        if (dependencies != null) {
          if (__t$_DependencyOfT().is(dependencies)) {
            if (dependent.dirty) {
              return;
            }
            for (let updateShouldNotify of __t$ListOfTTobool().as(dependencies.selectors)) {
              try {
                if (!dart.fn(() => {
                  provider$._debugIsSelecting = true;
                  return true;
                }, T$.VoidTobool())()) dart.assertFailed(null, I[2], 480, 20, "() {\n              _debugIsSelecting = true;\n              return true;\n            }()");
                shouldNotify = updateShouldNotify(this.value);
              } finally {
                if (!dart.fn(() => {
                  provider$._debugIsSelecting = false;
                  return true;
                }, T$.VoidTobool())()) dart.assertFailed(null, I[2], 486, 20, "() {\n              _debugIsSelecting = false;\n              return true;\n            }()");
              }
              if (shouldNotify) {
                break;
              }
            }
          } else {
            shouldNotify = true;
          }
        }
        if (shouldNotify) {
          dependent.didChangeDependencies();
        }
      }
      update(newWidget) {
        __t$_InheritedProviderScopeOfT().as(newWidget);
        if (!dart.fn(() => {
          if (!this.widget.owner[_delegate][$runtimeType]._equals(newWidget.owner[_delegate][$runtimeType])) {
            dart.throw(new core.StateError.new("Rebuilt " + dart.str(this.widget) + " using a different constructor.\n      \nThis is likely a mistake and is unsupported.\nIf you're in this situation, consider passing a `key` unique to each individual constructor.\n"));
          }
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[2], 507, 12, "() {\n      if (widget.owner._delegate.runtimeType !=\n          newWidget.owner._delegate.runtimeType) {\n        throw StateError('''\nRebuilt $widget using a different constructor.\n      \nThis is likely a mistake and is unsupported.\nIf you're in this situation, consider passing a `key` unique to each individual constructor.\n''');\n      }\n      return true;\n    }()");
        this[_isBuildFromExternalSources] = true;
        this[_updatedShouldNotify] = this[_delegateState].willUpdateDelegate(newWidget.owner[_delegate]);
        super.update(newWidget);
        this[_updatedShouldNotify] = false;
      }
      updated(oldWidget) {
        framework.InheritedWidget.as(oldWidget);
        super.updated(oldWidget);
        if (this[_updatedShouldNotify]) {
          this.notifyClients(oldWidget);
        }
      }
      didChangeDependencies() {
        this[_isBuildFromExternalSources] = true;
        super.didChangeDependencies();
      }
      build() {
        if (this.widget.owner[_lazy] === false) {
          this.value;
        }
        this[_delegateState].build({isBuildFromExternalSources: this[_isBuildFromExternalSources]});
        this[_isBuildFromExternalSources] = false;
        if (this[_shouldNotifyDependents]) {
          this[_shouldNotifyDependents] = false;
          this.notifyClients(this.widget);
        }
        return super.build();
      }
      unmount() {
        let t2;
        this[_delegateState].dispose();
        {
          provider$.ProviderBinding.debugInstance.providerDetails = (t2 = (() => {
            let t1 = T$.LinkedHashMapOfString$ProviderNode().of(provider$.ProviderBinding.debugInstance.providerDetails);
            return t1;
          })(), (() => {
            t2[$remove](this[_debugId]);
            return t2;
          })());
        }
        super.unmount();
      }
      get hasValue() {
        return this[_delegateState].hasValue;
      }
      markNeedsNotifyDependents() {
        if (!this[_isNotifyDependentsEnabled]) {
          return;
        }
        this.markNeedsBuild();
        this[_shouldNotifyDependents] = true;
      }
      [_debugSetInheritedLock](value) {
        if (!dart.fn(() => {
          this[_debugInheritLocked] = value;
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[2], 582, 12, "() {\n      _debugInheritLocked = value;\n      return true;\n    }()");
        return true;
      }
      get value() {
        return this[_delegateState].value;
      }
      dependOnInheritedElement(ancestor, opts) {
        let aspect = opts && 'aspect' in opts ? opts.aspect : null;
        if (!dart.fn(() => {
          if (this[_debugInheritLocked]) {
            dart.throw(new assertions.FlutterError.fromParts(T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Tried to listen to an InheritedWidget " + "in a life-cycle that will never be called again."), new assertions.ErrorDescription.new("This error typically happens when calling Provider.of with `listen` to `true`,\nin a situation where listening to the provider doesn't make sense, such as:\n- initState of a StatefulWidget\n- the \"create\" callback of a provider\n\nThis is undesired because these life-cycles are called only once in the\nlifetime of a widget. As such, while `listen` is `true`, the widget has\nno mean to handle the update scenario.\n\nTo fix, consider:\n- passing `listen: false` to `Provider.of`\n- use a life-cycle that handles updates (like didChangeDependencies)\n- use a provider that handles updates (like ProxyProvider).\n")])));
          }
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[2], 597, 12, "() {\n      if (_debugInheritLocked) {\n        throw FlutterError.fromParts(\n          <DiagnosticsNode>[\n            ErrorSummary(\n              'Tried to listen to an InheritedWidget '\n              'in a life-cycle that will never be called again.',\n            ),\n            ErrorDescription('''\nThis error typically happens when calling Provider.of with `listen` to `true`,\nin a situation where listening to the provider doesn't make sense, such as:\n- initState of a StatefulWidget\n- the \"create\" callback of a provider\n\nThis is undesired because these life-cycles are called only once in the\nlifetime of a widget. As such, while `listen` is `true`, the widget has\nno mean to handle the update scenario.\n\nTo fix, consider:\n- passing `listen: false` to `Provider.of`\n- use a life-cycle that handles updates (like didChangeDependencies)\n- use a provider that handles updates (like ProxyProvider).\n'''),\n          ],\n        );\n      }\n      return true;\n    }()");
        return super.dependOnInheritedElement(ancestor, {aspect: aspect});
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        this[_delegateState].debugFillProperties(properties);
      }
    }
    (_InheritedProviderScopeElement.new = function(widget) {
      this[_shouldNotifyDependents] = false;
      this[_debugInheritLocked] = false;
      this[_isNotifyDependentsEnabled] = true;
      this[_updatedShouldNotify] = false;
      this[_isBuildFromExternalSources] = false;
      this[___InheritedProviderScopeElement__delegateState] = null;
      this[___InheritedProviderScopeElement__debugId] = null;
      _InheritedProviderScopeElement.__proto__.new.call(this, widget);
      ;
    }).prototype = _InheritedProviderScopeElement.prototype;
    dart.addTypeTests(_InheritedProviderScopeElement);
    _InheritedProviderScopeElement.prototype[_is__InheritedProviderScopeElement_default] = true;
    dart.addTypeCaches(_InheritedProviderScopeElement);
    _InheritedProviderScopeElement[dart.implements] = () => [provider$.InheritedContext$(T)];
    dart.setMethodSignature(_InheritedProviderScopeElement, () => ({
      __proto__: dart.getMethods(_InheritedProviderScopeElement.__proto__),
      mount: dart.fnType(dart.void, [dart.nullable(framework.Element), dart.dynamic]),
      markNeedsNotifyDependents: dart.fnType(dart.void, []),
      [_debugSetInheritedLock]: dart.fnType(core.bool, [core.bool])
    }));
    dart.setGetterSignature(_InheritedProviderScopeElement, () => ({
      __proto__: dart.getGetters(_InheritedProviderScopeElement.__proto__),
      [_delegateState]: provider$._DelegateState$(T, provider$._Delegate$(T)),
      [_debugId]: core.String,
      widget: provider$._InheritedProviderScope$(T),
      hasValue: core.bool,
      value: T
    }));
    dart.setSetterSignature(_InheritedProviderScopeElement, () => ({
      __proto__: dart.getSetters(_InheritedProviderScopeElement.__proto__),
      [_debugId]: core.String
    }));
    dart.setLibraryUri(_InheritedProviderScopeElement, I[4]);
    dart.setFieldSignature(_InheritedProviderScopeElement, () => ({
      __proto__: dart.getFields(_InheritedProviderScopeElement.__proto__),
      [_shouldNotifyDependents]: dart.fieldType(core.bool),
      [_debugInheritLocked]: dart.fieldType(core.bool),
      [_isNotifyDependentsEnabled]: dart.fieldType(core.bool),
      [_updatedShouldNotify]: dart.fieldType(core.bool),
      [_isBuildFromExternalSources]: dart.fieldType(core.bool),
      [___InheritedProviderScopeElement__delegateState]: dart.fieldType(dart.nullable(provider$._DelegateState$(T, provider$._Delegate$(T)))),
      [___InheritedProviderScopeElement__debugId]: dart.fieldType(dart.nullable(core.String))
    }));
    dart.setStaticFieldSignature(_InheritedProviderScopeElement, () => ['_nextProviderId']);
    return _InheritedProviderScopeElement;
  });
  provider$._InheritedProviderScopeElement = provider$._InheritedProviderScopeElement$();
  dart.defineLazy(provider$._InheritedProviderScopeElement, {
    /*provider$._InheritedProviderScopeElement._nextProviderId*/get _nextProviderId() {
      return 0;
    },
    set _nextProviderId(value) {}
  }, false);
  dart.addTypeTests(provider$._InheritedProviderScopeElement, _is__InheritedProviderScopeElement_default);
  var _updateShouldNotify = dart.privateName(provider$, "_updateShouldNotify");
  const _is__CreateInheritedProvider_default = Symbol('_is__CreateInheritedProvider_default');
  provider$._CreateInheritedProvider$ = dart.generic(T => {
    var __t$_CreateInheritedProviderStateOfT = () => (__t$_CreateInheritedProviderStateOfT = dart.constFn(provider$._CreateInheritedProviderState$(T)))();
    class _CreateInheritedProvider extends provider$._Delegate$(T) {
      static ['_#new#tearOff'](T, opts) {
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let debugCheckInvalidValueType = opts && 'debugCheckInvalidValueType' in opts ? opts.debugCheckInvalidValueType : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        return new (provider$._CreateInheritedProvider$(T)).new({create: create, update: update, updateShouldNotify: updateShouldNotify, debugCheckInvalidValueType: debugCheckInvalidValueType, startListening: startListening, dispose: dispose});
      }
      createState() {
        return new (__t$_CreateInheritedProviderStateOfT()).new();
      }
    }
    (_CreateInheritedProvider.new = function(opts) {
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let debugCheckInvalidValueType = opts && 'debugCheckInvalidValueType' in opts ? opts.debugCheckInvalidValueType : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      this.create = create;
      this.update = update;
      this.debugCheckInvalidValueType = debugCheckInvalidValueType;
      this.startListening = startListening;
      this.dispose = dispose;
      if (!(create != null || update != null)) dart.assertFailed(null, I[2], 674, 16, "create != null || update != null");
      this[_updateShouldNotify] = updateShouldNotify;
      ;
    }).prototype = _CreateInheritedProvider.prototype;
    dart.addTypeTests(_CreateInheritedProvider);
    _CreateInheritedProvider.prototype[_is__CreateInheritedProvider_default] = true;
    dart.addTypeCaches(_CreateInheritedProvider);
    dart.setMethodSignature(_CreateInheritedProvider, () => ({
      __proto__: dart.getMethods(_CreateInheritedProvider.__proto__),
      createState: dart.fnType(provider$._CreateInheritedProviderState$(T), [])
    }));
    dart.setLibraryUri(_CreateInheritedProvider, I[4]);
    dart.setFieldSignature(_CreateInheritedProvider, () => ({
      __proto__: dart.getFields(_CreateInheritedProvider.__proto__),
      create: dart.finalFieldType(dart.nullable(dart.fnType(T, [framework.BuildContext]))),
      update: dart.finalFieldType(dart.nullable(dart.fnType(T, [framework.BuildContext, dart.nullable(T)]))),
      [_updateShouldNotify]: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [T, T]))),
      debugCheckInvalidValueType: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [T]))),
      startListening: dart.finalFieldType(dart.nullable(dart.fnType(dart.fnType(dart.void, []), [provider$.InheritedContext$(dart.nullable(T)), T]))),
      dispose: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [framework.BuildContext, T])))
    }));
    return _CreateInheritedProvider;
  });
  provider$._CreateInheritedProvider = provider$._CreateInheritedProvider$();
  dart.addTypeTests(provider$._CreateInheritedProvider, _is__CreateInheritedProvider_default);
  var _didInitValue = dart.privateName(provider$, "_didInitValue");
  var _previousWidget = dart.privateName(provider$, "_previousWidget");
  var _initError = dart.privateName(provider$, "_initError");
  const _is__CreateInheritedProviderState_default = Symbol('_is__CreateInheritedProviderState_default');
  provider$._CreateInheritedProviderState$ = dart.generic(T => {
    var __t$TTovoid = () => (__t$TTovoid = dart.constFn(dart.fnType(dart.void, [T])))();
    var __t$TToNvoid = () => (__t$TToNvoid = dart.constFn(dart.nullable(__t$TTovoid())))();
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$BuildContextAndTNToT = () => (__t$BuildContextAndTNToT = dart.constFn(dart.fnType(T, [framework.BuildContext, __t$TN()])))();
    var __t$BuildContextAndTNToNT = () => (__t$BuildContextAndTNToNT = dart.constFn(dart.nullable(__t$BuildContextAndTNToT())))();
    var __t$InheritedContextOfTN = () => (__t$InheritedContextOfTN = dart.constFn(provider$.InheritedContext$(__t$TN())))();
    var __t$InheritedContextOfTNAndTToFn = () => (__t$InheritedContextOfTNAndTToFn = dart.constFn(dart.fnType(T$.VoidTovoid(), [__t$InheritedContextOfTN(), T])))();
    var __t$InheritedContextOfTNAndTToNFn = () => (__t$InheritedContextOfTNAndTToNFn = dart.constFn(dart.nullable(__t$InheritedContextOfTNAndTToFn())))();
    var __t$BuildContextAndTTovoid = () => (__t$BuildContextAndTTovoid = dart.constFn(dart.fnType(dart.void, [framework.BuildContext, T])))();
    var __t$BuildContextAndTToNvoid = () => (__t$BuildContextAndTToNvoid = dart.constFn(dart.nullable(__t$BuildContextAndTTovoid())))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    var __t$TAndTTobool = () => (__t$TAndTTobool = dart.constFn(dart.fnType(core.bool, [T, T])))();
    var __t$TAndTToNbool = () => (__t$TAndTToNbool = dart.constFn(dart.nullable(__t$TAndTTobool())))();
    class _CreateInheritedProviderState extends provider$._DelegateState$(T, provider$._CreateInheritedProvider$(T)) {
      get value() {
        let t2, t3;
        if (this[_didInitValue] && this[_initError] != null) {
          dart.throw(new core.StateError.new("Tried to read a provider that threw during the creation of its value.\n" + "The exception occurred during the creation of type " + dart.str(dart.wrapType(T)) + ".\n\n" + dart.str((t2 = this[_initError], t2 == null ? null : dart.toString(t2)))));
        }
        let _debugPreviousIsInInheritedProviderCreate = null;
        let _debugPreviousIsInInheritedProviderUpdate = null;
        if (!dart.fn(() => {
          _debugPreviousIsInInheritedProviderCreate = provider$.debugIsInInheritedProviderCreate;
          _debugPreviousIsInInheritedProviderUpdate = provider$.debugIsInInheritedProviderUpdate;
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[2], 718, 12, "() {\n      _debugPreviousIsInInheritedProviderCreate =\n          debugIsInInheritedProviderCreate;\n      _debugPreviousIsInInheritedProviderUpdate =\n          debugIsInInheritedProviderUpdate;\n      return true;\n    }()");
        if (!this[_didInitValue]) {
          this[_didInitValue] = true;
          if (this.delegate.create != null) {
            if (!this.debugSetInheritedLock(true)) dart.assertFailed(null, I[2], 729, 16, "debugSetInheritedLock(true)");
            try {
              if (!dart.fn(() => {
                provider$.debugIsInInheritedProviderCreate = true;
                provider$.debugIsInInheritedProviderUpdate = false;
                return true;
              }, T$.VoidTobool())()) dart.assertFailed(null, I[2], 731, 18, "() {\n            debugIsInInheritedProviderCreate = true;\n            debugIsInInheritedProviderUpdate = false;\n            return true;\n          }()");
              this[_value] = dart.nullCheck(this.delegate.create)(dart.nullCheck(this.element));
            } catch (e$) {
              let e = dart.getThrown(e$);
              let stackTrace = dart.stackTrace(e$);
              if (core.Object.is(e)) {
                this[_initError] = new assertions.FlutterErrorDetails.new({library: "provider", exception: e, stack: stackTrace});
                dart.rethrow(e$);
              } else
                throw e$;
            } finally {
              if (!dart.fn(() => {
                provider$.debugIsInInheritedProviderCreate = dart.nullCheck(_debugPreviousIsInInheritedProviderCreate);
                provider$.debugIsInInheritedProviderUpdate = dart.nullCheck(_debugPreviousIsInInheritedProviderUpdate);
                return true;
              }, T$.VoidTobool())()) dart.assertFailed(null, I[2], 745, 18, "() {\n            debugIsInInheritedProviderCreate =\n                _debugPreviousIsInInheritedProviderCreate!;\n            debugIsInInheritedProviderUpdate =\n                _debugPreviousIsInInheritedProviderUpdate!;\n            return true;\n          }()");
            }
            if (!this.debugSetInheritedLock(false)) dart.assertFailed(null, I[2], 753, 16, "debugSetInheritedLock(false)");
            if (!dart.fn(() => {
              let t3;
              t3 = __t$TToNvoid().as(this.delegate.debugCheckInvalidValueType);
              t3 == null ? null : t3(T.as(this[_value]));
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[2], 755, 16, "() {\n          delegate.debugCheckInvalidValueType?.call(_value as T);\n          return true;\n        }()");
          }
          if (__t$BuildContextAndTNToNT().as(this.delegate.update) != null) {
            try {
              if (!dart.fn(() => {
                provider$.debugIsInInheritedProviderCreate = false;
                provider$.debugIsInInheritedProviderUpdate = true;
                return true;
              }, T$.VoidTobool())()) dart.assertFailed(null, I[2], 762, 18, "() {\n            debugIsInInheritedProviderCreate = false;\n            debugIsInInheritedProviderUpdate = true;\n            return true;\n          }()");
              this[_value] = dart.nullCheck(__t$BuildContextAndTNToNT().as(this.delegate.update))(dart.nullCheck(this.element), this[_value]);
            } finally {
              if (!dart.fn(() => {
                provider$.debugIsInInheritedProviderCreate = dart.nullCheck(_debugPreviousIsInInheritedProviderCreate);
                provider$.debugIsInInheritedProviderUpdate = dart.nullCheck(_debugPreviousIsInInheritedProviderUpdate);
                return true;
              }, T$.VoidTobool())()) dart.assertFailed(null, I[2], 769, 18, "() {\n            debugIsInInheritedProviderCreate =\n                _debugPreviousIsInInheritedProviderCreate!;\n            debugIsInInheritedProviderUpdate =\n                _debugPreviousIsInInheritedProviderUpdate!;\n            return true;\n          }()");
            }
            if (!dart.fn(() => {
              let t3;
              t3 = __t$TToNvoid().as(this.delegate.debugCheckInvalidValueType);
              t3 == null ? null : t3(T.as(this[_value]));
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[2], 778, 16, "() {\n          delegate.debugCheckInvalidValueType?.call(_value as T);\n          return true;\n        }()");
          }
        }
        dart.nullCheck(this.element)[_isNotifyDependentsEnabled] = false;
        this[_removeListener] == null ? this[_removeListener] = (t3 = __t$InheritedContextOfTNAndTToNFn().as(this.delegate.startListening), t3 == null ? null : t3(dart.nullCheck(this.element), T.as(this[_value]))) : null;
        dart.nullCheck(this.element)[_isNotifyDependentsEnabled] = true;
        if (!(__t$InheritedContextOfTNAndTToNFn().as(this.delegate.startListening) == null || this[_removeListener] != null)) dart.assertFailed(null, I[2], 788, 12, "delegate.startListening == null || _removeListener != null");
        return T.as(this[_value]);
      }
      dispose() {
        let t3, t3$;
        super.dispose();
        t3 = this[_removeListener];
        t3 == null ? null : t3();
        if (this[_didInitValue]) {
          t3$ = __t$BuildContextAndTToNvoid().as(this.delegate.dispose);
          t3$ == null ? null : t3$(dart.nullCheck(this.element), T.as(this[_value]));
        }
      }
      debugFillProperties(properties) {
        let t3;
        super.debugFillProperties(properties);
        if (this[_didInitValue]) {
          t3 = properties;
          (() => {
            t3.add(new (__t$DiagnosticsPropertyOfT()).new("value", this.value));
            t3.add(new diagnostics.FlagProperty.new("", {value: this[_removeListener] != null, defaultValue: false, ifTrue: "listening to value"}));
            return t3;
          })();
        } else {
          properties.add(new diagnostics.FlagProperty.new("value", {value: true, showName: true, ifTrue: "<not yet loaded>"}));
        }
      }
      build(opts) {
        let t4, t3;
        let isBuildFromExternalSources = opts && 'isBuildFromExternalSources' in opts ? opts.isBuildFromExternalSources : null;
        let shouldNotify = false;
        if (isBuildFromExternalSources && this[_didInitValue] && __t$BuildContextAndTNToNT().as(this.delegate.update) != null) {
          let previousValue = this[_value];
          let _debugPreviousIsInInheritedProviderCreate = null;
          let _debugPreviousIsInInheritedProviderUpdate = null;
          if (!dart.fn(() => {
            _debugPreviousIsInInheritedProviderCreate = provider$.debugIsInInheritedProviderCreate;
            _debugPreviousIsInInheritedProviderUpdate = provider$.debugIsInInheritedProviderUpdate;
            return true;
          }, T$.VoidTobool())()) dart.assertFailed(null, I[2], 839, 14, "() {\n        _debugPreviousIsInInheritedProviderCreate =\n            debugIsInInheritedProviderCreate;\n        _debugPreviousIsInInheritedProviderUpdate =\n            debugIsInInheritedProviderUpdate;\n        return true;\n      }()");
          try {
            if (!dart.fn(() => {
              provider$.debugIsInInheritedProviderCreate = false;
              provider$.debugIsInInheritedProviderUpdate = true;
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[2], 847, 16, "() {\n          debugIsInInheritedProviderCreate = false;\n          debugIsInInheritedProviderUpdate = true;\n          return true;\n        }()");
            this[_value] = dart.nullCheck(__t$BuildContextAndTNToNT().as(this.delegate.update))(dart.nullCheck(this.element), T.as(this[_value]));
          } finally {
            if (!dart.fn(() => {
              provider$.debugIsInInheritedProviderCreate = dart.nullCheck(_debugPreviousIsInInheritedProviderCreate);
              provider$.debugIsInInheritedProviderUpdate = dart.nullCheck(_debugPreviousIsInInheritedProviderUpdate);
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[2], 854, 16, "() {\n          debugIsInInheritedProviderCreate =\n              _debugPreviousIsInInheritedProviderCreate!;\n          debugIsInInheritedProviderUpdate =\n              _debugPreviousIsInInheritedProviderUpdate!;\n          return true;\n        }()");
          }
          if (__t$TAndTToNbool().as(this.delegate[_updateShouldNotify]) != null) {
            shouldNotify = dart.nullCheck(__t$TAndTToNbool().as(this.delegate[_updateShouldNotify]))(T.as(previousValue), T.as(this[_value]));
          } else {
            shouldNotify = !dart.equals(this[_value], previousValue);
          }
          if (shouldNotify) {
            if (!dart.fn(() => {
              let t3;
              t3 = __t$TToNvoid().as(this.delegate.debugCheckInvalidValueType);
              t3 == null ? null : t3(T.as(this[_value]));
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[2], 873, 16, "() {\n          delegate.debugCheckInvalidValueType?.call(_value as T);\n          return true;\n        }()");
            if (this[_removeListener] != null) {
              dart.nullCheck(this[_removeListener])();
              this[_removeListener] = null;
            }
            t3 = this[_previousWidget];
            t3 == null ? null : (t4 = __t$BuildContextAndTToNvoid().as(t3.dispose), t4 == null ? null : t4(dart.nullCheck(this.element), T.as(previousValue)));
          }
        }
        if (shouldNotify) {
          dart.nullCheck(this.element)[_shouldNotifyDependents] = true;
        }
        this[_previousWidget] = this.delegate;
        return super.build({isBuildFromExternalSources: isBuildFromExternalSources});
      }
      get hasValue() {
        return this[_didInitValue];
      }
      static ['_#new#tearOff'](T) {
        return new (provider$._CreateInheritedProviderState$(T)).new();
      }
    }
    (_CreateInheritedProviderState.new = function() {
      this[_removeListener] = null;
      this[_didInitValue] = false;
      this[_value] = null;
      this[_previousWidget] = null;
      this[_initError] = null;
      _CreateInheritedProviderState.__proto__.new.call(this);
      ;
    }).prototype = _CreateInheritedProviderState.prototype;
    dart.addTypeTests(_CreateInheritedProviderState);
    _CreateInheritedProviderState.prototype[_is__CreateInheritedProviderState_default] = true;
    dart.addTypeCaches(_CreateInheritedProviderState);
    dart.setGetterSignature(_CreateInheritedProviderState, () => ({
      __proto__: dart.getGetters(_CreateInheritedProviderState.__proto__),
      value: T,
      hasValue: core.bool
    }));
    dart.setLibraryUri(_CreateInheritedProviderState, I[4]);
    dart.setFieldSignature(_CreateInheritedProviderState, () => ({
      __proto__: dart.getFields(_CreateInheritedProviderState.__proto__),
      [_removeListener]: dart.fieldType(dart.nullable(dart.fnType(dart.void, []))),
      [_didInitValue]: dart.fieldType(core.bool),
      [_value]: dart.fieldType(dart.nullable(T)),
      [_previousWidget]: dart.fieldType(dart.nullable(provider$._CreateInheritedProvider$(T))),
      [_initError]: dart.fieldType(dart.nullable(assertions.FlutterErrorDetails))
    }));
    return _CreateInheritedProviderState;
  });
  provider$._CreateInheritedProviderState = provider$._CreateInheritedProviderState$();
  dart.addTypeTests(provider$._CreateInheritedProviderState, _is__CreateInheritedProviderState_default);
  const _is__ValueInheritedProvider_default = Symbol('_is__ValueInheritedProvider_default');
  provider$._ValueInheritedProvider$ = dart.generic(T => {
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    var __t$_ValueInheritedProviderStateOfT = () => (__t$_ValueInheritedProviderStateOfT = dart.constFn(provider$._ValueInheritedProviderState$(T)))();
    class _ValueInheritedProvider extends provider$._Delegate$(T) {
      static ['_#new#tearOff'](T, opts) {
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        return new (provider$._ValueInheritedProvider$(T)).new({value: value, updateShouldNotify: updateShouldNotify, startListening: startListening});
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new (__t$DiagnosticsPropertyOfT()).new("value", this.value));
      }
      createState() {
        return new (__t$_ValueInheritedProviderStateOfT()).new();
      }
    }
    (_ValueInheritedProvider.new = function(opts) {
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      this.value = value;
      this.startListening = startListening;
      this[_updateShouldNotify] = updateShouldNotify;
      ;
    }).prototype = _ValueInheritedProvider.prototype;
    dart.addTypeTests(_ValueInheritedProvider);
    _ValueInheritedProvider.prototype[_is__ValueInheritedProvider_default] = true;
    dart.addTypeCaches(_ValueInheritedProvider);
    dart.setMethodSignature(_ValueInheritedProvider, () => ({
      __proto__: dart.getMethods(_ValueInheritedProvider.__proto__),
      createState: dart.fnType(provider$._ValueInheritedProviderState$(T), [])
    }));
    dart.setLibraryUri(_ValueInheritedProvider, I[4]);
    dart.setFieldSignature(_ValueInheritedProvider, () => ({
      __proto__: dart.getFields(_ValueInheritedProvider.__proto__),
      value: dart.finalFieldType(T),
      [_updateShouldNotify]: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [T, T]))),
      startListening: dart.finalFieldType(dart.nullable(dart.fnType(dart.fnType(dart.void, []), [provider$.InheritedContext$(dart.nullable(T)), T])))
    }));
    return _ValueInheritedProvider;
  });
  provider$._ValueInheritedProvider = provider$._ValueInheritedProvider$();
  dart.addTypeTests(provider$._ValueInheritedProvider, _is__ValueInheritedProvider_default);
  const _is__ValueInheritedProviderState_default = Symbol('_is__ValueInheritedProviderState_default');
  provider$._ValueInheritedProviderState$ = dart.generic(T => {
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$InheritedContextOfTN = () => (__t$InheritedContextOfTN = dart.constFn(provider$.InheritedContext$(__t$TN())))();
    var __t$InheritedContextOfTNAndTToFn = () => (__t$InheritedContextOfTNAndTToFn = dart.constFn(dart.fnType(T$.VoidTovoid(), [__t$InheritedContextOfTN(), T])))();
    var __t$InheritedContextOfTNAndTToNFn = () => (__t$InheritedContextOfTNAndTToNFn = dart.constFn(dart.nullable(__t$InheritedContextOfTNAndTToFn())))();
    var __t$_ValueInheritedProviderOfT = () => (__t$_ValueInheritedProviderOfT = dart.constFn(provider$._ValueInheritedProvider$(T)))();
    var __t$TAndTTobool = () => (__t$TAndTTobool = dart.constFn(dart.fnType(core.bool, [T, T])))();
    var __t$TAndTToNbool = () => (__t$TAndTToNbool = dart.constFn(dart.nullable(__t$TAndTTobool())))();
    class _ValueInheritedProviderState extends provider$._DelegateState$(T, provider$._ValueInheritedProvider$(T)) {
      get value() {
        let t3;
        dart.nullCheck(this.element)[_isNotifyDependentsEnabled] = false;
        this[_removeListener] == null ? this[_removeListener] = (t3 = __t$InheritedContextOfTNAndTToNFn().as(this.delegate.startListening), t3 == null ? null : t3(dart.nullCheck(this.element), this.delegate.value)) : null;
        dart.nullCheck(this.element)[_isNotifyDependentsEnabled] = true;
        if (!(__t$InheritedContextOfTNAndTToNFn().as(this.delegate.startListening) == null || this[_removeListener] != null)) dart.assertFailed(null, I[2], 928, 12, "delegate.startListening == null || _removeListener != null");
        return this.delegate.value;
      }
      willUpdateDelegate(newDelegate) {
        __t$_ValueInheritedProviderOfT().as(newDelegate);
        let shouldNotify = null;
        if (__t$TAndTToNbool().as(this.delegate[_updateShouldNotify]) != null) {
          shouldNotify = dart.nullCheck(__t$TAndTToNbool().as(this.delegate[_updateShouldNotify]))(this.delegate.value, newDelegate.value);
        } else {
          shouldNotify = !dart.equals(newDelegate.value, this.delegate.value);
        }
        if (shouldNotify && this[_removeListener] != null) {
          dart.nullCheck(this[_removeListener])();
          this[_removeListener] = null;
        }
        return shouldNotify;
      }
      dispose() {
        let t3;
        super.dispose();
        t3 = this[_removeListener];
        t3 == null ? null : t3();
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new diagnostics.FlagProperty.new("", {value: this[_removeListener] != null, defaultValue: false, ifTrue: "listening to value"}));
      }
      get hasValue() {
        return true;
      }
      static ['_#new#tearOff'](T) {
        return new (provider$._ValueInheritedProviderState$(T)).new();
      }
    }
    (_ValueInheritedProviderState.new = function() {
      this[_removeListener] = null;
      _ValueInheritedProviderState.__proto__.new.call(this);
      ;
    }).prototype = _ValueInheritedProviderState.prototype;
    dart.addTypeTests(_ValueInheritedProviderState);
    _ValueInheritedProviderState.prototype[_is__ValueInheritedProviderState_default] = true;
    dart.addTypeCaches(_ValueInheritedProviderState);
    dart.setGetterSignature(_ValueInheritedProviderState, () => ({
      __proto__: dart.getGetters(_ValueInheritedProviderState.__proto__),
      value: T,
      hasValue: core.bool
    }));
    dart.setLibraryUri(_ValueInheritedProviderState, I[4]);
    dart.setFieldSignature(_ValueInheritedProviderState, () => ({
      __proto__: dart.getFields(_ValueInheritedProviderState.__proto__),
      [_removeListener]: dart.fieldType(dart.nullable(dart.fnType(dart.void, [])))
    }));
    return _ValueInheritedProviderState;
  });
  provider$._ValueInheritedProviderState = provider$._ValueInheritedProviderState$();
  dart.addTypeTests(provider$._ValueInheritedProviderState, _is__ValueInheritedProviderState_default);
  var DeepCollectionEquality__unordered = dart.privateName(equality, "DeepCollectionEquality._unordered");
  var DeepCollectionEquality__base = dart.privateName(equality, "DeepCollectionEquality._base");
  provider$.debugPostEvent = function debugPostEvent(eventKind, event = C[27] || CT.C27) {
    if (provider$._debugPostEventOverride != null) {
      dart.nullCheck(provider$._debugPostEventOverride)(eventKind, event);
    } else {
      developer.postEvent(eventKind, event);
    }
  };
  provider$.spyPostEvent = function spyPostEvent() {
    if (!(provider$._debugPostEventOverride == null)) dart.assertFailed("postEvent is already spied", I[12], 22, 10, "_debugPostEventOverride == null");
    let spy = new provider$.PostEventSpy.__();
    provider$._debugPostEventOverride = dart.bind(spy, _postEvent);
    return spy;
  };
  provider$['SelectContext|select'] = function SelectContext$124select(T, R, $this, selector) {
    let t4;
    if (!!sliver.SliverWithKeepAliveWidget.is($this.widget)) dart.assertFailed("    Tried to use context.select inside a SliverList/SliderGridView.\n\n    This is likely a mistake, as instead of rebuilding only the item that cares\n    about the selected value, this would rebuild the entire list/grid.\n\n    To fix, add a `Builder` or extract the content of `itemBuilder` in a separate widget:\n\n    ```dart\n    ListView.builder(\n      itemBuilder: (context, index) {\n        return Builder(builder: (context) {\n          final todo = context.select((TodoList list) => list[index]);\n          return Text(todo.name);\n        });\n      },\n    );\n    ```\n    ", I[2], 247, 12, "widget is! SliverWithKeepAliveWidget");
    if (!(layout_builder.LayoutBuilder.is($this.widget) || $this.debugDoingBuild)) dart.assertFailed("Tried to use `context.select` outside of the `build` method of a widget.\n\nAny usage other than inside the `build` method of a widget are not supported.\n", I[2], 266, 12, "widget is LayoutBuilder || debugDoingBuild");
    let inheritedElement = provider$.Provider._inheritedElementOf(T, $this);
    try {
      let value = (t4 = inheritedElement, t4 == null ? null : t4.value);
      if (!T.is(value)) {
        dart.throw(new provider$.ProviderNullException.new(dart.wrapType(T), $this.widget[$runtimeType]));
      }
      if (!dart.fn(() => {
        provider$._debugIsSelecting = true;
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[2], 279, 14, "() {\n        _debugIsSelecting = true;\n        return true;\n      }()");
      let selected = selector(value);
      if (inheritedElement != null) {
        $this.dependOnInheritedElement(inheritedElement, {aspect: dart.fn(newValue => {
            if (!T.is(newValue)) {
              dart.throw(new provider$.ProviderNullException.new(dart.wrapType(T), $this.widget[$runtimeType]));
            }
            return !(C[28] || CT.C28).equals(selector(newValue), selected);
          }, dart.fnType(core.bool, [dart.nullable(T)]))});
      } else {
        $this.dependOnInheritedWidgetOfExactType(provider$._InheritedProviderScope$(dart.nullable(T)));
      }
      return selected;
    } finally {
      if (!dart.fn(() => {
        provider$._debugIsSelecting = false;
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[2], 304, 14, "() {\n        _debugIsSelecting = false;\n        return true;\n      }()");
    }
  };
  provider$['SelectContext|get#select'] = function SelectContext$124get$35select($this) {
    return dart.fn((T, R, selector) => provider$['SelectContext|select'](T, R, $this, selector), T$.FnToR());
  };
  provider$['ReadContext|read'] = function ReadContext$124read(T, $this) {
    return provider$.Provider.of(T, $this, {listen: false});
  };
  provider$['ReadContext|get#read'] = function ReadContext$124get$35read($this) {
    return dart.fn(T => provider$['ReadContext|read'](T, $this), T$.VoidToT());
  };
  provider$['WatchContext|watch'] = function WatchContext$124watch(T, $this) {
    return provider$.Provider.of(T, $this);
  };
  provider$['WatchContext|get#watch'] = function WatchContext$124get$35watch($this) {
    return dart.fn(T => provider$['WatchContext|watch'](T, $this), T$.VoidToT());
  };
  dart.defineLazy(provider$, {
    /*provider$._isSoundMode*/get _isSoundMode() {
      return !T$.ListOfint().is(T$.JSArrayOfintN().of([]));
    },
    /*provider$._debugPostEventOverride*/get _debugPostEventOverride() {
      return null;
    },
    set _debugPostEventOverride(value) {},
    /*provider$._debugIsSelecting*/get _debugIsSelecting() {
      return false;
    },
    set _debugIsSelecting(value) {},
    /*provider$.debugIsInInheritedProviderUpdate*/get debugIsInInheritedProviderUpdate() {
      return false;
    },
    set debugIsInInheritedProviderUpdate(value) {},
    /*provider$.debugIsInInheritedProviderCreate*/get debugIsInInheritedProviderCreate() {
      return false;
    },
    set debugIsInInheritedProviderCreate(value) {}
  }, false);
  const _is_ProxyProvider0_default = Symbol('_is_ProxyProvider0_default');
  proxy_provider.ProxyProvider0$ = dart.generic(R => {
    var __t$RTovoid = () => (__t$RTovoid = dart.constFn(dart.fnType(dart.void, [R])))();
    class ProxyProvider0 extends provider$.InheritedProvider$(R) {
      static ['_#new#tearOff'](R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider0$(R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider0.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider0.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: update, dispose: dispose, updateShouldNotify: updateShouldNotify, debugCheckInvalidValueType: dart.fn(value => {
          let t9;
          t9 = provider$.Provider.debugCheckInvalidValueType;
          return t9 == null ? null : t9(R, value);
        }, __t$RTovoid()), child: child});
      ;
    }).prototype = ProxyProvider0.prototype;
    dart.addTypeTests(ProxyProvider0);
    ProxyProvider0.prototype[_is_ProxyProvider0_default] = true;
    dart.addTypeCaches(ProxyProvider0);
    dart.setLibraryUri(ProxyProvider0, I[13]);
    return ProxyProvider0;
  });
  proxy_provider.ProxyProvider0 = proxy_provider.ProxyProvider0$();
  dart.addTypeTests(proxy_provider.ProxyProvider0, _is_ProxyProvider0_default);
  const _is_ProxyProvider_default = Symbol('_is_ProxyProvider_default');
  proxy_provider.ProxyProvider$ = dart.generic((T, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider$(T, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider.prototype;
    dart.addTypeTests(ProxyProvider);
    ProxyProvider.prototype[_is_ProxyProvider_default] = true;
    dart.addTypeCaches(ProxyProvider);
    dart.setLibraryUri(ProxyProvider, I[13]);
    return ProxyProvider;
  });
  proxy_provider.ProxyProvider = proxy_provider.ProxyProvider$();
  dart.addTypeTests(proxy_provider.ProxyProvider, _is_ProxyProvider_default);
  const _is_ProxyProvider2_default = Symbol('_is_ProxyProvider2_default');
  proxy_provider.ProxyProvider2$ = dart.generic((T, T2, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider2 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider2$(T, T2, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider2.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider2.prototype;
    dart.addTypeTests(ProxyProvider2);
    ProxyProvider2.prototype[_is_ProxyProvider2_default] = true;
    dart.addTypeCaches(ProxyProvider2);
    dart.setLibraryUri(ProxyProvider2, I[13]);
    return ProxyProvider2;
  });
  proxy_provider.ProxyProvider2 = proxy_provider.ProxyProvider2$();
  dart.addTypeTests(proxy_provider.ProxyProvider2, _is_ProxyProvider2_default);
  const _is_ProxyProvider3_default = Symbol('_is_ProxyProvider3_default');
  proxy_provider.ProxyProvider3$ = dart.generic((T, T2, T3, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider3 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider3$(T, T2, T3, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider3.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider3.prototype;
    dart.addTypeTests(ProxyProvider3);
    ProxyProvider3.prototype[_is_ProxyProvider3_default] = true;
    dart.addTypeCaches(ProxyProvider3);
    dart.setLibraryUri(ProxyProvider3, I[13]);
    return ProxyProvider3;
  });
  proxy_provider.ProxyProvider3 = proxy_provider.ProxyProvider3$();
  dart.addTypeTests(proxy_provider.ProxyProvider3, _is_ProxyProvider3_default);
  const _is_ProxyProvider4_default = Symbol('_is_ProxyProvider4_default');
  proxy_provider.ProxyProvider4$ = dart.generic((T, T2, T3, T4, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider4 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider4$(T, T2, T3, T4, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider4.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider4.prototype;
    dart.addTypeTests(ProxyProvider4);
    ProxyProvider4.prototype[_is_ProxyProvider4_default] = true;
    dart.addTypeCaches(ProxyProvider4);
    dart.setLibraryUri(ProxyProvider4, I[13]);
    return ProxyProvider4;
  });
  proxy_provider.ProxyProvider4 = proxy_provider.ProxyProvider4$();
  dart.addTypeTests(proxy_provider.ProxyProvider4, _is_ProxyProvider4_default);
  const _is_ProxyProvider5_default = Symbol('_is_ProxyProvider5_default');
  proxy_provider.ProxyProvider5$ = dart.generic((T, T2, T3, T4, T5, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider5 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider5$(T, T2, T3, T4, T5, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider5.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), provider$.Provider.of(T5, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider5.prototype;
    dart.addTypeTests(ProxyProvider5);
    ProxyProvider5.prototype[_is_ProxyProvider5_default] = true;
    dart.addTypeCaches(ProxyProvider5);
    dart.setLibraryUri(ProxyProvider5, I[13]);
    return ProxyProvider5;
  });
  proxy_provider.ProxyProvider5 = proxy_provider.ProxyProvider5$();
  dart.addTypeTests(proxy_provider.ProxyProvider5, _is_ProxyProvider5_default);
  const _is_ProxyProvider6_default = Symbol('_is_ProxyProvider6_default');
  proxy_provider.ProxyProvider6$ = dart.generic((T, T2, T3, T4, T5, T6, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider6 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, T6, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider6$(T, T2, T3, T4, T5, T6, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider6.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), provider$.Provider.of(T5, context), provider$.Provider.of(T6, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider6.prototype;
    dart.addTypeTests(ProxyProvider6);
    ProxyProvider6.prototype[_is_ProxyProvider6_default] = true;
    dart.addTypeCaches(ProxyProvider6);
    dart.setLibraryUri(ProxyProvider6, I[13]);
    return ProxyProvider6;
  });
  proxy_provider.ProxyProvider6 = proxy_provider.ProxyProvider6$();
  dart.addTypeTests(proxy_provider.ProxyProvider6, _is_ProxyProvider6_default);
  reassemble_handler.ReassembleHandler = class ReassembleHandler extends core.Object {};
  (reassemble_handler.ReassembleHandler.new = function() {
    ;
  }).prototype = reassemble_handler.ReassembleHandler.prototype;
  dart.addTypeTests(reassemble_handler.ReassembleHandler);
  dart.addTypeCaches(reassemble_handler.ReassembleHandler);
  dart.setLibraryUri(reassemble_handler.ReassembleHandler, I[14]);
  var builder$6 = dart.privateName(selector$, "Selector0.builder");
  var selector$0 = dart.privateName(selector$, "Selector0.selector");
  var _shouldRebuild = dart.privateName(selector$, "_shouldRebuild");
  var _child$0 = dart.privateName(nested, "SingleChildStatefulWidget._child");
  nested.SingleChildStatefulWidget = class SingleChildStatefulWidget extends framework.StatefulWidget {
    get [_child$]() {
      return this[_child$0];
    }
    set [_child$](value) {
      super[_child$] = value;
    }
    createElement() {
      return new nested.SingleChildStatefulElement.new(this);
    }
  };
  (nested.SingleChildStatefulWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    this[_child$0] = child;
    nested.SingleChildStatefulWidget.__proto__.new.call(this, {key: key});
    ;
  }).prototype = nested.SingleChildStatefulWidget.prototype;
  dart.addTypeTests(nested.SingleChildStatefulWidget);
  dart.addTypeCaches(nested.SingleChildStatefulWidget);
  nested.SingleChildStatefulWidget[dart.implements] = () => [nested.SingleChildWidget];
  dart.setMethodSignature(nested.SingleChildStatefulWidget, () => ({
    __proto__: dart.getMethods(nested.SingleChildStatefulWidget.__proto__),
    createElement: dart.fnType(nested.SingleChildStatefulElement, [])
  }));
  dart.setLibraryUri(nested.SingleChildStatefulWidget, I[3]);
  dart.setFieldSignature(nested.SingleChildStatefulWidget, () => ({
    __proto__: dart.getFields(nested.SingleChildStatefulWidget.__proto__),
    [_child$]: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  const _is_Selector0_default = Symbol('_is_Selector0_default');
  selector$.Selector0$ = dart.generic(T => {
    var __t$_Selector0StateOfT = () => (__t$_Selector0StateOfT = dart.constFn(selector$._Selector0State$(T)))();
    class Selector0 extends nested.SingleChildStatefulWidget {
      get builder() {
        return this[builder$6];
      }
      set builder(value) {
        super.builder = value;
      }
      get selector() {
        return this[selector$0];
      }
      set selector(value) {
        super.selector = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector0$(T)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
      createState() {
        return new (__t$_Selector0StateOfT()).new();
      }
    }
    (Selector0.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$6] = builder;
      this[selector$0] = selector;
      this[_shouldRebuild] = shouldRebuild;
      Selector0.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Selector0.prototype;
    dart.addTypeTests(Selector0);
    Selector0.prototype[_is_Selector0_default] = true;
    dart.addTypeCaches(Selector0);
    dart.setMethodSignature(Selector0, () => ({
      __proto__: dart.getMethods(Selector0.__proto__),
      createState: dart.fnType(selector$._Selector0State$(T), [])
    }));
    dart.setLibraryUri(Selector0, I[15]);
    dart.setFieldSignature(Selector0, () => ({
      __proto__: dart.getFields(Selector0.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, T, dart.nullable(framework.Widget)])),
      selector: dart.finalFieldType(dart.fnType(T, [framework.BuildContext])),
      [_shouldRebuild]: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [T, T])))
    }));
    return Selector0;
  });
  selector$.Selector0 = selector$.Selector0$();
  dart.addTypeTests(selector$.Selector0, _is_Selector0_default);
  var value$ = dart.privateName(selector$, "_Selector0State.value");
  const _is_SingleChildState_default = Symbol('_is_SingleChildState_default');
  nested.SingleChildState$ = dart.generic(T => {
    class SingleChildState extends framework.State$(T) {
      build(context) {
        return this.buildWithChild(context, this.widget[_child$]);
      }
    }
    (SingleChildState.new = function() {
      SingleChildState.__proto__.new.call(this);
      ;
    }).prototype = SingleChildState.prototype;
    dart.addTypeTests(SingleChildState);
    SingleChildState.prototype[_is_SingleChildState_default] = true;
    dart.addTypeCaches(SingleChildState);
    dart.setMethodSignature(SingleChildState, () => ({
      __proto__: dart.getMethods(SingleChildState.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(SingleChildState, I[3]);
    return SingleChildState;
  });
  nested.SingleChildState = nested.SingleChildState$();
  dart.addTypeTests(nested.SingleChildState, _is_SingleChildState_default);
  const _is__Selector0State_default = Symbol('_is__Selector0State_default');
  selector$._Selector0State$ = dart.generic(T => {
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$TAndTTobool = () => (__t$TAndTTobool = dart.constFn(dart.fnType(core.bool, [T, T])))();
    var __t$TAndTToNbool = () => (__t$TAndTToNbool = dart.constFn(dart.nullable(__t$TAndTTobool())))();
    var __t$BuildContextAndTAndWidgetNToWidget = () => (__t$BuildContextAndTAndWidgetNToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T, T$.WidgetN()])))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    class _Selector0State extends nested.SingleChildState$(selector$.Selector0$(T)) {
      get value() {
        return this[value$];
      }
      set value(value) {
        this[value$] = __t$TN().as(value);
      }
      buildWithChild(context, child) {
        let t10, t9, t12, t11, t10$, t9$;
        let selected = (t9 = this.widget, t10 = context, t9.selector(t10));
        let shouldInvalidateCache = !dart.equals(this.oldWidget, this.widget) || __t$TAndTToNbool().as(this.widget[_shouldRebuild]) != null && dart.nullCheck(__t$TAndTToNbool().as(this.widget[_shouldRebuild]))(T.as(this.value), selected) || __t$TAndTToNbool().as(this.widget[_shouldRebuild]) == null && !(C[28] || CT.C28).equals(this.value, selected);
        if (shouldInvalidateCache) {
          this.value = selected;
          this.oldWidget = this.widget;
          this.cache = (t9$ = this.widget, t10$ = context, t11 = selected, t12 = child, __t$BuildContextAndTAndWidgetNToWidget().as(t9$.builder)(t10$, t11, t12));
        }
        return dart.nullCheck(this.cache);
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new (__t$DiagnosticsPropertyOfT()).new("value", this.value));
      }
      static ['_#new#tearOff'](T) {
        return new (selector$._Selector0State$(T)).new();
      }
    }
    (_Selector0State.new = function() {
      this[value$] = null;
      this.cache = null;
      this.oldWidget = null;
      _Selector0State.__proto__.new.call(this);
      ;
    }).prototype = _Selector0State.prototype;
    dart.addTypeTests(_Selector0State);
    _Selector0State.prototype[_is__Selector0State_default] = true;
    dart.addTypeCaches(_Selector0State);
    dart.setMethodSignature(_Selector0State, () => ({
      __proto__: dart.getMethods(_Selector0State.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(_Selector0State, I[15]);
    dart.setFieldSignature(_Selector0State, () => ({
      __proto__: dart.getFields(_Selector0State.__proto__),
      value: dart.fieldType(dart.nullable(T)),
      cache: dart.fieldType(dart.nullable(framework.Widget)),
      oldWidget: dart.fieldType(dart.nullable(framework.Widget))
    }));
    return _Selector0State;
  });
  selector$._Selector0State = selector$._Selector0State$();
  dart.addTypeTests(selector$._Selector0State, _is__Selector0State_default);
  const _is_Selector_default = Symbol('_is_Selector_default');
  selector$.Selector$ = dart.generic((A, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector$(A, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector.prototype;
    dart.addTypeTests(Selector);
    Selector.prototype[_is_Selector_default] = true;
    dart.addTypeCaches(Selector);
    dart.setLibraryUri(Selector, I[15]);
    return Selector;
  });
  selector$.Selector = selector$.Selector$();
  dart.addTypeTests(selector$.Selector, _is_Selector_default);
  const _is_Selector2_default = Symbol('_is_Selector2_default');
  selector$.Selector2$ = dart.generic((A, B, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector2 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector2$(A, B, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector2.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector2.prototype;
    dart.addTypeTests(Selector2);
    Selector2.prototype[_is_Selector2_default] = true;
    dart.addTypeCaches(Selector2);
    dart.setLibraryUri(Selector2, I[15]);
    return Selector2;
  });
  selector$.Selector2 = selector$.Selector2$();
  dart.addTypeTests(selector$.Selector2, _is_Selector2_default);
  const _is_Selector3_default = Symbol('_is_Selector3_default');
  selector$.Selector3$ = dart.generic((A, B, C, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector3 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, C, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector3$(A, B, C, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector3.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context), provider$.Provider.of(C, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector3.prototype;
    dart.addTypeTests(Selector3);
    Selector3.prototype[_is_Selector3_default] = true;
    dart.addTypeCaches(Selector3);
    dart.setLibraryUri(Selector3, I[15]);
    return Selector3;
  });
  selector$.Selector3 = selector$.Selector3$();
  dart.addTypeTests(selector$.Selector3, _is_Selector3_default);
  const _is_Selector4_default = Symbol('_is_Selector4_default');
  selector$.Selector4$ = dart.generic((A, B, C, D, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector4 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, C, D, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector4$(A, B, C, D, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector4.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context), provider$.Provider.of(C, context), provider$.Provider.of(D, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector4.prototype;
    dart.addTypeTests(Selector4);
    Selector4.prototype[_is_Selector4_default] = true;
    dart.addTypeCaches(Selector4);
    dart.setLibraryUri(Selector4, I[15]);
    return Selector4;
  });
  selector$.Selector4 = selector$.Selector4$();
  dart.addTypeTests(selector$.Selector4, _is_Selector4_default);
  const _is_Selector5_default = Symbol('_is_Selector5_default');
  selector$.Selector5$ = dart.generic((A, B, C, D, E, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector5 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, C, D, E, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector5$(A, B, C, D, E, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector5.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context), provider$.Provider.of(C, context), provider$.Provider.of(D, context), provider$.Provider.of(E, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector5.prototype;
    dart.addTypeTests(Selector5);
    Selector5.prototype[_is_Selector5_default] = true;
    dart.addTypeCaches(Selector5);
    dart.setLibraryUri(Selector5, I[15]);
    return Selector5;
  });
  selector$.Selector5 = selector$.Selector5$();
  dart.addTypeTests(selector$.Selector5, _is_Selector5_default);
  const _is_Selector6_default = Symbol('_is_Selector6_default');
  selector$.Selector6$ = dart.generic((A, B, C, D, E, F, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector6 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, C, D, E, F, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector6$(A, B, C, D, E, F, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector6.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context), provider$.Provider.of(C, context), provider$.Provider.of(D, context), provider$.Provider.of(E, context), provider$.Provider.of(F, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector6.prototype;
    dart.addTypeTests(Selector6);
    Selector6.prototype[_is_Selector6_default] = true;
    dart.addTypeCaches(Selector6);
    dart.setLibraryUri(Selector6, I[15]);
    return Selector6;
  });
  selector$.Selector6 = selector$.Selector6$();
  dart.addTypeTests(selector$.Selector6, _is_Selector6_default);
  var _valueListenable = dart.privateName(value_listenable_provider, "_valueListenable");
  var _updateShouldNotify$ = dart.privateName(value_listenable_provider, "_updateShouldNotify");
  const _is_ValueListenableProvider_default = Symbol('_is_ValueListenableProvider_default');
  value_listenable_provider.ValueListenableProvider$ = dart.generic(T => {
    var __t$ValueListenableBuilderOfT = () => (__t$ValueListenableBuilderOfT = dart.constFn(value_listenable_builder.ValueListenableBuilder$(T)))();
    var __t$ProviderOfT = () => (__t$ProviderOfT = dart.constFn(provider$.Provider$(T)))();
    var __t$BuildContextAndTAndWidgetNToProviderOfT = () => (__t$BuildContextAndTAndWidgetNToProviderOfT = dart.constFn(dart.fnType(__t$ProviderOfT(), [framework.BuildContext, T, T$.WidgetN()])))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    class ValueListenableProvider extends nested.SingleChildStatelessWidget {
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (value_listenable_provider.ValueListenableProvider$(T)).value({key: key, value: value, updateShouldNotify: updateShouldNotify, child: child});
      }
      buildWithChild(context, child) {
        return new (__t$ValueListenableBuilderOfT()).new({valueListenable: this[_valueListenable], builder: dart.fn((context, value, _) => new (__t$ProviderOfT()).value({value: value, updateShouldNotify: this[_updateShouldNotify$], child: child}), __t$BuildContextAndTAndWidgetNToProviderOfT())});
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new (__t$DiagnosticsPropertyOfT()).new("value", this[_valueListenable].value));
      }
    }
    (ValueListenableProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[_valueListenable] = value;
      this[_updateShouldNotify$] = updateShouldNotify;
      ValueListenableProvider.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = ValueListenableProvider.prototype;
    dart.addTypeTests(ValueListenableProvider);
    ValueListenableProvider.prototype[_is_ValueListenableProvider_default] = true;
    dart.addTypeCaches(ValueListenableProvider);
    dart.setMethodSignature(ValueListenableProvider, () => ({
      __proto__: dart.getMethods(ValueListenableProvider.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(ValueListenableProvider, I[16]);
    dart.setFieldSignature(ValueListenableProvider, () => ({
      __proto__: dart.getFields(ValueListenableProvider.__proto__),
      [_valueListenable]: dart.finalFieldType(change_notifier.ValueListenable$(T)),
      [_updateShouldNotify$]: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [T, T])))
    }));
    return ValueListenableProvider;
  });
  value_listenable_provider.ValueListenableProvider = value_listenable_provider.ValueListenableProvider$();
  dart.addTypeTests(value_listenable_provider.ValueListenableProvider, _is_ValueListenableProvider_default);
  var _areaItems = dart.privateName(area_mdl, "_areaItems");
  area_mdl.AreaModel = class AreaModel extends change_notifier.ChangeNotifier {
    get areaItems() {
      return this[_areaItems];
    }
    static ['_#new#tearOff']() {
      return new area_mdl.AreaModel.new();
    }
  };
  (area_mdl.AreaModel.new = function() {
    this[_areaItems] = [T$.JSArrayOfObject().of(["Area 1", "https://source.unsplash.com/random/600x800", colors.Colors.green]), T$.JSArrayOfObject().of(["Area 2", "https://source.unsplash.com/random/600x800", colors.Colors.yellow]), T$.JSArrayOfObject().of(["Area 3", "https://source.unsplash.com/random/600x800", colors.Colors.blue]), T$.JSArrayOfObject().of(["Area 9", "https://source.unsplash.com/random/600x800", colors.Colors.red])];
    area_mdl.AreaModel.__proto__.new.call(this);
    ;
  }).prototype = area_mdl.AreaModel.prototype;
  dart.addTypeTests(area_mdl.AreaModel);
  dart.addTypeCaches(area_mdl.AreaModel);
  dart.setGetterSignature(area_mdl.AreaModel, () => ({
    __proto__: dart.getGetters(area_mdl.AreaModel.__proto__),
    areaItems: dart.dynamic
  }));
  dart.setLibraryUri(area_mdl.AreaModel, I[17]);
  dart.setFieldSignature(area_mdl.AreaModel, () => ({
    __proto__: dart.getFields(area_mdl.AreaModel.__proto__),
    [_areaItems]: dart.finalFieldType(core.List)
  }));
  glassmorphic_pg.GlassmorphicPage = class GlassmorphicPage extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new glassmorphic_pg.GlassmorphicPage.new({key: key});
    }
    createState() {
      return new glassmorphic_pg._GlassmorphicPageState.new();
    }
  };
  (glassmorphic_pg.GlassmorphicPage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    glassmorphic_pg.GlassmorphicPage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = glassmorphic_pg.GlassmorphicPage.prototype;
  dart.addTypeTests(glassmorphic_pg.GlassmorphicPage);
  dart.addTypeCaches(glassmorphic_pg.GlassmorphicPage);
  dart.setMethodSignature(glassmorphic_pg.GlassmorphicPage, () => ({
    __proto__: dart.getMethods(glassmorphic_pg.GlassmorphicPage.__proto__),
    createState: dart.fnType(framework.State$(glassmorphic_pg.GlassmorphicPage), [])
  }));
  dart.setLibraryUri(glassmorphic_pg.GlassmorphicPage, I[18]);
  glassmorphic_pg._GlassmorphicPageState = class _GlassmorphicPageState extends framework.State$(glassmorphic_pg.GlassmorphicPage) {
    build(context) {
      let sz = media_query.MediaQuery.of(context).size;
      return new scaffold.Scaffold.new({body: new container.Container.new({decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.blue, image: new decoration_image.DecorationImage.new({fit: box_fit.BoxFit.cover, image: new image_resolution.AssetImage.new("lib/assets/images/calm.jpg")})}), child: new custom_glassmorphism.CustomGlassmorphism.new({width: sz.width, height: sz.height, borderRadius: 0, child: new basic.Padding.new({padding: C[30] || CT.C30, child: new basic.Column.new({children: T$.JSArrayOfWidget().of([new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T$.JSArrayOfWidget().of([new circle_avatar.CircleAvatar.new({backgroundColor: colors$0.kWhite, child: new icon.Icon.new(icons.Icons.people)}), new text$.Text.new("O")])}), new container.Container.new({child: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T$.JSArrayOfWidget().of([new text$.Text.new("Glassmorphic Page", {style: new text_style.TextStyle.new({fontFamily: "Poppins", fontSize: 18})}), new basic.SizedBox.new({height: 10}), new text$.Text.new("Welcome to learn something"), new basic.SizedBox.new({height: 10})])})}), new basic.Expanded.new({child: new (T$.ConsumerOfAreaModel()).new({builder: dart.fn((contex, value, index) => new scroll_view.GridView.builder({itemCount: T$.intN().as(dart.dload(value.areaItems, 'length')), gridDelegate: new sliver_grid.SliverGridDelegateWithFixedCrossAxisCount.new({crossAxisCount: 2, childAspectRatio: 1 / 1.3}), itemBuilder: dart.fn((context, index) => new quiz_area_tile.QuizAreaTile.new({title: core.String.as(dart.dsend(dart.dsend(value.areaItems, '_get', [index]), '_get', [0])), imagePath: core.String.as(dart.dsend(dart.dsend(value.areaItems, '_get', [index]), '_get', [1])), color: dart.dsend(dart.dsend(value.areaItems, '_get', [index]), '_get', [2])}), T$.BuildContextAndintToQuizAreaTile())}), T$.BuildContextAndAreaModelAndWidgetNToGridView())})})])})})})})});
    }
    static ['_#new#tearOff']() {
      return new glassmorphic_pg._GlassmorphicPageState.new();
    }
  };
  (glassmorphic_pg._GlassmorphicPageState.new = function() {
    glassmorphic_pg._GlassmorphicPageState.__proto__.new.call(this);
    ;
  }).prototype = glassmorphic_pg._GlassmorphicPageState.prototype;
  dart.addTypeTests(glassmorphic_pg._GlassmorphicPageState);
  dart.addTypeCaches(glassmorphic_pg._GlassmorphicPageState);
  dart.setMethodSignature(glassmorphic_pg._GlassmorphicPageState, () => ({
    __proto__: dart.getMethods(glassmorphic_pg._GlassmorphicPageState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(glassmorphic_pg._GlassmorphicPageState, I[18]);
  var title$ = dart.privateName(quiz_area_tile, "QuizAreaTile.title");
  var imagePath$ = dart.privateName(quiz_area_tile, "QuizAreaTile.imagePath");
  var color$ = dart.privateName(quiz_area_tile, "QuizAreaTile.color");
  quiz_area_tile.QuizAreaTile = class QuizAreaTile extends framework.StatelessWidget {
    get title() {
      return this[title$];
    }
    set title(value) {
      super.title = value;
    }
    get imagePath() {
      return this[imagePath$];
    }
    set imagePath(value) {
      super.imagePath = value;
    }
    get color() {
      return this[color$];
    }
    set color(value) {
      super.color = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let title = opts && 'title' in opts ? opts.title : null;
      let imagePath = opts && 'imagePath' in opts ? opts.imagePath : null;
      let color = opts && 'color' in opts ? opts.color : null;
      return new quiz_area_tile.QuizAreaTile.new({key: key, title: title, imagePath: imagePath, color: color});
    }
    build(context) {
      return new basic.Padding.new({padding: new edge_insets.EdgeInsets.all(12), child: new container.Container.new({decoration: new box_decoration.BoxDecoration.new({color: T$.ColorN().as(dart.dsend(this.color, '_get', [100])), borderRadius: new border_radius.BorderRadius.circular(16)}), child: new basic.Column.new({children: T$.JSArrayOfWidget().of([new basic.SizedBox.new({height: 20}), new image.Image.network(this.imagePath, {height: 64}), new basic.SizedBox.new({height: 20}), new text$.Text.new(this.title, {style: new text_style.TextStyle.new({fontWeight: ui.FontWeight.bold})})])})})});
    }
  };
  (quiz_area_tile.QuizAreaTile.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let title = opts && 'title' in opts ? opts.title : null;
    let imagePath = opts && 'imagePath' in opts ? opts.imagePath : null;
    let color = opts && 'color' in opts ? opts.color : null;
    this[title$] = title;
    this[imagePath$] = imagePath;
    this[color$] = color;
    quiz_area_tile.QuizAreaTile.__proto__.new.call(this, {key: key});
    ;
  }).prototype = quiz_area_tile.QuizAreaTile.prototype;
  dart.addTypeTests(quiz_area_tile.QuizAreaTile);
  dart.addTypeCaches(quiz_area_tile.QuizAreaTile);
  dart.setMethodSignature(quiz_area_tile.QuizAreaTile, () => ({
    __proto__: dart.getMethods(quiz_area_tile.QuizAreaTile.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(quiz_area_tile.QuizAreaTile, I[19]);
  dart.setFieldSignature(quiz_area_tile.QuizAreaTile, () => ({
    __proto__: dart.getFields(quiz_area_tile.QuizAreaTile.__proto__),
    title: dart.finalFieldType(core.String),
    imagePath: dart.finalFieldType(core.String),
    color: dart.finalFieldType(dart.dynamic)
  }));
  const StatelessElement_SingleChildWidgetElementMixin$36$ = class StatelessElement_SingleChildWidgetElementMixin extends framework.StatelessElement {};
  (StatelessElement_SingleChildWidgetElementMixin$36$.new = function(widget) {
    nested.SingleChildWidgetElementMixin[dart.mixinNew].call(this);
    StatelessElement_SingleChildWidgetElementMixin$36$.__proto__.new.call(this, widget);
  }).prototype = StatelessElement_SingleChildWidgetElementMixin$36$.prototype;
  dart.applyMixin(StatelessElement_SingleChildWidgetElementMixin$36$, nested.SingleChildWidgetElementMixin);
  nested._NestedElement = class _NestedElement extends StatelessElement_SingleChildWidgetElementMixin$36$ {
    static ['_#new#tearOff'](widget) {
      return new nested._NestedElement.new(widget);
    }
    get widget() {
      return nested.Nested.as(super.widget);
    }
    build() {
      let t9, t9$, t9$0;
      let nestedHook = null;
      let nextNode = (t9$ = (t9 = this[_parent], t9 == null ? null : t9.injectedChild), t9$ == null ? this.widget[_child$] : t9$);
      for (let child of this.widget[_children][$reversed]) {
        nextNode = nestedHook = new nested._NestedHook.new({owner: this, wrappedWidget: child, injectedChild: nextNode});
      }
      if (nestedHook != null) {
        for (let node of this.nodes) {
          t9$0 = node;
          (() => {
            t9$0.wrappedChild = dart.nullCheck(nestedHook).wrappedWidget;
            t9$0.injectedChild = nestedHook.injectedChild;
            return t9$0;
          })();
          let next = nestedHook.injectedChild;
          if (nested._NestedHook.is(next)) {
            nestedHook = next;
          } else {
            break;
          }
        }
      }
      return dart.nullCheck(nextNode);
    }
  };
  (nested._NestedElement.new = function(widget) {
    this.nodes = T$.LinkedHashSetOf_NestedHookElement().new();
    nested._NestedElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested._NestedElement.prototype;
  dart.addTypeTests(nested._NestedElement);
  dart.addTypeCaches(nested._NestedElement);
  dart.setGetterSignature(nested._NestedElement, () => ({
    __proto__: dart.getGetters(nested._NestedElement.__proto__),
    widget: nested.Nested
  }));
  dart.setLibraryUri(nested._NestedElement, I[3]);
  dart.setFieldSignature(nested._NestedElement, () => ({
    __proto__: dart.getFields(nested._NestedElement.__proto__),
    nodes: dart.finalFieldType(core.Set$(nested._NestedHookElement))
  }));
  nested._NestedHook = class _NestedHook extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let injectedChild = opts && 'injectedChild' in opts ? opts.injectedChild : null;
      let wrappedWidget = opts && 'wrappedWidget' in opts ? opts.wrappedWidget : null;
      let owner = opts && 'owner' in opts ? opts.owner : null;
      return new nested._NestedHook.new({injectedChild: injectedChild, wrappedWidget: wrappedWidget, owner: owner});
    }
    createElement() {
      return new nested._NestedHookElement.new(this);
    }
    build(context) {
      return dart.throw(new core.StateError.new("handled internally"));
    }
  };
  (nested._NestedHook.new = function(opts) {
    let injectedChild = opts && 'injectedChild' in opts ? opts.injectedChild : null;
    let wrappedWidget = opts && 'wrappedWidget' in opts ? opts.wrappedWidget : null;
    let owner = opts && 'owner' in opts ? opts.owner : null;
    this.injectedChild = injectedChild;
    this.wrappedWidget = wrappedWidget;
    this.owner = owner;
    nested._NestedHook.__proto__.new.call(this);
    ;
  }).prototype = nested._NestedHook.prototype;
  dart.addTypeTests(nested._NestedHook);
  dart.addTypeCaches(nested._NestedHook);
  dart.setMethodSignature(nested._NestedHook, () => ({
    __proto__: dart.getMethods(nested._NestedHook.__proto__),
    createElement: dart.fnType(nested._NestedHookElement, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(nested._NestedHook, I[3]);
  dart.setFieldSignature(nested._NestedHook, () => ({
    __proto__: dart.getFields(nested._NestedHook.__proto__),
    wrappedWidget: dart.finalFieldType(nested.SingleChildWidget),
    injectedChild: dart.finalFieldType(dart.nullable(framework.Widget)),
    owner: dart.finalFieldType(nested._NestedElement)
  }));
  var _injectedChild = dart.privateName(nested, "_injectedChild");
  var _wrappedChild = dart.privateName(nested, "_wrappedChild");
  nested._NestedHookElement = class _NestedHookElement extends framework.StatelessElement {
    static ['_#new#tearOff'](widget) {
      return new nested._NestedHookElement.new(widget);
    }
    get widget() {
      return nested._NestedHook.as(super.widget);
    }
    get injectedChild() {
      return this[_injectedChild];
    }
    set injectedChild(value) {
      let previous = this[_injectedChild];
      if (nested._NestedHook.is(value) && nested._NestedHook.is(previous) && framework.Widget.canUpdate(value.wrappedWidget, previous.wrappedWidget)) {
        return;
      }
      if (!dart.equals(previous, value)) {
        this[_injectedChild] = value;
        this.visitChildren(dart.fn(e => e.markNeedsBuild(), T$.ElementTovoid()));
      }
    }
    get wrappedChild() {
      return this[_wrappedChild];
    }
    set wrappedChild(value) {
      if (!dart.equals(this[_wrappedChild], value)) {
        this[_wrappedChild] = value;
        this.markNeedsBuild();
      }
    }
    mount(parent, newSlot) {
      this.widget.owner.nodes.add(this);
      this[_wrappedChild] = this.widget.wrappedWidget;
      this[_injectedChild] = this.widget.injectedChild;
      super.mount(parent, newSlot);
    }
    unmount() {
      this.widget.owner.nodes.remove(this);
      super.unmount();
    }
    build() {
      return dart.nullCheck(this.wrappedChild);
    }
  };
  (nested._NestedHookElement.new = function(widget) {
    this[_injectedChild] = null;
    this[_wrappedChild] = null;
    nested._NestedHookElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested._NestedHookElement.prototype;
  dart.addTypeTests(nested._NestedHookElement);
  dart.addTypeCaches(nested._NestedHookElement);
  dart.setMethodSignature(nested._NestedHookElement, () => ({
    __proto__: dart.getMethods(nested._NestedHookElement.__proto__),
    mount: dart.fnType(dart.void, [dart.nullable(framework.Element), dart.dynamic])
  }));
  dart.setGetterSignature(nested._NestedHookElement, () => ({
    __proto__: dart.getGetters(nested._NestedHookElement.__proto__),
    widget: nested._NestedHook,
    injectedChild: dart.nullable(framework.Widget),
    wrappedChild: dart.nullable(nested.SingleChildWidget)
  }));
  dart.setSetterSignature(nested._NestedHookElement, () => ({
    __proto__: dart.getSetters(nested._NestedHookElement.__proto__),
    injectedChild: dart.nullable(framework.Widget),
    wrappedChild: dart.nullable(nested.SingleChildWidget)
  }));
  dart.setLibraryUri(nested._NestedHookElement, I[3]);
  dart.setFieldSignature(nested._NestedHookElement, () => ({
    __proto__: dart.getFields(nested._NestedHookElement.__proto__),
    [_injectedChild]: dart.fieldType(dart.nullable(framework.Widget)),
    [_wrappedChild]: dart.fieldType(dart.nullable(nested.SingleChildWidget))
  }));
  nested.SingleChildWidget = class SingleChildWidget extends core.Object {};
  (nested.SingleChildWidget.new = function() {
    ;
  }).prototype = nested.SingleChildWidget.prototype;
  dart.addTypeTests(nested.SingleChildWidget);
  dart.addTypeCaches(nested.SingleChildWidget);
  nested.SingleChildWidget[dart.implements] = () => [framework.Widget];
  dart.setLibraryUri(nested.SingleChildWidget, I[3]);
  const StatefulElement_SingleChildWidgetElementMixin$36 = class StatefulElement_SingleChildWidgetElementMixin extends framework.StatefulElement {};
  (StatefulElement_SingleChildWidgetElementMixin$36.new = function(widget) {
    nested.SingleChildWidgetElementMixin[dart.mixinNew].call(this);
    StatefulElement_SingleChildWidgetElementMixin$36.__proto__.new.call(this, widget);
  }).prototype = StatefulElement_SingleChildWidgetElementMixin$36.prototype;
  dart.applyMixin(StatefulElement_SingleChildWidgetElementMixin$36, nested.SingleChildWidgetElementMixin);
  nested.SingleChildStatefulElement = class SingleChildStatefulElement extends StatefulElement_SingleChildWidgetElementMixin$36 {
    static ['_#new#tearOff'](widget) {
      return new nested.SingleChildStatefulElement.new(widget);
    }
    get widget() {
      return nested.SingleChildStatefulWidget.as(super.widget);
    }
    get state() {
      return T$.SingleChildStateOfSingleChildStatefulWidget().as(super.state);
    }
    build() {
      if (this[_parent] != null) {
        return this.state.buildWithChild(this, dart.nullCheck(dart.nullCheck(this[_parent]).injectedChild));
      }
      return super.build();
    }
  };
  (nested.SingleChildStatefulElement.new = function(widget) {
    nested.SingleChildStatefulElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested.SingleChildStatefulElement.prototype;
  dart.addTypeTests(nested.SingleChildStatefulElement);
  dart.addTypeCaches(nested.SingleChildStatefulElement);
  dart.setGetterSignature(nested.SingleChildStatefulElement, () => ({
    __proto__: dart.getGetters(nested.SingleChildStatefulElement.__proto__),
    widget: nested.SingleChildStatefulWidget,
    state: nested.SingleChildState$(nested.SingleChildStatefulWidget)
  }));
  dart.setLibraryUri(nested.SingleChildStatefulElement, I[3]);
  var builder$7 = dart.privateName(nested, "SingleChildBuilder.builder");
  nested.SingleChildBuilder = class SingleChildBuilder extends nested.SingleChildStatelessWidget {
    get builder() {
      return this[builder$7];
    }
    set builder(value) {
      super.builder = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new nested.SingleChildBuilder.new({key: key, builder: builder, child: child});
    }
    buildWithChild(context, child) {
      let t10, t9;
      t9 = context;
      t10 = child;
      return this.builder(t9, t10);
    }
  };
  (nested.SingleChildBuilder.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let child = opts && 'child' in opts ? opts.child : null;
    this[builder$7] = builder;
    nested.SingleChildBuilder.__proto__.new.call(this, {key: key, child: child});
    ;
  }).prototype = nested.SingleChildBuilder.prototype;
  dart.addTypeTests(nested.SingleChildBuilder);
  dart.addTypeCaches(nested.SingleChildBuilder);
  dart.setMethodSignature(nested.SingleChildBuilder, () => ({
    __proto__: dart.getMethods(nested.SingleChildBuilder.__proto__),
    buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
  }));
  dart.setLibraryUri(nested.SingleChildBuilder, I[3]);
  dart.setFieldSignature(nested.SingleChildBuilder, () => ({
    __proto__: dart.getFields(nested.SingleChildBuilder.__proto__),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)]))
  }));
  nested.SingleChildStatelessWidgetMixin = class SingleChildStatelessWidgetMixin extends core.Object {};
  nested.SingleChildStatelessWidgetMixin[dart.mixinOn] = Object => class SingleChildStatelessWidgetMixin extends Object {
    get [_child$]() {
      return this.child;
    }
    createElement() {
      return new nested.SingleChildStatelessElement.new(this);
    }
    build(context) {
      return this.buildWithChild(context, this.child);
    }
  };
  (nested.SingleChildStatelessWidgetMixin[dart.mixinNew] = function() {
  }).prototype = nested.SingleChildStatelessWidgetMixin.prototype;
  dart.addTypeTests(nested.SingleChildStatelessWidgetMixin);
  dart.addTypeCaches(nested.SingleChildStatelessWidgetMixin);
  nested.SingleChildStatelessWidgetMixin[dart.implements] = () => [framework.StatelessWidget, nested.SingleChildStatelessWidget, core.Object];
  dart.setMethodSignature(nested.SingleChildStatelessWidgetMixin, () => ({
    __proto__: dart.getMethods(nested.SingleChildStatelessWidgetMixin.__proto__),
    createElement: dart.fnType(nested.SingleChildStatelessElement, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(nested.SingleChildStatelessWidgetMixin, () => ({
    __proto__: dart.getGetters(nested.SingleChildStatelessWidgetMixin.__proto__),
    [_child$]: dart.nullable(framework.Widget)
  }));
  dart.setLibraryUri(nested.SingleChildStatelessWidgetMixin, I[3]);
  nested.SingleChildStatefulWidgetMixin = class SingleChildStatefulWidgetMixin extends framework.StatefulWidget {};
  nested.SingleChildStatefulWidgetMixin[dart.mixinOn] = StatefulWidget => class SingleChildStatefulWidgetMixin extends StatefulWidget {
    createElement() {
      return new nested._SingleChildStatefulMixinElement.new(this);
    }
  };
  dart.addTypeTests(nested.SingleChildStatefulWidgetMixin);
  dart.addTypeCaches(nested.SingleChildStatefulWidgetMixin);
  nested.SingleChildStatefulWidgetMixin[dart.implements] = () => [nested.SingleChildWidget, framework.StatefulWidget];
  dart.setMethodSignature(nested.SingleChildStatefulWidgetMixin, () => ({
    __proto__: dart.getMethods(nested.SingleChildStatefulWidgetMixin.__proto__),
    createElement: dart.fnType(nested._SingleChildStatefulMixinElement, [])
  }));
  dart.setLibraryUri(nested.SingleChildStatefulWidgetMixin, I[3]);
  const _is_SingleChildStateMixin_default = Symbol('_is_SingleChildStateMixin_default');
  nested.SingleChildStateMixin$ = dart.generic(T => {
    class SingleChildStateMixin extends framework.State$(T) {}
    SingleChildStateMixin[dart.mixinOn] = State => class SingleChildStateMixin extends State {
      build(context) {
        return this.buildWithChild(context, dart.nullCheck(nested.SingleChildStatefulWidgetMixin.as(this.widget).child));
      }
    };
    dart.addTypeTests(SingleChildStateMixin);
    SingleChildStateMixin.prototype[_is_SingleChildStateMixin_default] = true;
    dart.addTypeCaches(SingleChildStateMixin);
    SingleChildStateMixin[dart.implements] = () => [framework.State$(T)];
    dart.setMethodSignature(SingleChildStateMixin, () => ({
      __proto__: dart.getMethods(SingleChildStateMixin.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(SingleChildStateMixin, I[3]);
    return SingleChildStateMixin;
  });
  nested.SingleChildStateMixin = nested.SingleChildStateMixin$();
  dart.addTypeTests(nested.SingleChildStateMixin, _is_SingleChildStateMixin_default);
  const StatefulElement_SingleChildWidgetElementMixin$36$ = class StatefulElement_SingleChildWidgetElementMixin extends framework.StatefulElement {};
  (StatefulElement_SingleChildWidgetElementMixin$36$.new = function(widget) {
    nested.SingleChildWidgetElementMixin[dart.mixinNew].call(this);
    StatefulElement_SingleChildWidgetElementMixin$36$.__proto__.new.call(this, widget);
  }).prototype = StatefulElement_SingleChildWidgetElementMixin$36$.prototype;
  dart.applyMixin(StatefulElement_SingleChildWidgetElementMixin$36$, nested.SingleChildWidgetElementMixin);
  nested._SingleChildStatefulMixinElement = class _SingleChildStatefulMixinElement extends StatefulElement_SingleChildWidgetElementMixin$36$ {
    static ['_#new#tearOff'](widget) {
      return new nested._SingleChildStatefulMixinElement.new(widget);
    }
    get widget() {
      return nested.SingleChildStatefulWidgetMixin.as(super.widget);
    }
    get state() {
      return T$.SingleChildStateMixinOfStatefulWidget().as(super.state);
    }
    build() {
      if (this[_parent] != null) {
        return this.state.buildWithChild(this, dart.nullCheck(dart.nullCheck(this[_parent]).injectedChild));
      }
      return super.build();
    }
  };
  (nested._SingleChildStatefulMixinElement.new = function(widget) {
    nested._SingleChildStatefulMixinElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested._SingleChildStatefulMixinElement.prototype;
  dart.addTypeTests(nested._SingleChildStatefulMixinElement);
  dart.addTypeCaches(nested._SingleChildStatefulMixinElement);
  dart.setGetterSignature(nested._SingleChildStatefulMixinElement, () => ({
    __proto__: dart.getGetters(nested._SingleChildStatefulMixinElement.__proto__),
    widget: nested.SingleChildStatefulWidgetMixin,
    state: nested.SingleChildStateMixin$(framework.StatefulWidget)
  }));
  dart.setLibraryUri(nested._SingleChildStatefulMixinElement, I[3]);
  nested.SingleChildInheritedElementMixin = class SingleChildInheritedElementMixin extends core.Object {};
  nested.SingleChildInheritedElementMixin[dart.mixinOn] = _SingleChildInheritedElementMixin$36InheritedElement$36SingleChildWidgetElementMixin => class SingleChildInheritedElementMixin extends _SingleChildInheritedElementMixin$36InheritedElement$36SingleChildWidgetElementMixin {
    build() {
      if (this[_parent] != null) {
        return dart.nullCheck(dart.nullCheck(this[_parent]).injectedChild);
      }
      return super.build();
    }
  };
  dart.addTypeTests(nested.SingleChildInheritedElementMixin);
  dart.addTypeCaches(nested.SingleChildInheritedElementMixin);
  nested.SingleChildInheritedElementMixin[dart.implements] = () => [nested.SingleChildWidgetElementMixin, framework.InheritedElement];
  dart.setMethodSignature(nested.SingleChildInheritedElementMixin, () => ({
    __proto__: dart.getMethods(nested.SingleChildInheritedElementMixin.__proto__),
    build: dart.fnType(framework.Widget, [])
  }));
  dart.setLibraryUri(nested.SingleChildInheritedElementMixin, I[3]);
  var Gradient_transform = dart.privateName(gradient, "Gradient.transform");
  var Gradient_stops = dart.privateName(gradient, "Gradient.stops");
  var Gradient_colors = dart.privateName(gradient, "Gradient.colors");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  var LinearGradient_tileMode = dart.privateName(gradient, "LinearGradient.tileMode");
  var Alignment_y = dart.privateName(alignment, "Alignment.y");
  var Alignment_x = dart.privateName(alignment, "Alignment.x");
  var LinearGradient_end = dart.privateName(gradient, "LinearGradient.end");
  var LinearGradient_begin = dart.privateName(gradient, "LinearGradient.begin");
  dart.defineLazy(colors$0, {
    /*colors$0.kRed*/get kRed() {
      return C[31] || CT.C31;
    },
    /*colors$0.kGreen*/get kGreen() {
      return C[32] || CT.C32;
    },
    /*colors$0.kBlue*/get kBlue() {
      return C[33] || CT.C33;
    },
    /*colors$0.kYellow*/get kYellow() {
      return C[45] || CT.C45;
    },
    /*colors$0.kGrey*/get kGrey() {
      return C[57] || CT.C57;
    },
    /*colors$0.kWhite*/get kWhite() {
      return C[58] || CT.C58;
    },
    /*colors$0.kBlack*/get kBlack() {
      return C[59] || CT.C59;
    },
    /*colors$0.kTransparent*/get kTransparent() {
      return C[60] || CT.C60;
    },
    /*colors$0.kAppPrimary*/get kAppPrimary() {
      return C[61] || CT.C61;
    },
    /*colors$0.kAppPrimaryDark*/get kAppPrimaryDark() {
      return C[62] || CT.C62;
    },
    /*colors$0.kAppPrimaryDark2*/get kAppPrimaryDark2() {
      return C[63] || CT.C63;
    },
    /*colors$0.kAppPrimaryLight*/get kAppPrimaryLight() {
      return C[64] || CT.C64;
    },
    /*colors$0.kAppSecondary*/get kAppSecondary() {
      return C[65] || CT.C65;
    },
    /*colors$0.kAppSecondaryLight*/get kAppSecondaryLight() {
      return C[66] || CT.C66;
    },
    /*colors$0.kAppBiruDark*/get kAppBiruDark() {
      return C[67] || CT.C67;
    },
    /*colors$0.kAppBiruLight*/get kAppBiruLight() {
      return new ui.Color.new(4278235065);
    },
    /*colors$0.kAppKuning*/get kAppKuning() {
      return C[68] || CT.C68;
    },
    /*colors$0.kAppCoklat*/get kAppCoklat() {
      return C[69] || CT.C69;
    },
    /*colors$0.kAppMerah*/get kAppMerah() {
      return C[70] || CT.C70;
    },
    /*colors$0.kAppGrey*/get kAppGrey() {
      return C[71] || CT.C71;
    },
    /*colors$0.kBgPrimary*/get kBgPrimary() {
      return C[72] || CT.C72;
    },
    /*colors$0.kBgSecondary*/get kBgSecondary() {
      return C[73] || CT.C73;
    },
    /*colors$0.kBgSuccess*/get kBgSuccess() {
      return C[74] || CT.C74;
    },
    /*colors$0.kBgDanger*/get kBgDanger() {
      return C[75] || CT.C75;
    },
    /*colors$0.kBgWarning*/get kBgWarning() {
      return C[76] || CT.C76;
    },
    /*colors$0.kBgInfo*/get kBgInfo() {
      return C[77] || CT.C77;
    },
    /*colors$0.kBgLight*/get kBgLight() {
      return C[78] || CT.C78;
    },
    /*colors$0.kBgDark*/get kBgDark() {
      return C[79] || CT.C79;
    },
    /*colors$0.bgDefault*/get bgDefault() {
      return C[80] || CT.C80;
    },
    /*colors$0.kAppGradientPrim*/get kAppGradientPrim() {
      return C[81] || CT.C81;
    },
    /*colors$0.kPrimaryGradient*/get kPrimaryGradient() {
      return C[86] || CT.C86;
    }
  }, false);
  dart.defineLazy(sizes, {
    /*sizes.kDefaultPadding*/get kDefaultPadding() {
      return 12;
    },
    /*sizes.kMobileWidth*/get kMobileWidth() {
      return 600;
    },
    /*sizes.kTabletWidth*/get kTabletWidth() {
      return 1200;
    },
    /*sizes.kTabletBreakpointWidth*/get kTabletBreakpointWidth() {
      return 768;
    },
    /*sizes.kDesktopBreakpointWidth*/get kDesktopBreakpointWidth() {
      return 1440;
    },
    /*sizes.kSideMenuWidth*/get kSideMenuWidth() {
      return 300;
    },
    /*sizes.kNavigationRailWidth*/get kNavigationRailWidth() {
      return 72;
    }
  }, false);
  themes.Themes = class Themes extends core.Object {
    static ['_#new#tearOff']() {
      return new themes.Themes.new();
    }
  };
  (themes.Themes.new = function() {
    ;
  }).prototype = themes.Themes.prototype;
  dart.addTypeTests(themes.Themes);
  dart.addTypeCaches(themes.Themes);
  dart.setLibraryUri(themes.Themes, I[20]);
  dart.setStaticFieldSignature(themes.Themes, () => ['lightMode', 'darkMode']);
  dart.defineLazy(themes.Themes, {
    /*themes.Themes.lightMode*/get lightMode() {
      return theme_data.ThemeData.new({primaryColor: colors$0.kAppPrimary, brightness: ui.Brightness.light, fontFamily: "Poppins", inputDecorationTheme: new input_decorator.InputDecorationTheme.new({border: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(20), borderSide: borders.BorderSide.none}), filled: true, fillColor: colors.Colors.grey.withOpacity(0.1)})});
    },
    /*themes.Themes.darkMode*/get darkMode() {
      return theme_data.ThemeData.new({primaryColor: colors.Colors.blue, brightness: ui.Brightness.dark, fontFamily: "Poppins", inputDecorationTheme: new input_decorator.InputDecorationTheme.new({border: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(20), borderSide: borders.BorderSide.none}), filled: true, fillColor: colors.Colors.grey.withOpacity(0.1)})});
    }
  }, false);
  myappbar.MyAppBar = function MyAppBar() {
    return new app_bar.AppBar.new({backgroundColor: colors.Colors.transparent, elevation: 0, leading: new basic.Padding.new({padding: C[90] || CT.C90, child: new icon_button.IconButton.new({onPressed: dart.fn(() => {
          }, T$.VoidTovoid()), icon: new icon.Icon.new(icons.Icons.menu, {color: colors.Colors.grey._get(800)})})}), actions: T$.JSArrayOfWidget().of([new basic.Padding.new({padding: C[91] || CT.C91, child: new icon_button.IconButton.new({onPressed: dart.fn(() => {
            }, T$.VoidTovoid()), icon: new icon.Icon.new(icons.Icons.person, {color: colors.Colors.grey._get(800)})})})])});
  };
  var onTap$ = dart.privateName(mybuttons, "MyButtons.onTap");
  var child$ = dart.privateName(mybuttons, "MyButtons.child");
  mybuttons.MyButtons = class MyButtons extends framework.StatelessWidget {
    get onTap() {
      return this[onTap$];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get child() {
      return this[child$];
    }
    set child(value) {
      super.child = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let onTap = opts && 'onTap' in opts ? opts.onTap : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new mybuttons.MyButtons.new({key: key, onTap: onTap, child: child});
    }
    build(context) {
      let tm = theme.Theme.of(context).colorScheme;
      return new gesture_detector.GestureDetector.new({onTap: this.onTap, child: new container.Container.new({padding: new edge_insets.EdgeInsets.all(25), decoration: new box_decoration.BoxDecoration.new({color: tm.primary, borderRadius: new border_radius.BorderRadius.circular(20)}), child: this.child})});
    }
  };
  (mybuttons.MyButtons.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let child = opts && 'child' in opts ? opts.child : null;
    this[onTap$] = onTap;
    this[child$] = child;
    mybuttons.MyButtons.__proto__.new.call(this, {key: key});
    ;
  }).prototype = mybuttons.MyButtons.prototype;
  dart.addTypeTests(mybuttons.MyButtons);
  dart.addTypeCaches(mybuttons.MyButtons);
  dart.setMethodSignature(mybuttons.MyButtons, () => ({
    __proto__: dart.getMethods(mybuttons.MyButtons.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(mybuttons.MyButtons, I[21]);
  dart.setFieldSignature(mybuttons.MyButtons, () => ({
    __proto__: dart.getFields(mybuttons.MyButtons.__proto__),
    onTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    child: dart.finalFieldType(framework.Widget)
  }));
  mybuttons.MyAppButton = class MyAppButton extends core.Object {
    static appPrimary(context, title, width, $function) {
      return new material_button.MaterialButton.new({minWidth: width, onPressed: $function, child: new container.Container.new({width: width, alignment: alignment.Alignment.center, padding: new edge_insets.EdgeInsets.all(12 * 0.5), decoration: new box_decoration.BoxDecoration.new({gradient: colors$0.kAppGradientPrim, borderRadius: new border_radius.BorderRadius.all(new ui.Radius.circular(10)), border: box_border.Border.all({color: colors$0.kAppPrimaryDark, width: 2})}), child: new text$.Text.new(title, {style: myfunctions_hlp.getFont(16, {color: colors$0.kBlack})})})});
    }
    static defaultBtn(context, text, width, $function) {
      return new material_button.MaterialButton.new({minWidth: width, padding: new edge_insets.EdgeInsets.all(20), onPressed: $function, child: new text$.Text.new(text, {textAlign: ui.TextAlign.center, style: new text_style.TextStyle.new({fontSize: 20}).copyWith({color: colors$0.kBlack, fontWeight: ui.FontWeight.bold})})});
    }
    static successBtn(context, text, width, $function) {
      return new material_button.MaterialButton.new({minWidth: width, padding: new edge_insets.EdgeInsets.all(20), onPressed: $function, child: new text$.Text.new(text, {textAlign: ui.TextAlign.center, style: new text_style.TextStyle.new({fontSize: 20}).copyWith({color: colors$0.kBlack, fontWeight: ui.FontWeight.bold})})});
    }
    static ['_#new#tearOff']() {
      return new mybuttons.MyAppButton.new();
    }
  };
  (mybuttons.MyAppButton.new = function() {
    ;
  }).prototype = mybuttons.MyAppButton.prototype;
  dart.addTypeTests(mybuttons.MyAppButton);
  dart.addTypeCaches(mybuttons.MyAppButton);
  dart.setStaticMethodSignature(mybuttons.MyAppButton, () => ['appPrimary', 'defaultBtn', 'successBtn']);
  dart.setLibraryUri(mybuttons.MyAppButton, I[21]);
  var iconPath$ = dart.privateName(menu_tab, "MenuTab.iconPath");
  menu_tab.MenuTab = class MenuTab extends framework.StatelessWidget {
    get iconPath() {
      return this[iconPath$];
    }
    set iconPath(value) {
      super.iconPath = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let iconPath = opts && 'iconPath' in opts ? opts.iconPath : null;
      return new menu_tab.MenuTab.new({key: key, iconPath: iconPath});
    }
    build(context) {
      return new tabs.Tab.new({height: 80, child: new container.Container.new({padding: new edge_insets.EdgeInsets.all(8), decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.grey._get(200), borderRadius: new border_radius.BorderRadius.circular(8)}), child: new icon.Icon.new(this.iconPath, {color: colors.Colors.grey._get(800)})})});
    }
  };
  (menu_tab.MenuTab.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let iconPath = opts && 'iconPath' in opts ? opts.iconPath : null;
    this[iconPath$] = iconPath;
    menu_tab.MenuTab.__proto__.new.call(this, {key: key});
    ;
  }).prototype = menu_tab.MenuTab.prototype;
  dart.addTypeTests(menu_tab.MenuTab);
  dart.addTypeCaches(menu_tab.MenuTab);
  dart.setMethodSignature(menu_tab.MenuTab, () => ({
    __proto__: dart.getMethods(menu_tab.MenuTab.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(menu_tab.MenuTab, I[22]);
  dart.setFieldSignature(menu_tab.MenuTab, () => ({
    __proto__: dart.getFields(menu_tab.MenuTab.__proto__),
    iconPath: dart.finalFieldType(icon_data.IconData)
  }));
  var width$ = dart.privateName(custom_glassmorphism, "CustomGlassmorphism.width");
  var height$ = dart.privateName(custom_glassmorphism, "CustomGlassmorphism.height");
  var borderRadius$ = dart.privateName(custom_glassmorphism, "CustomGlassmorphism.borderRadius");
  var child$0 = dart.privateName(custom_glassmorphism, "CustomGlassmorphism.child");
  custom_glassmorphism.CustomGlassmorphism = class CustomGlassmorphism extends framework.StatelessWidget {
    get width() {
      return this[width$];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[height$];
    }
    set height(value) {
      super.height = value;
    }
    get borderRadius() {
      return this[borderRadius$];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    get child() {
      return this[child$0];
    }
    set child(value) {
      super.child = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let width = opts && 'width' in opts ? opts.width : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : 20;
      let child = opts && 'child' in opts ? opts.child : null;
      return new custom_glassmorphism.CustomGlassmorphism.new({key: key, width: width, height: height, borderRadius: borderRadius, child: child});
    }
    build(context) {
      return new glassmorphism.GlassmorphicContainer.new({width: this.width, height: this.height, borderRadius: this.borderRadius, blur: 20, border: 2, linearGradient: new gradient.LinearGradient.new({colors: T$.JSArrayOfColor().of([new ui.Color.new(16777215).withOpacity(0.1), new ui.Color.new(16777215).withOpacity(0.05)])}), borderGradient: new gradient.LinearGradient.new({colors: T$.JSArrayOfColor().of([new ui.Color.new(16777215).withOpacity(0.5), new ui.Color.new(16777215).withOpacity(0.5)])}), child: this.child});
    }
  };
  (custom_glassmorphism.CustomGlassmorphism.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : 20;
    let child = opts && 'child' in opts ? opts.child : null;
    this[width$] = width;
    this[height$] = height;
    this[borderRadius$] = borderRadius;
    this[child$0] = child;
    custom_glassmorphism.CustomGlassmorphism.__proto__.new.call(this, {key: key});
    ;
  }).prototype = custom_glassmorphism.CustomGlassmorphism.prototype;
  dart.addTypeTests(custom_glassmorphism.CustomGlassmorphism);
  dart.addTypeCaches(custom_glassmorphism.CustomGlassmorphism);
  dart.setMethodSignature(custom_glassmorphism.CustomGlassmorphism, () => ({
    __proto__: dart.getMethods(custom_glassmorphism.CustomGlassmorphism.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(custom_glassmorphism.CustomGlassmorphism, I[23]);
  dart.setFieldSignature(custom_glassmorphism.CustomGlassmorphism, () => ({
    __proto__: dart.getFields(custom_glassmorphism.CustomGlassmorphism.__proto__),
    width: dart.finalFieldType(core.double),
    height: dart.finalFieldType(core.double),
    borderRadius: dart.finalFieldType(core.double),
    child: dart.finalFieldType(framework.Widget)
  }));
  var key$ = dart.privateName(glassmorphism, "GlassmorphicFlexContainer.key");
  var alignment$ = dart.privateName(glassmorphism, "GlassmorphicFlexContainer.alignment");
  var padding$ = dart.privateName(glassmorphism, "GlassmorphicFlexContainer.padding");
  var flex$ = dart.privateName(glassmorphism, "GlassmorphicFlexContainer.flex");
  var margin$ = dart.privateName(glassmorphism, "GlassmorphicFlexContainer.margin");
  var transform$ = dart.privateName(glassmorphism, "GlassmorphicFlexContainer.transform");
  var child$1 = dart.privateName(glassmorphism, "GlassmorphicFlexContainer.child");
  var borderRadius$0 = dart.privateName(glassmorphism, "GlassmorphicFlexContainer.borderRadius");
  var shape$ = dart.privateName(glassmorphism, "GlassmorphicFlexContainer.shape");
  var constraints$ = dart.privateName(glassmorphism, "GlassmorphicFlexContainer.constraints");
  var border$ = dart.privateName(glassmorphism, "GlassmorphicFlexContainer.border");
  var blur$ = dart.privateName(glassmorphism, "GlassmorphicFlexContainer.blur");
  var linearGradient$ = dart.privateName(glassmorphism, "GlassmorphicFlexContainer.linearGradient");
  var borderGradient$ = dart.privateName(glassmorphism, "GlassmorphicFlexContainer.borderGradient");
  glassmorphism.GlassmorphicFlexContainer = class GlassmorphicFlexContainer extends framework.StatelessWidget {
    get key() {
      return this[key$];
    }
    set key(value) {
      super.key = value;
    }
    get alignment() {
      return this[alignment$];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get padding() {
      return this[padding$];
    }
    set padding(value) {
      super.padding = value;
    }
    get flex() {
      return this[flex$];
    }
    set flex(value) {
      super.flex = value;
    }
    get margin() {
      return this[margin$];
    }
    set margin(value) {
      super.margin = value;
    }
    get transform() {
      return this[transform$];
    }
    set transform(value) {
      super.transform = value;
    }
    get child() {
      return this[child$1];
    }
    set child(value) {
      super.child = value;
    }
    get borderRadius() {
      return this[borderRadius$0];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    get shape() {
      return this[shape$];
    }
    set shape(value) {
      super.shape = value;
    }
    get constraints() {
      return this[constraints$];
    }
    set constraints(value) {
      super.constraints = value;
    }
    get border() {
      return this[border$];
    }
    set border(value) {
      super.border = value;
    }
    get blur() {
      return this[blur$];
    }
    set blur(value) {
      super.blur = value;
    }
    get linearGradient() {
      return this[linearGradient$];
    }
    set linearGradient(value) {
      super.linearGradient = value;
    }
    get borderGradient() {
      return this[borderGradient$];
    }
    set borderGradient(value) {
      super.borderGradient = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let alignment = opts && 'alignment' in opts ? opts.alignment : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let shape = opts && 'shape' in opts ? opts.shape : C[92] || CT.C92;
      let margin = opts && 'margin' in opts ? opts.margin : null;
      let transform = opts && 'transform' in opts ? opts.transform : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let linearGradient = opts && 'linearGradient' in opts ? opts.linearGradient : null;
      let border = opts && 'border' in opts ? opts.border : null;
      let blur = opts && 'blur' in opts ? opts.blur : null;
      let borderGradient = opts && 'borderGradient' in opts ? opts.borderGradient : null;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      let flex = opts && 'flex' in opts ? opts.flex : 1;
      return new glassmorphism.GlassmorphicFlexContainer.new({key: key, child: child, alignment: alignment, padding: padding, shape: shape, margin: margin, transform: transform, borderRadius: borderRadius, linearGradient: linearGradient, border: border, blur: blur, borderGradient: borderGradient, constraints: constraints, flex: flex});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment, {showName: false, defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfBoxConstraints()).new("constraints", this.constraints, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("margin", this.margin, {defaultValue: null}));
      properties.add(new (T$.ObjectFlagPropertyOfMatrix4()).has("transform", this.transform));
    }
    build(context) {
      let t9;
      return new basic.Expanded.new({flex: dart.nullCheck(this.flex), child: new container.Container.new({key: this.key, alignment: this.alignment, padding: this.padding, constraints: new box.BoxConstraints.tightForFinite(), transform: this.transform, child: new basic.Stack.new({children: T$.JSArrayOfWidget().of([new basic.ClipRRect.new({clipBehavior: ui.Clip.hardEdge, borderRadius: new border_radius.BorderRadius.circular(this.borderRadius), child: new basic.BackdropFilter.new({filter: ui.ImageFilter.blur({sigmaX: this.blur, sigmaY: this.blur * 2}), child: new container.Container.new({alignment: (t9 = this.alignment, t9 == null ? alignment.Alignment.topLeft : t9), decoration: new box_decoration.BoxDecoration.new({borderRadius: new border_radius.BorderRadius.circular(this.borderRadius), gradient: this.linearGradient})})})}), new glassmorphism.GlassmorphicBorder.new({strokeWidth: this.border, radius: this.borderRadius, gradient: this.borderGradient}), new basic.ClipRRect.new({clipBehavior: ui.Clip.hardEdge, borderRadius: new border_radius.BorderRadius.circular(this.borderRadius), child: new container.Container.new({child: this.child})})])})})});
    }
  };
  (glassmorphism.GlassmorphicFlexContainer.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let shape = opts && 'shape' in opts ? opts.shape : C[92] || CT.C92;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let transform = opts && 'transform' in opts ? opts.transform : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let linearGradient = opts && 'linearGradient' in opts ? opts.linearGradient : null;
    let border = opts && 'border' in opts ? opts.border : null;
    let blur = opts && 'blur' in opts ? opts.blur : null;
    let borderGradient = opts && 'borderGradient' in opts ? opts.borderGradient : null;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    let flex = opts && 'flex' in opts ? opts.flex : 1;
    this[key$] = key;
    this[child$1] = child;
    this[alignment$] = alignment;
    this[padding$] = padding;
    this[shape$] = shape;
    this[margin$] = margin;
    this[transform$] = transform;
    this[borderRadius$0] = borderRadius;
    this[linearGradient$] = linearGradient;
    this[border$] = border;
    this[blur$] = blur;
    this[borderGradient$] = borderGradient;
    this[constraints$] = constraints;
    this[flex$] = flex;
    if (!(margin == null || margin.isNonNegative)) dart.assertFailed(null, I[24], 127, 16, "margin == null || margin.isNonNegative");
    if (!(padding == null || padding.isNonNegative)) dart.assertFailed(null, I[24], 128, 16, "padding == null || padding.isNonNegative");
    if (!(dart.nullCheck(flex) >= 1)) dart.assertFailed("Flex value can be less than 1 : " + dart.str(flex) + ". Please Provide a flex value > 1", I[24], 130, 11, "flex! >= 1");
    if (!(constraints == null || constraints.debugAssertIsValid())) dart.assertFailed(null, I[24], 133, 16, "constraints == null || constraints.debugAssertIsValid()");
    glassmorphism.GlassmorphicFlexContainer.__proto__.new.call(this, {key: key});
    ;
  }).prototype = glassmorphism.GlassmorphicFlexContainer.prototype;
  dart.addTypeTests(glassmorphism.GlassmorphicFlexContainer);
  dart.addTypeCaches(glassmorphism.GlassmorphicFlexContainer);
  dart.setMethodSignature(glassmorphism.GlassmorphicFlexContainer, () => ({
    __proto__: dart.getMethods(glassmorphism.GlassmorphicFlexContainer.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(glassmorphism.GlassmorphicFlexContainer, I[25]);
  dart.setFieldSignature(glassmorphism.GlassmorphicFlexContainer, () => ({
    __proto__: dart.getFields(glassmorphism.GlassmorphicFlexContainer.__proto__),
    key: dart.finalFieldType(dart.nullable(key.Key)),
    alignment: dart.finalFieldType(dart.nullable(alignment.AlignmentGeometry)),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    flex: dart.finalFieldType(dart.nullable(core.int)),
    margin: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    transform: dart.finalFieldType(dart.nullable(vector_math_64.Matrix4)),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    borderRadius: dart.finalFieldType(core.double),
    shape: dart.finalFieldType(box_border.BoxShape),
    constraints: dart.finalFieldType(dart.nullable(box.BoxConstraints)),
    border: dart.finalFieldType(core.double),
    blur: dart.finalFieldType(core.double),
    linearGradient: dart.finalFieldType(gradient.LinearGradient),
    borderGradient: dart.finalFieldType(gradient.LinearGradient)
  }));
  var key$0 = dart.privateName(glassmorphism, "GlassmorphicContainer.key");
  var alignment$0 = dart.privateName(glassmorphism, "GlassmorphicContainer.alignment");
  var padding$0 = dart.privateName(glassmorphism, "GlassmorphicContainer.padding");
  var width$0 = dart.privateName(glassmorphism, "GlassmorphicContainer.width");
  var height$0 = dart.privateName(glassmorphism, "GlassmorphicContainer.height");
  var margin$0 = dart.privateName(glassmorphism, "GlassmorphicContainer.margin");
  var transform$0 = dart.privateName(glassmorphism, "GlassmorphicContainer.transform");
  var child$2 = dart.privateName(glassmorphism, "GlassmorphicContainer.child");
  var borderRadius$1 = dart.privateName(glassmorphism, "GlassmorphicContainer.borderRadius");
  var shape$0 = dart.privateName(glassmorphism, "GlassmorphicContainer.shape");
  var constraints$0 = dart.privateName(glassmorphism, "GlassmorphicContainer.constraints");
  var border$0 = dart.privateName(glassmorphism, "GlassmorphicContainer.border");
  var blur$0 = dart.privateName(glassmorphism, "GlassmorphicContainer.blur");
  var linearGradient$0 = dart.privateName(glassmorphism, "GlassmorphicContainer.linearGradient");
  var borderGradient$0 = dart.privateName(glassmorphism, "GlassmorphicContainer.borderGradient");
  glassmorphism.GlassmorphicContainer = class GlassmorphicContainer extends framework.StatelessWidget {
    get key() {
      return this[key$0];
    }
    set key(value) {
      super.key = value;
    }
    get alignment() {
      return this[alignment$0];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get padding() {
      return this[padding$0];
    }
    set padding(value) {
      super.padding = value;
    }
    get width() {
      return this[width$0];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[height$0];
    }
    set height(value) {
      super.height = value;
    }
    get margin() {
      return this[margin$0];
    }
    set margin(value) {
      super.margin = value;
    }
    get transform() {
      return this[transform$0];
    }
    set transform(value) {
      super.transform = value;
    }
    get child() {
      return this[child$2];
    }
    set child(value) {
      super.child = value;
    }
    get borderRadius() {
      return this[borderRadius$1];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    get shape() {
      return this[shape$0];
    }
    set shape(value) {
      super.shape = value;
    }
    get constraints() {
      return this[constraints$0];
    }
    set constraints(value) {
      super.constraints = value;
    }
    get border() {
      return this[border$0];
    }
    set border(value) {
      super.border = value;
    }
    get blur() {
      return this[blur$0];
    }
    set blur(value) {
      super.blur = value;
    }
    get linearGradient() {
      return this[linearGradient$0];
    }
    set linearGradient(value) {
      super.linearGradient = value;
    }
    get borderGradient() {
      return this[borderGradient$0];
    }
    set borderGradient(value) {
      super.borderGradient = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let alignment = opts && 'alignment' in opts ? opts.alignment : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let shape = opts && 'shape' in opts ? opts.shape : C[92] || CT.C92;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      let margin = opts && 'margin' in opts ? opts.margin : null;
      let transform = opts && 'transform' in opts ? opts.transform : null;
      let width = opts && 'width' in opts ? opts.width : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let linearGradient = opts && 'linearGradient' in opts ? opts.linearGradient : null;
      let border = opts && 'border' in opts ? opts.border : null;
      let blur = opts && 'blur' in opts ? opts.blur : null;
      let borderGradient = opts && 'borderGradient' in opts ? opts.borderGradient : null;
      return new glassmorphism.GlassmorphicContainer.new({key: key, child: child, alignment: alignment, padding: padding, shape: shape, constraints: constraints, margin: margin, transform: transform, width: width, height: height, borderRadius: borderRadius, linearGradient: linearGradient, border: border, blur: blur, borderGradient: borderGradient});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment, {showName: false, defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfBoxConstraints()).new("constraints", this.constraints, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("margin", this.margin, {defaultValue: null}));
      properties.add(new (T$.ObjectFlagPropertyOfMatrix4()).has("transform", this.transform));
    }
    build(context) {
      let t9, t9$;
      return new container.Container.new({key: this.key, width: this.width, margin: this.margin, alignment: this.alignment, constraints: this.constraints, height: this.height, transform: this.transform, child: new basic.Stack.new({alignment: (t9 = this.alignment, t9 == null ? alignment.Alignment.topLeft : t9), children: T$.JSArrayOfWidget().of([new basic.ClipRRect.new({clipBehavior: ui.Clip.hardEdge, borderRadius: new border_radius.BorderRadius.circular(this.borderRadius), child: new basic.BackdropFilter.new({filter: ui.ImageFilter.blur({sigmaX: this.blur, sigmaY: this.blur * 2}), child: new container.Container.new({alignment: (t9$ = this.alignment, t9$ == null ? alignment.Alignment.topLeft : t9$), decoration: new box_decoration.BoxDecoration.new({borderRadius: new border_radius.BorderRadius.circular(this.borderRadius), gradient: this.linearGradient})})})}), new glassmorphism.GlassmorphicBorder.new({strokeWidth: this.border, radius: this.borderRadius, width: this.width, height: this.height, gradient: this.borderGradient}), new basic.ClipRRect.new({clipBehavior: ui.Clip.hardEdge, borderRadius: new border_radius.BorderRadius.circular(this.borderRadius), child: new container.Container.new({child: this.child, alignment: this.alignment})})])})});
    }
  };
  (glassmorphism.GlassmorphicContainer.new = function(opts) {
    let t9, t9$;
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let shape = opts && 'shape' in opts ? opts.shape : C[92] || CT.C92;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let transform = opts && 'transform' in opts ? opts.transform : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let linearGradient = opts && 'linearGradient' in opts ? opts.linearGradient : null;
    let border = opts && 'border' in opts ? opts.border : null;
    let blur = opts && 'blur' in opts ? opts.blur : null;
    let borderGradient = opts && 'borderGradient' in opts ? opts.borderGradient : null;
    this[key$0] = key;
    this[child$2] = child;
    this[alignment$0] = alignment;
    this[padding$0] = padding;
    this[shape$0] = shape;
    this[margin$0] = margin;
    this[transform$0] = transform;
    this[width$0] = width;
    this[height$0] = height;
    this[borderRadius$1] = borderRadius;
    this[linearGradient$0] = linearGradient;
    this[border$0] = border;
    this[blur$0] = blur;
    this[borderGradient$0] = borderGradient;
    if (!(margin == null || margin.isNonNegative)) dart.assertFailed(null, I[24], 312, 16, "margin == null || margin.isNonNegative");
    if (!(padding == null || padding.isNonNegative)) dart.assertFailed(null, I[24], 313, 16, "padding == null || padding.isNonNegative");
    if (!(constraints == null || constraints.debugAssertIsValid())) dart.assertFailed(null, I[24], 314, 16, "constraints == null || constraints.debugAssertIsValid()");
    this[constraints$0] = (t9$ = (t9 = constraints, t9 == null ? null : t9.tighten({width: width, height: height})), t9$ == null ? new box.BoxConstraints.tightFor({width: width, height: height}) : t9$);
    glassmorphism.GlassmorphicContainer.__proto__.new.call(this, {key: key});
    ;
  }).prototype = glassmorphism.GlassmorphicContainer.prototype;
  dart.addTypeTests(glassmorphism.GlassmorphicContainer);
  dart.addTypeCaches(glassmorphism.GlassmorphicContainer);
  dart.setMethodSignature(glassmorphism.GlassmorphicContainer, () => ({
    __proto__: dart.getMethods(glassmorphism.GlassmorphicContainer.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(glassmorphism.GlassmorphicContainer, I[25]);
  dart.setFieldSignature(glassmorphism.GlassmorphicContainer, () => ({
    __proto__: dart.getFields(glassmorphism.GlassmorphicContainer.__proto__),
    key: dart.finalFieldType(dart.nullable(key.Key)),
    alignment: dart.finalFieldType(dart.nullable(alignment.AlignmentGeometry)),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    width: dart.finalFieldType(core.double),
    height: dart.finalFieldType(core.double),
    margin: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    transform: dart.finalFieldType(dart.nullable(vector_math_64.Matrix4)),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    borderRadius: dart.finalFieldType(core.double),
    shape: dart.finalFieldType(box_border.BoxShape),
    constraints: dart.finalFieldType(dart.nullable(box.BoxConstraints)),
    border: dart.finalFieldType(core.double),
    blur: dart.finalFieldType(core.double),
    linearGradient: dart.finalFieldType(gradient.LinearGradient),
    borderGradient: dart.finalFieldType(gradient.LinearGradient)
  }));
  var width$1 = dart.privateName(glassmorphism, "GlassmorphicBorder.width");
  var height$1 = dart.privateName(glassmorphism, "GlassmorphicBorder.height");
  var _painter = dart.privateName(glassmorphism, "_painter");
  var _radius = dart.privateName(glassmorphism, "_radius");
  glassmorphism.GlassmorphicBorder = class GlassmorphicBorder extends framework.StatelessWidget {
    get width() {
      return this[width$1];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[height$1];
    }
    set height(value) {
      super.height = value;
    }
    static ['_#new#tearOff'](opts) {
      let strokeWidth = opts && 'strokeWidth' in opts ? opts.strokeWidth : null;
      let radius = opts && 'radius' in opts ? opts.radius : null;
      let gradient = opts && 'gradient' in opts ? opts.gradient : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let width = opts && 'width' in opts ? opts.width : null;
      return new glassmorphism.GlassmorphicBorder.new({strokeWidth: strokeWidth, radius: radius, gradient: gradient, height: height, width: width});
    }
    build(context) {
      return new basic.CustomPaint.new({painter: this[_painter], size: media_query.MediaQuery.of(context).size, child: new container.Container.new({decoration: new box_decoration.BoxDecoration.new({borderRadius: new border_radius.BorderRadius.all(new ui.Radius.circular(this[_radius]))}), width: T$.doubleN().as(this.width), height: T$.doubleN().as(this.height)})});
    }
  };
  (glassmorphism.GlassmorphicBorder.new = function(opts) {
    let strokeWidth = opts && 'strokeWidth' in opts ? opts.strokeWidth : null;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let gradient = opts && 'gradient' in opts ? opts.gradient : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let width = opts && 'width' in opts ? opts.width : null;
    this[height$1] = height;
    this[width$1] = width;
    this[_painter] = new glassmorphism._GradientPainter.new({strokeWidth: strokeWidth, radius: radius, gradient: gradient});
    this[_radius] = radius;
    glassmorphism.GlassmorphicBorder.__proto__.new.call(this);
    ;
  }).prototype = glassmorphism.GlassmorphicBorder.prototype;
  dart.addTypeTests(glassmorphism.GlassmorphicBorder);
  dart.addTypeCaches(glassmorphism.GlassmorphicBorder);
  dart.setMethodSignature(glassmorphism.GlassmorphicBorder, () => ({
    __proto__: dart.getMethods(glassmorphism.GlassmorphicBorder.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(glassmorphism.GlassmorphicBorder, I[25]);
  dart.setFieldSignature(glassmorphism.GlassmorphicBorder, () => ({
    __proto__: dart.getFields(glassmorphism.GlassmorphicBorder.__proto__),
    [_painter]: dart.finalFieldType(glassmorphism._GradientPainter),
    [_radius]: dart.finalFieldType(core.double),
    width: dart.finalFieldType(dart.dynamic),
    height: dart.finalFieldType(dart.dynamic)
  }));
  glassmorphism._GradientPainter = class _GradientPainter extends custom_paint.CustomPainter {
    static ['_#new#tearOff'](opts) {
      let strokeWidth = opts && 'strokeWidth' in opts ? opts.strokeWidth : null;
      let radius = opts && 'radius' in opts ? opts.radius : null;
      let gradient = opts && 'gradient' in opts ? opts.gradient : null;
      return new glassmorphism._GradientPainter.new({strokeWidth: strokeWidth, radius: radius, gradient: gradient});
    }
    paint(canvas, size) {
      let t9, t9$;
      let innerRect2 = new ui.RRect.fromRectAndRadius(new ui.Rect.fromLTRB(this.strokeWidth, this.strokeWidth, size.width - this.strokeWidth, size.height - this.strokeWidth), new ui.Radius.circular(this.radius - this.strokeWidth));
      let outerRect = new ui.RRect.fromRectAndRadius(new ui.Rect.fromLTRB(0, 0, size.width, size.height), new ui.Radius.circular(this.radius));
      this.paintObject.shader = this.gradient.createShader(ui.Offset.zero['&'](size));
      let outerRectPath = (t9 = ui.Path.new(), (() => {
        t9.addRRect(outerRect);
        return t9;
      })());
      let innerRectPath2 = (t9$ = ui.Path.new(), (() => {
        t9$.addRRect(innerRect2);
        return t9$;
      })());
      canvas.drawPath(ui.Path.combine(ui.PathOperation.difference, outerRectPath, ui.Path.combine(ui.PathOperation.intersect, outerRectPath, innerRectPath2)), this.paintObject);
    }
    shouldRepaint(oldDelegate) {
      custom_paint.CustomPainter.as(oldDelegate);
      return true;
    }
  };
  (glassmorphism._GradientPainter.new = function(opts) {
    let strokeWidth = opts && 'strokeWidth' in opts ? opts.strokeWidth : null;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let gradient = opts && 'gradient' in opts ? opts.gradient : null;
    this.paintObject = ui.Paint.new();
    this.paintObject2 = ui.Paint.new();
    this.strokeWidth = strokeWidth;
    this.radius = radius;
    this.gradient = gradient;
    glassmorphism._GradientPainter.__proto__.new.call(this);
    ;
  }).prototype = glassmorphism._GradientPainter.prototype;
  dart.addTypeTests(glassmorphism._GradientPainter);
  dart.addTypeCaches(glassmorphism._GradientPainter);
  dart.setMethodSignature(glassmorphism._GradientPainter, () => ({
    __proto__: dart.getMethods(glassmorphism._GradientPainter.__proto__),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size]),
    shouldRepaint: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(glassmorphism._GradientPainter, I[25]);
  dart.setFieldSignature(glassmorphism._GradientPainter, () => ({
    __proto__: dart.getFields(glassmorphism._GradientPainter.__proto__),
    radius: dart.finalFieldType(core.double),
    strokeWidth: dart.finalFieldType(core.double),
    gradient: dart.finalFieldType(gradient.Gradient),
    paintObject: dart.finalFieldType(ui.Paint),
    paintObject2: dart.finalFieldType(ui.Paint)
  }));
  myfunctions_hlp.getFont = function getFont(fontSize, opts) {
    let t9;
    let color = opts && 'color' in opts ? opts.color : null;
    let isBold = opts && 'isBold' in opts ? opts.isBold : false;
    let fontName = opts && 'fontName' in opts ? opts.fontName : null;
    return new text_style.TextStyle.new({fontSize: fontSize, color: (t9 = color, t9 == null ? colors$0.kBlack : t9), fontWeight: isBold ? ui.FontWeight.bold : ui.FontWeight.normal, fontFamily: fontName});
  };
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant,
    "package:flutter_app/themes/light_mode.dart": light_mode,
    "package:provider/provider.dart": provider,
    "file:///zapp/project/lib/modules/glassmorphic/all_glassmorphics.dart": all_glassmorphics,
    "file:///zapp/project/lib/modules/quiz/pages/quiz_pg.dart": quiz_pg,
    "file:///zapp/project/lib/themes/theme_options.dart": theme_options,
    "package:provider/src/async_provider.dart": async_provider,
    "package:provider/src/change_notifier_provider.dart": change_notifier_provider,
    "package:provider/src/consumer.dart": consumer,
    "package:provider/src/listenable_provider.dart": listenable_provider,
    "package:provider/src/provider.dart": provider$,
    "package:provider/src/proxy_provider.dart": proxy_provider,
    "package:provider/src/reassemble_handler.dart": reassemble_handler,
    "package:provider/src/selector.dart": selector$,
    "package:provider/src/value_listenable_provider.dart": value_listenable_provider,
    "file:///zapp/project/lib/modules/glassmorphic/data/area_mdl.dart": area_mdl,
    "file:///zapp/project/lib/modules/glassmorphic/views/glassmorphic_pg.dart": glassmorphic_pg,
    "file:///zapp/project/lib/modules/glassmorphic/components/quiz_area_tile.dart": quiz_area_tile,
    "package:flutter_app/configs/all_configs.dart": all_configs,
    "package:nested/nested.dart": nested,
    "package:flutter_app/components/all_components.dart": all_components,
    "package:flutter_app/configs/colors.dart": colors$0,
    "package:flutter_app/configs/sizes.dart": sizes,
    "package:flutter_app/configs/styles.dart": styles,
    "package:flutter_app/configs/themes.dart": themes,
    "package:flutter_app/components/myappbar.dart": myappbar,
    "package:flutter_app/components/mybuttons.dart": mybuttons,
    "package:flutter_app/components/menu_tab.dart": menu_tab,
    "package:flutter_app/components/custom_glassmorphism.dart": custom_glassmorphism,
    "package:flutter_app/helpers/all_helpers.dart": all_helpers,
    "package:glassmorphism/glassmorphism.dart": glassmorphism,
    "package:flutter_app/helpers/myfunctions_hlp.dart": myfunctions_hlp
  }, {
    "package:provider/src/provider.dart": ["deferred_inherited_provider.dart", "devtool.dart", "inherited_provider.dart"]
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart","/zapp/project/lib/themes/light_mode.dart","/zapp/project/lib/modules/quiz/pages/quiz_pg.dart","/zapp/project/lib/themes/theme_options.dart","/zapp/pub/.pub_cache/hosted/pub.dev/nested-1.0.0/lib/nested.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/inherited_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/deferred_inherited_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/async_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/listenable_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/change_notifier_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/consumer.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/devtool.dart","/workspace/build/dart-sdk/packages/flutter/lib/src/widgets/framework.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/proxy_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/reassemble_handler.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/selector.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/value_listenable_provider.dart","/zapp/project/lib/modules/glassmorphic/data/area_mdl.dart","/zapp/project/lib/modules/glassmorphic/views/glassmorphic_pg.dart","/zapp/project/lib/modules/glassmorphic/components/quiz_area_tile.dart","/zapp/project/lib/configs/colors.dart","/zapp/project/lib/configs/sizes.dart","/zapp/project/lib/configs/themes.dart","/zapp/project/lib/components/myappbar.dart","/zapp/project/lib/components/mybuttons.dart","/zapp/project/lib/components/menu_tab.dart","/zapp/project/lib/components/custom_glassmorphism.dart","/zapp/pub/.pub_cache/hosted/pub.dev/glassmorphism-3.0.0/lib/glassmorphism.dart","/zapp/project/lib/helpers/myfunctions_hlp.dart"],"names":[],"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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant,
    themes__light_mode: light_mode,
    provider: provider,
    zapp__project__lib__modules__glassmorphic__all_glassmorphics: all_glassmorphics,
    zapp__project__lib__modules__quiz__pages__quiz_pg: quiz_pg,
    zapp__project__lib__themes__theme_options: theme_options,
    src__async_provider: async_provider,
    src__change_notifier_provider: change_notifier_provider,
    src__consumer: consumer,
    src__listenable_provider: listenable_provider,
    src__provider: provider$,
    src__proxy_provider: proxy_provider,
    src__reassemble_handler: reassemble_handler,
    src__selector: selector$,
    src__value_listenable_provider: value_listenable_provider,
    zapp__project__lib__modules__glassmorphic__data__area_mdl: area_mdl,
    zapp__project__lib__modules__glassmorphic__views__glassmorphic_pg: glassmorphic_pg,
    zapp__project__lib__modules__glassmorphic__components__quiz_area_tile: quiz_area_tile,
    configs__all_configs: all_configs,
    nested: nested,
    components__all_components: all_components,
    configs__colors: colors$0,
    configs__sizes: sizes,
    configs__styles: styles,
    configs__themes: themes,
    components__myappbar: myappbar,
    components__mybuttons: mybuttons,
    components__menu_tab: menu_tab,
    components__custom_glassmorphism: custom_glassmorphism,
    helpers__all_helpers: all_helpers,
    glassmorphism: glassmorphism,
    helpers__myfunctions_hlp: myfunctions_hlp
  };
}));

//# sourceMappingURL=main.js.map
