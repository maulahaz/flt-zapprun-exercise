// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const app = flutter_sdk.src__material__app;
  const framework = flutter_sdk.src__widgets__framework;
  const binding = flutter_sdk.src__widgets__binding;
  const theme_data = flutter_sdk.src__material__theme_data;
  const color_scheme = flutter_sdk.src__material__color_scheme;
  const colors = flutter_sdk.src__material__colors;
  const media_query = flutter_sdk.src__widgets__media_query;
  const scaffold = flutter_sdk.src__material__scaffold;
  const container = flutter_sdk.src__widgets__container;
  const box_decoration = flutter_sdk.src__painting__box_decoration;
  const decoration_image = flutter_sdk.src__painting__decoration_image;
  const box_fit = flutter_sdk.src__painting__box_fit;
  const image_resolution = flutter_sdk.src__painting__image_resolution;
  const basic = flutter_sdk.src__widgets__basic;
  const flex = flutter_sdk.src__rendering__flex;
  const circle_avatar = flutter_sdk.src__material__circle_avatar;
  const icon = flutter_sdk.src__widgets__icon;
  const icons = flutter_sdk.src__material__icons;
  const text = flutter_sdk.src__widgets__text;
  const alignment = flutter_sdk.src__painting__alignment;
  const text_style = flutter_sdk.src__painting__text_style;
  const elevated_button = flutter_sdk.src__material__elevated_button;
  const safe_area = flutter_sdk.src__widgets__safe_area;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const icon_button = flutter_sdk.src__material__icon_button;
  const text_span = flutter_sdk.src__painting__text_span;
  const inline_span = flutter_sdk.src__painting__inline_span;
  const colors$ = flutter_sdk.src__painting__colors;
  const floating_action_button_theme = flutter_sdk.src__material__floating_action_button_theme;
  const elevated_button_theme = flutter_sdk.src__material__elevated_button_theme;
  const button_style = flutter_sdk.src__material__button_style;
  const material_state = flutter_sdk.src__material__material_state;
  const borders = flutter_sdk.src__painting__borders;
  const rounded_rectangle_border = flutter_sdk.src__painting__rounded_rectangle_border;
  const border_radius = flutter_sdk.src__painting__border_radius;
  const input_decorator = flutter_sdk.src__material__input_decorator;
  const input_border = flutter_sdk.src__material__input_border;
  const switch_theme = flutter_sdk.src__material__switch_theme;
  const app_bar = flutter_sdk.src__material__app_bar;
  const theme = flutter_sdk.src__material__theme;
  const gesture_detector = flutter_sdk.src__widgets__gesture_detector;
  const tabs = flutter_sdk.src__material__tabs;
  const icon_data = flutter_sdk.src__widgets__icon_data;
  const gradient = flutter_sdk.src__painting__gradient;
  const box_border = flutter_sdk.src__painting__box_border;
  const diagnostics = flutter_sdk.src__foundation__diagnostics;
  const box = flutter_sdk.src__rendering__box;
  const vector_math_64 = flutter_sdk.vector_math_64;
  const key = flutter_sdk.src__foundation__key;
  const custom_paint = flutter_sdk.src__rendering__custom_paint;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var light_mode = Object.create(dart.library);
  var glassmorphic_pg = Object.create(dart.library);
  var quiz_pg = Object.create(dart.library);
  var theme_options = Object.create(dart.library);
  var all_components = Object.create(dart.library);
  var all_configs = Object.create(dart.library);
  var myappbar = Object.create(dart.library);
  var mybuttons = Object.create(dart.library);
  var menu_tab = Object.create(dart.library);
  var custom_glassmorphism = Object.create(dart.library);
  var colors$0 = Object.create(dart.library);
  var sizes = Object.create(dart.library);
  var styles = Object.create(dart.library);
  var themes = Object.create(dart.library);
  var glassmorphism = Object.create(dart.library);
  var $toString = dartx.toString;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfString()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    JSArrayOfInlineSpan: () => (T.JSArrayOfInlineSpan = dart.constFn(_interceptors.JSArray$(inline_span.InlineSpan)))(),
    JSArrayOfColor: () => (T.JSArrayOfColor = dart.constFn(_interceptors.JSArray$(ui.Color)))(),
    DiagnosticsPropertyOfAlignmentGeometry: () => (T.DiagnosticsPropertyOfAlignmentGeometry = dart.constFn(diagnostics.DiagnosticsProperty$(alignment.AlignmentGeometry)))(),
    DiagnosticsPropertyOfEdgeInsetsGeometry: () => (T.DiagnosticsPropertyOfEdgeInsetsGeometry = dart.constFn(diagnostics.DiagnosticsProperty$(edge_insets.EdgeInsetsGeometry)))(),
    DiagnosticsPropertyOfBoxConstraints: () => (T.DiagnosticsPropertyOfBoxConstraints = dart.constFn(diagnostics.DiagnosticsProperty$(box.BoxConstraints)))(),
    ObjectFlagPropertyOfMatrix4: () => (T.ObjectFlagPropertyOfMatrix4 = dart.constFn(diagnostics.ObjectFlagProperty$(vector_math_64.Matrix4)))(),
    doubleN: () => (T.doubleN = dart.constFn(dart.nullable(core.double)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T.VoidTovoid());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: glassmorphic_pg.GlassmorphicPage.prototype,
        [Widget_key]: null
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: quiz_pg.QuizPage.prototype,
        [Widget_key]: null
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: main.GlassmorphicApp.prototype,
        [Widget_key]: null
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 20,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 20
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294942336
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294929984
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294917376
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292684800
      });
    },
    get C6() {
      return C[6] = dart.constMap(core.int, ui.Color, [100, C[7] || CT.C7, 200, C[8] || CT.C8, 400, C[9] || CT.C9, 700, C[10] || CT.C10]);
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: colors.MaterialAccentColor.prototype,
        [Color_value]: 4294929984,
        [ColorSwatch__swatch]: C[6] || CT.C6
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294964192
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294959282
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294954112
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294948685
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294944550
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294940672
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294675456
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294278144
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293880832
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293284096
      });
    },
    get C12() {
      return C[12] = dart.constMap(core.int, ui.Color, [50, C[13] || CT.C13, 100, C[14] || CT.C14, 200, C[15] || CT.C15, 300, C[16] || CT.C16, 400, C[17] || CT.C17, 500, C[18] || CT.C18, 600, C[19] || CT.C19, 700, C[20] || CT.C20, 800, C[21] || CT.C21, 900, C[22] || CT.C22]);
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4294940672,
        [ColorSwatch__swatch]: C[12] || CT.C12
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 24
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 24,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 0
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293471792
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4285186649
      });
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293128957
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290502395
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4287679225
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4284790262
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4282557941
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280391411
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280191205
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279858898
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279592384
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279060385
      });
    },
    get C28() {
      return C[28] = dart.constMap(core.int, ui.Color, [50, C[29] || CT.C29, 100, C[30] || CT.C30, 200, C[31] || CT.C31, 300, C[32] || CT.C32, 400, C[33] || CT.C33, 500, C[34] || CT.C34, 600, C[35] || CT.C35, 700, C[36] || CT.C36, 800, C[37] || CT.C37, 900, C[38] || CT.C38]);
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4280391411,
        [ColorSwatch__swatch]: C[28] || CT.C28
      });
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294966759
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294965700
      });
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294964637
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294963574
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294962776
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294961979
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294826037
      });
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294688813
      });
    },
    get C49() {
      return C[49] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294551589
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294278935
      });
    },
    get C40() {
      return C[40] = dart.constMap(core.int, ui.Color, [50, C[41] || CT.C41, 100, C[42] || CT.C42, 200, C[43] || CT.C43, 300, C[44] || CT.C44, 400, C[45] || CT.C45, 500, C[46] || CT.C46, 600, C[47] || CT.C47, 700, C[48] || CT.C48, 800, C[49] || CT.C49, 900, C[50] || CT.C50]);
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4294961979,
        [ColorSwatch__swatch]: C[40] || CT.C40
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290888129
      });
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294967295
      });
    },
    get C53() {
      return C[53] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279242768
      });
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 0
      });
    },
    get C55() {
      return C[55] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4287337660
      });
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294962399
      });
    },
    get C59() {
      return C[59] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4282818734
      });
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278255563
      });
    },
    get C58() {
      return C[58] = dart.constList([C[59] || CT.C59, C[60] || CT.C60], ui.Color);
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: ui.TileMode.prototype,
        [_Enum__name]: "clamp",
        [_Enum_index]: 0
      });
    },
    get C62() {
      return C[62] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: 0,
        [Alignment_x]: 1
      });
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: 0,
        [Alignment_x]: -1
      });
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: gradient.LinearGradient.prototype,
        [Gradient_transform]: null,
        [Gradient_stops]: null,
        [Gradient_colors]: C[58] || CT.C58,
        [LinearGradient_tileMode]: C[61] || CT.C61,
        [LinearGradient_end]: C[62] || CT.C62,
        [LinearGradient_begin]: C[63] || CT.C63
      });
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: box_border.BoxShape.prototype,
        [_Enum__name]: "rectangle",
        [_Enum_index]: 0
      });
    }
  }, false);
  var C = Array(65).fill(void 0);
  var I = [
    "file:///zapp/project/lib/main.dart",
    "file:///zapp/project/lib/modules/glassmorphic/views/glassmorphic_pg.dart",
    "file:///zapp/project/lib/modules/quiz/pages/quiz_pg.dart",
    "package:flutter_app/components/mybuttons.dart",
    "package:flutter_app/components/menu_tab.dart",
    "package:flutter_app/components/custom_glassmorphism.dart",
    "package:flutter_app/configs/themes.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/glassmorphism-3.0.0/lib/glassmorphism.dart",
    "package:glassmorphism/glassmorphism.dart"
  ];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T.ListOfStringTodynamic().as(C[0] || CT.C0)(T.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T.dynamicToNull()));
      }
    }, T.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T.VoidToNull())});
    });
  };
  var Widget_key = dart.privateName(framework, "Widget.key");
  main.GlassmorphicApp = class GlassmorphicApp extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.GlassmorphicApp.new({key: key});
    }
    build(context) {
      return new app.MaterialApp.new({title: "Glassmorphic App", theme: theme_options.lightTheme, debugShowCheckedModeBanner: false, home: C[1] || CT.C1});
    }
  };
  (main.GlassmorphicApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.GlassmorphicApp.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.GlassmorphicApp.prototype;
  dart.addTypeTests(main.GlassmorphicApp);
  dart.addTypeCaches(main.GlassmorphicApp);
  dart.setMethodSignature(main.GlassmorphicApp, () => ({
    __proto__: dart.getMethods(main.GlassmorphicApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.GlassmorphicApp, I[0]);
  main.MyApp = class MyApp extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.MyApp.new({key: key});
    }
    build(context) {
      return new app.MaterialApp.new({title: "Flutter App!!", debugShowCheckedModeBanner: false, theme: light_mode.lightMode, home: C[2] || CT.C2});
    }
  };
  (main.MyApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.MyApp.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.MyApp.prototype;
  dart.addTypeTests(main.MyApp);
  dart.addTypeCaches(main.MyApp);
  dart.setMethodSignature(main.MyApp, () => ({
    __proto__: dart.getMethods(main.MyApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.MyApp, I[0]);
  main.main = function main$0() {
    binding.runApp(C[3] || CT.C3);
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  dart.defineLazy(light_mode, {
    /*light_mode.lightMode*/get lightMode() {
      return theme_data.ThemeData.new({colorScheme: new color_scheme.ColorScheme.light({background: colors.Colors.grey.shade300, primary: colors.Colors.grey.shade200, secondary: colors.Colors.white, inversePrimary: colors.Colors.grey.shade700})});
    },
    set lightMode(value) {}
  }, false);
  glassmorphic_pg.GlassmorphicPage = class GlassmorphicPage extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new glassmorphic_pg.GlassmorphicPage.new({key: key});
    }
    createState() {
      return new glassmorphic_pg._GlassmorphicPageState.new();
    }
  };
  (glassmorphic_pg.GlassmorphicPage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    glassmorphic_pg.GlassmorphicPage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = glassmorphic_pg.GlassmorphicPage.prototype;
  dart.addTypeTests(glassmorphic_pg.GlassmorphicPage);
  dart.addTypeCaches(glassmorphic_pg.GlassmorphicPage);
  dart.setMethodSignature(glassmorphic_pg.GlassmorphicPage, () => ({
    __proto__: dart.getMethods(glassmorphic_pg.GlassmorphicPage.__proto__),
    createState: dart.fnType(framework.State$(glassmorphic_pg.GlassmorphicPage), [])
  }));
  dart.setLibraryUri(glassmorphic_pg.GlassmorphicPage, I[1]);
  glassmorphic_pg._GlassmorphicPageState = class _GlassmorphicPageState extends framework.State$(glassmorphic_pg.GlassmorphicPage) {
    build(context) {
      let sz = media_query.MediaQuery.of(context).size;
      return new scaffold.Scaffold.new({body: new container.Container.new({decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.blue, image: new decoration_image.DecorationImage.new({fit: box_fit.BoxFit.cover, image: new image_resolution.AssetImage.new("lib/assets/images/calm.jpg")})}), child: new custom_glassmorphism.CustomGlassmorphism.new({width: sz.width, height: sz.height, borderRadius: 0, child: new basic.Column.new({children: T.JSArrayOfWidget().of([new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T.JSArrayOfWidget().of([new circle_avatar.CircleAvatar.new({backgroundColor: colors$0.kWhite, child: new icon.Icon.new(icons.Icons.people)}), new text.Text.new("O")])}), new container.Container.new({alignment: alignment.Alignment.center, child: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T.JSArrayOfWidget().of([new text.Text.new("Glassmorphic Page", {style: new text_style.TextStyle.new({fontFamily: "Poppins", fontSize: 18})}), new basic.SizedBox.new({height: 10}), new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                        }, T.VoidTovoid()), child: new text.Text.new("Proceed")})])})})])})})})});
    }
    static ['_#new#tearOff']() {
      return new glassmorphic_pg._GlassmorphicPageState.new();
    }
  };
  (glassmorphic_pg._GlassmorphicPageState.new = function() {
    glassmorphic_pg._GlassmorphicPageState.__proto__.new.call(this);
    ;
  }).prototype = glassmorphic_pg._GlassmorphicPageState.prototype;
  dart.addTypeTests(glassmorphic_pg._GlassmorphicPageState);
  dart.addTypeCaches(glassmorphic_pg._GlassmorphicPageState);
  dart.setMethodSignature(glassmorphic_pg._GlassmorphicPageState, () => ({
    __proto__: dart.getMethods(glassmorphic_pg._GlassmorphicPageState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(glassmorphic_pg._GlassmorphicPageState, I[1]);
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  quiz_pg.QuizPage = class QuizPage extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new quiz_pg.QuizPage.new({key: key});
    }
    build(context) {
      return new scaffold.Scaffold.new({body: new safe_area.SafeArea.new({child: new basic.Padding.new({padding: C[4] || CT.C4, child: new basic.Column.new({children: T.JSArrayOfWidget().of([new basic.Align.new({alignment: alignment.Alignment.centerRight, child: new icon_button.IconButton.new({onPressed: dart.fn(() => {
                    }, T.VoidTovoid()), icon: new icon.Icon.new(icons.Icons.sort)})}), new text.Text.rich(new text_span.TextSpan.new({text: "Question 1", style: new text_style.TextStyle.new({color: colors$0.kAppSecondary}), children: T.JSArrayOfInlineSpan().of([new text_span.TextSpan.new({text: "/10", style: new text_style.TextStyle.new({color: colors$0.kAppSecondary, fontSize: 10})})])}))])})})})});
    }
  };
  (quiz_pg.QuizPage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    quiz_pg.QuizPage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = quiz_pg.QuizPage.prototype;
  dart.addTypeTests(quiz_pg.QuizPage);
  dart.addTypeCaches(quiz_pg.QuizPage);
  dart.setMethodSignature(quiz_pg.QuizPage, () => ({
    __proto__: dart.getMethods(quiz_pg.QuizPage.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(quiz_pg.QuizPage, I[2]);
  var Color_value = dart.privateName(ui, "Color.value");
  var ColorSwatch__swatch = dart.privateName(colors$, "ColorSwatch._swatch");
  dart.defineLazy(theme_options, {
    /*theme_options.COLOR_PRIMARY*/get COLOR_PRIMARY() {
      return C[5] || CT.C5;
    },
    /*theme_options.COLOR_ACCENT*/get COLOR_ACCENT() {
      return C[11] || CT.C11;
    },
    /*theme_options.lightTheme*/get lightTheme() {
      return theme_data.ThemeData.new({brightness: ui.Brightness.light, primaryColor: theme_options.COLOR_PRIMARY, floatingActionButtonTheme: new floating_action_button_theme.FloatingActionButtonThemeData.new({backgroundColor: theme_options.COLOR_ACCENT}), elevatedButtonTheme: new elevated_button_theme.ElevatedButtonThemeData.new({style: new button_style.ButtonStyle.new({padding: material_state.MaterialStateProperty.all(edge_insets.EdgeInsetsGeometry, new edge_insets.EdgeInsets.symmetric({horizontal: 40, vertical: 20})), shape: material_state.MaterialStateProperty.all(borders.OutlinedBorder, new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(20)})), backgroundColor: material_state.MaterialStateProperty.all(ui.Color, theme_options.COLOR_ACCENT)})}), inputDecorationTheme: new input_decorator.InputDecorationTheme.new({border: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(20), borderSide: borders.BorderSide.none}), filled: true, fillColor: colors.Colors.grey.withOpacity(0.1)})});
    },
    set lightTheme(value) {},
    /*theme_options.darkTheme*/get darkTheme() {
      return theme_data.ThemeData.new({brightness: ui.Brightness.dark, switchTheme: new switch_theme.SwitchThemeData.new({trackColor: material_state.MaterialStateProperty.all(ui.Color, colors.Colors.grey), thumbColor: material_state.MaterialStateProperty.all(ui.Color, colors.Colors.white)}), inputDecorationTheme: new input_decorator.InputDecorationTheme.new({border: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(20), borderSide: borders.BorderSide.none}), filled: true, fillColor: colors.Colors.grey.withOpacity(0.1)}), elevatedButtonTheme: new elevated_button_theme.ElevatedButtonThemeData.new({style: new button_style.ButtonStyle.new({padding: material_state.MaterialStateProperty.all(edge_insets.EdgeInsetsGeometry, new edge_insets.EdgeInsets.symmetric({horizontal: 40, vertical: 20})), shape: material_state.MaterialStateProperty.all(borders.OutlinedBorder, new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(20)})), backgroundColor: material_state.MaterialStateProperty.all(ui.Color, colors.Colors.white), foregroundColor: material_state.MaterialStateProperty.all(ui.Color, colors.Colors.black), overlayColor: material_state.MaterialStateProperty.all(ui.Color, colors.Colors.black26)})})});
    },
    set darkTheme(value) {}
  }, false);
  myappbar.MyAppBar = function MyAppBar() {
    return new app_bar.AppBar.new({backgroundColor: colors.Colors.transparent, elevation: 0, leading: new basic.Padding.new({padding: C[23] || CT.C23, child: new icon_button.IconButton.new({onPressed: dart.fn(() => {
          }, T.VoidTovoid()), icon: new icon.Icon.new(icons.Icons.menu, {color: colors.Colors.grey._get(800)})})}), actions: T.JSArrayOfWidget().of([new basic.Padding.new({padding: C[24] || CT.C24, child: new icon_button.IconButton.new({onPressed: dart.fn(() => {
            }, T.VoidTovoid()), icon: new icon.Icon.new(icons.Icons.person, {color: colors.Colors.grey._get(800)})})})])});
  };
  var onTap$ = dart.privateName(mybuttons, "MyButtons.onTap");
  var child$ = dart.privateName(mybuttons, "MyButtons.child");
  mybuttons.MyButtons = class MyButtons extends framework.StatelessWidget {
    get onTap() {
      return this[onTap$];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get child() {
      return this[child$];
    }
    set child(value) {
      super.child = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let onTap = opts && 'onTap' in opts ? opts.onTap : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new mybuttons.MyButtons.new({key: key, onTap: onTap, child: child});
    }
    build(context) {
      let tm = theme.Theme.of(context).colorScheme;
      return new gesture_detector.GestureDetector.new({onTap: this.onTap, child: new container.Container.new({padding: new edge_insets.EdgeInsets.all(25), decoration: new box_decoration.BoxDecoration.new({color: tm.primary, borderRadius: new border_radius.BorderRadius.circular(20)}), child: this.child})});
    }
  };
  (mybuttons.MyButtons.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let child = opts && 'child' in opts ? opts.child : null;
    this[onTap$] = onTap;
    this[child$] = child;
    mybuttons.MyButtons.__proto__.new.call(this, {key: key});
    ;
  }).prototype = mybuttons.MyButtons.prototype;
  dart.addTypeTests(mybuttons.MyButtons);
  dart.addTypeCaches(mybuttons.MyButtons);
  dart.setMethodSignature(mybuttons.MyButtons, () => ({
    __proto__: dart.getMethods(mybuttons.MyButtons.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(mybuttons.MyButtons, I[3]);
  dart.setFieldSignature(mybuttons.MyButtons, () => ({
    __proto__: dart.getFields(mybuttons.MyButtons.__proto__),
    onTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    child: dart.finalFieldType(framework.Widget)
  }));
  var iconPath$ = dart.privateName(menu_tab, "MenuTab.iconPath");
  menu_tab.MenuTab = class MenuTab extends framework.StatelessWidget {
    get iconPath() {
      return this[iconPath$];
    }
    set iconPath(value) {
      super.iconPath = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let iconPath = opts && 'iconPath' in opts ? opts.iconPath : null;
      return new menu_tab.MenuTab.new({key: key, iconPath: iconPath});
    }
    build(context) {
      return new tabs.Tab.new({height: 80, child: new container.Container.new({padding: new edge_insets.EdgeInsets.all(8), decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.grey._get(200), borderRadius: new border_radius.BorderRadius.circular(8)}), child: new icon.Icon.new(this.iconPath, {color: colors.Colors.grey._get(800)})})});
    }
  };
  (menu_tab.MenuTab.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let iconPath = opts && 'iconPath' in opts ? opts.iconPath : null;
    this[iconPath$] = iconPath;
    menu_tab.MenuTab.__proto__.new.call(this, {key: key});
    ;
  }).prototype = menu_tab.MenuTab.prototype;
  dart.addTypeTests(menu_tab.MenuTab);
  dart.addTypeCaches(menu_tab.MenuTab);
  dart.setMethodSignature(menu_tab.MenuTab, () => ({
    __proto__: dart.getMethods(menu_tab.MenuTab.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(menu_tab.MenuTab, I[4]);
  dart.setFieldSignature(menu_tab.MenuTab, () => ({
    __proto__: dart.getFields(menu_tab.MenuTab.__proto__),
    iconPath: dart.finalFieldType(icon_data.IconData)
  }));
  var width$ = dart.privateName(custom_glassmorphism, "CustomGlassmorphism.width");
  var height$ = dart.privateName(custom_glassmorphism, "CustomGlassmorphism.height");
  var borderRadius$ = dart.privateName(custom_glassmorphism, "CustomGlassmorphism.borderRadius");
  var child$0 = dart.privateName(custom_glassmorphism, "CustomGlassmorphism.child");
  custom_glassmorphism.CustomGlassmorphism = class CustomGlassmorphism extends framework.StatelessWidget {
    get width() {
      return this[width$];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[height$];
    }
    set height(value) {
      super.height = value;
    }
    get borderRadius() {
      return this[borderRadius$];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    get child() {
      return this[child$0];
    }
    set child(value) {
      super.child = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let width = opts && 'width' in opts ? opts.width : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : 20;
      let child = opts && 'child' in opts ? opts.child : null;
      return new custom_glassmorphism.CustomGlassmorphism.new({key: key, width: width, height: height, borderRadius: borderRadius, child: child});
    }
    build(context) {
      return new glassmorphism.GlassmorphicContainer.new({width: this.width, height: this.height, borderRadius: this.borderRadius, blur: 20, border: 2, linearGradient: new gradient.LinearGradient.new({colors: T.JSArrayOfColor().of([new ui.Color.new(16777215).withOpacity(0.1), new ui.Color.new(16777215).withOpacity(0.05)])}), borderGradient: new gradient.LinearGradient.new({colors: T.JSArrayOfColor().of([new ui.Color.new(16777215).withOpacity(0.5), new ui.Color.new(16777215).withOpacity(0.5)])}), child: this.child});
    }
  };
  (custom_glassmorphism.CustomGlassmorphism.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : 20;
    let child = opts && 'child' in opts ? opts.child : null;
    this[width$] = width;
    this[height$] = height;
    this[borderRadius$] = borderRadius;
    this[child$0] = child;
    custom_glassmorphism.CustomGlassmorphism.__proto__.new.call(this, {key: key});
    ;
  }).prototype = custom_glassmorphism.CustomGlassmorphism.prototype;
  dart.addTypeTests(custom_glassmorphism.CustomGlassmorphism);
  dart.addTypeCaches(custom_glassmorphism.CustomGlassmorphism);
  dart.setMethodSignature(custom_glassmorphism.CustomGlassmorphism, () => ({
    __proto__: dart.getMethods(custom_glassmorphism.CustomGlassmorphism.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(custom_glassmorphism.CustomGlassmorphism, I[5]);
  dart.setFieldSignature(custom_glassmorphism.CustomGlassmorphism, () => ({
    __proto__: dart.getFields(custom_glassmorphism.CustomGlassmorphism.__proto__),
    width: dart.finalFieldType(core.double),
    height: dart.finalFieldType(core.double),
    borderRadius: dart.finalFieldType(core.double),
    child: dart.finalFieldType(framework.Widget)
  }));
  var Gradient_transform = dart.privateName(gradient, "Gradient.transform");
  var Gradient_stops = dart.privateName(gradient, "Gradient.stops");
  var Gradient_colors = dart.privateName(gradient, "Gradient.colors");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  var LinearGradient_tileMode = dart.privateName(gradient, "LinearGradient.tileMode");
  var Alignment_y = dart.privateName(alignment, "Alignment.y");
  var Alignment_x = dart.privateName(alignment, "Alignment.x");
  var LinearGradient_end = dart.privateName(gradient, "LinearGradient.end");
  var LinearGradient_begin = dart.privateName(gradient, "LinearGradient.begin");
  dart.defineLazy(colors$0, {
    /*colors$0.kRed*/get kRed() {
      return C[25] || CT.C25;
    },
    /*colors$0.kGreen*/get kGreen() {
      return C[26] || CT.C26;
    },
    /*colors$0.kBlue*/get kBlue() {
      return C[27] || CT.C27;
    },
    /*colors$0.kYellow*/get kYellow() {
      return C[39] || CT.C39;
    },
    /*colors$0.kGrey*/get kGrey() {
      return C[51] || CT.C51;
    },
    /*colors$0.kWhite*/get kWhite() {
      return C[52] || CT.C52;
    },
    /*colors$0.kBlack*/get kBlack() {
      return C[53] || CT.C53;
    },
    /*colors$0.kTransparent*/get kTransparent() {
      return C[54] || CT.C54;
    },
    /*colors$0.kAppPrimary*/get kAppPrimary() {
      return colors.Colors.deepOrange._get(400);
    },
    /*colors$0.kAppSecondary*/get kAppSecondary() {
      return C[55] || CT.C55;
    },
    /*colors$0.kAppPrimaryLight*/get kAppPrimaryLight() {
      return C[56] || CT.C56;
    },
    /*colors$0.kPrimaryGradient*/get kPrimaryGradient() {
      return C[57] || CT.C57;
    }
  }, false);
  dart.defineLazy(sizes, {
    /*sizes.kDefaultPadding*/get kDefaultPadding() {
      return 20;
    },
    /*sizes.kMobileWidth*/get kMobileWidth() {
      return 600;
    },
    /*sizes.kTabletWidth*/get kTabletWidth() {
      return 1200;
    },
    /*sizes.kTabletBreakpointWidth*/get kTabletBreakpointWidth() {
      return 768;
    },
    /*sizes.kDesktopBreakpointWidth*/get kDesktopBreakpointWidth() {
      return 1440;
    },
    /*sizes.kSideMenuWidth*/get kSideMenuWidth() {
      return 300;
    },
    /*sizes.kNavigationRailWidth*/get kNavigationRailWidth() {
      return 72;
    }
  }, false);
  themes.Themes = class Themes extends core.Object {
    static ['_#new#tearOff']() {
      return new themes.Themes.new();
    }
  };
  (themes.Themes.new = function() {
    ;
  }).prototype = themes.Themes.prototype;
  dart.addTypeTests(themes.Themes);
  dart.addTypeCaches(themes.Themes);
  dart.setLibraryUri(themes.Themes, I[6]);
  dart.setStaticFieldSignature(themes.Themes, () => ['lightMode', 'darkMode']);
  dart.defineLazy(themes.Themes, {
    /*themes.Themes.lightMode*/get lightMode() {
      return theme_data.ThemeData.new({primaryColor: colors$0.kAppPrimary, brightness: ui.Brightness.light, fontFamily: "Poppins", inputDecorationTheme: new input_decorator.InputDecorationTheme.new({border: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(20), borderSide: borders.BorderSide.none}), filled: true, fillColor: colors.Colors.grey.withOpacity(0.1)})});
    },
    /*themes.Themes.darkMode*/get darkMode() {
      return theme_data.ThemeData.new({primaryColor: colors.Colors.blue, brightness: ui.Brightness.dark, fontFamily: "Poppins", inputDecorationTheme: new input_decorator.InputDecorationTheme.new({border: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(20), borderSide: borders.BorderSide.none}), filled: true, fillColor: colors.Colors.grey.withOpacity(0.1)})});
    }
  }, false);
  var key$ = dart.privateName(glassmorphism, "GlassmorphicFlexContainer.key");
  var alignment$ = dart.privateName(glassmorphism, "GlassmorphicFlexContainer.alignment");
  var padding$ = dart.privateName(glassmorphism, "GlassmorphicFlexContainer.padding");
  var flex$ = dart.privateName(glassmorphism, "GlassmorphicFlexContainer.flex");
  var margin$ = dart.privateName(glassmorphism, "GlassmorphicFlexContainer.margin");
  var transform$ = dart.privateName(glassmorphism, "GlassmorphicFlexContainer.transform");
  var child$1 = dart.privateName(glassmorphism, "GlassmorphicFlexContainer.child");
  var borderRadius$0 = dart.privateName(glassmorphism, "GlassmorphicFlexContainer.borderRadius");
  var shape$ = dart.privateName(glassmorphism, "GlassmorphicFlexContainer.shape");
  var constraints$ = dart.privateName(glassmorphism, "GlassmorphicFlexContainer.constraints");
  var border$ = dart.privateName(glassmorphism, "GlassmorphicFlexContainer.border");
  var blur$ = dart.privateName(glassmorphism, "GlassmorphicFlexContainer.blur");
  var linearGradient$ = dart.privateName(glassmorphism, "GlassmorphicFlexContainer.linearGradient");
  var borderGradient$ = dart.privateName(glassmorphism, "GlassmorphicFlexContainer.borderGradient");
  glassmorphism.GlassmorphicFlexContainer = class GlassmorphicFlexContainer extends framework.StatelessWidget {
    get key() {
      return this[key$];
    }
    set key(value) {
      super.key = value;
    }
    get alignment() {
      return this[alignment$];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get padding() {
      return this[padding$];
    }
    set padding(value) {
      super.padding = value;
    }
    get flex() {
      return this[flex$];
    }
    set flex(value) {
      super.flex = value;
    }
    get margin() {
      return this[margin$];
    }
    set margin(value) {
      super.margin = value;
    }
    get transform() {
      return this[transform$];
    }
    set transform(value) {
      super.transform = value;
    }
    get child() {
      return this[child$1];
    }
    set child(value) {
      super.child = value;
    }
    get borderRadius() {
      return this[borderRadius$0];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    get shape() {
      return this[shape$];
    }
    set shape(value) {
      super.shape = value;
    }
    get constraints() {
      return this[constraints$];
    }
    set constraints(value) {
      super.constraints = value;
    }
    get border() {
      return this[border$];
    }
    set border(value) {
      super.border = value;
    }
    get blur() {
      return this[blur$];
    }
    set blur(value) {
      super.blur = value;
    }
    get linearGradient() {
      return this[linearGradient$];
    }
    set linearGradient(value) {
      super.linearGradient = value;
    }
    get borderGradient() {
      return this[borderGradient$];
    }
    set borderGradient(value) {
      super.borderGradient = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let alignment = opts && 'alignment' in opts ? opts.alignment : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let shape = opts && 'shape' in opts ? opts.shape : C[64] || CT.C64;
      let margin = opts && 'margin' in opts ? opts.margin : null;
      let transform = opts && 'transform' in opts ? opts.transform : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let linearGradient = opts && 'linearGradient' in opts ? opts.linearGradient : null;
      let border = opts && 'border' in opts ? opts.border : null;
      let blur = opts && 'blur' in opts ? opts.blur : null;
      let borderGradient = opts && 'borderGradient' in opts ? opts.borderGradient : null;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      let flex = opts && 'flex' in opts ? opts.flex : 1;
      return new glassmorphism.GlassmorphicFlexContainer.new({key: key, child: child, alignment: alignment, padding: padding, shape: shape, margin: margin, transform: transform, borderRadius: borderRadius, linearGradient: linearGradient, border: border, blur: blur, borderGradient: borderGradient, constraints: constraints, flex: flex});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (T.DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment, {showName: false, defaultValue: null}));
      properties.add(new (T.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (T.DiagnosticsPropertyOfBoxConstraints()).new("constraints", this.constraints, {defaultValue: null}));
      properties.add(new (T.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("margin", this.margin, {defaultValue: null}));
      properties.add(new (T.ObjectFlagPropertyOfMatrix4()).has("transform", this.transform));
    }
    build(context) {
      let t0;
      return new basic.Expanded.new({flex: dart.nullCheck(this.flex), child: new container.Container.new({key: this.key, alignment: this.alignment, padding: this.padding, constraints: new box.BoxConstraints.tightForFinite(), transform: this.transform, child: new basic.Stack.new({children: T.JSArrayOfWidget().of([new basic.ClipRRect.new({clipBehavior: ui.Clip.hardEdge, borderRadius: new border_radius.BorderRadius.circular(this.borderRadius), child: new basic.BackdropFilter.new({filter: ui.ImageFilter.blur({sigmaX: this.blur, sigmaY: this.blur * 2}), child: new container.Container.new({alignment: (t0 = this.alignment, t0 == null ? alignment.Alignment.topLeft : t0), decoration: new box_decoration.BoxDecoration.new({borderRadius: new border_radius.BorderRadius.circular(this.borderRadius), gradient: this.linearGradient})})})}), new glassmorphism.GlassmorphicBorder.new({strokeWidth: this.border, radius: this.borderRadius, gradient: this.borderGradient}), new basic.ClipRRect.new({clipBehavior: ui.Clip.hardEdge, borderRadius: new border_radius.BorderRadius.circular(this.borderRadius), child: new container.Container.new({child: this.child})})])})})});
    }
  };
  (glassmorphism.GlassmorphicFlexContainer.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let shape = opts && 'shape' in opts ? opts.shape : C[64] || CT.C64;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let transform = opts && 'transform' in opts ? opts.transform : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let linearGradient = opts && 'linearGradient' in opts ? opts.linearGradient : null;
    let border = opts && 'border' in opts ? opts.border : null;
    let blur = opts && 'blur' in opts ? opts.blur : null;
    let borderGradient = opts && 'borderGradient' in opts ? opts.borderGradient : null;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    let flex = opts && 'flex' in opts ? opts.flex : 1;
    this[key$] = key;
    this[child$1] = child;
    this[alignment$] = alignment;
    this[padding$] = padding;
    this[shape$] = shape;
    this[margin$] = margin;
    this[transform$] = transform;
    this[borderRadius$0] = borderRadius;
    this[linearGradient$] = linearGradient;
    this[border$] = border;
    this[blur$] = blur;
    this[borderGradient$] = borderGradient;
    this[constraints$] = constraints;
    this[flex$] = flex;
    if (!(margin == null || margin.isNonNegative)) dart.assertFailed(null, I[7], 127, 16, "margin == null || margin.isNonNegative");
    if (!(padding == null || padding.isNonNegative)) dart.assertFailed(null, I[7], 128, 16, "padding == null || padding.isNonNegative");
    if (!(dart.nullCheck(flex) >= 1)) dart.assertFailed("Flex value can be less than 1 : " + dart.str(flex) + ". Please Provide a flex value > 1", I[7], 130, 11, "flex! >= 1");
    if (!(constraints == null || constraints.debugAssertIsValid())) dart.assertFailed(null, I[7], 133, 16, "constraints == null || constraints.debugAssertIsValid()");
    glassmorphism.GlassmorphicFlexContainer.__proto__.new.call(this, {key: key});
    ;
  }).prototype = glassmorphism.GlassmorphicFlexContainer.prototype;
  dart.addTypeTests(glassmorphism.GlassmorphicFlexContainer);
  dart.addTypeCaches(glassmorphism.GlassmorphicFlexContainer);
  dart.setMethodSignature(glassmorphism.GlassmorphicFlexContainer, () => ({
    __proto__: dart.getMethods(glassmorphism.GlassmorphicFlexContainer.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(glassmorphism.GlassmorphicFlexContainer, I[8]);
  dart.setFieldSignature(glassmorphism.GlassmorphicFlexContainer, () => ({
    __proto__: dart.getFields(glassmorphism.GlassmorphicFlexContainer.__proto__),
    key: dart.finalFieldType(dart.nullable(key.Key)),
    alignment: dart.finalFieldType(dart.nullable(alignment.AlignmentGeometry)),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    flex: dart.finalFieldType(dart.nullable(core.int)),
    margin: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    transform: dart.finalFieldType(dart.nullable(vector_math_64.Matrix4)),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    borderRadius: dart.finalFieldType(core.double),
    shape: dart.finalFieldType(box_border.BoxShape),
    constraints: dart.finalFieldType(dart.nullable(box.BoxConstraints)),
    border: dart.finalFieldType(core.double),
    blur: dart.finalFieldType(core.double),
    linearGradient: dart.finalFieldType(gradient.LinearGradient),
    borderGradient: dart.finalFieldType(gradient.LinearGradient)
  }));
  var key$0 = dart.privateName(glassmorphism, "GlassmorphicContainer.key");
  var alignment$0 = dart.privateName(glassmorphism, "GlassmorphicContainer.alignment");
  var padding$0 = dart.privateName(glassmorphism, "GlassmorphicContainer.padding");
  var width$0 = dart.privateName(glassmorphism, "GlassmorphicContainer.width");
  var height$0 = dart.privateName(glassmorphism, "GlassmorphicContainer.height");
  var margin$0 = dart.privateName(glassmorphism, "GlassmorphicContainer.margin");
  var transform$0 = dart.privateName(glassmorphism, "GlassmorphicContainer.transform");
  var child$2 = dart.privateName(glassmorphism, "GlassmorphicContainer.child");
  var borderRadius$1 = dart.privateName(glassmorphism, "GlassmorphicContainer.borderRadius");
  var shape$0 = dart.privateName(glassmorphism, "GlassmorphicContainer.shape");
  var constraints$0 = dart.privateName(glassmorphism, "GlassmorphicContainer.constraints");
  var border$0 = dart.privateName(glassmorphism, "GlassmorphicContainer.border");
  var blur$0 = dart.privateName(glassmorphism, "GlassmorphicContainer.blur");
  var linearGradient$0 = dart.privateName(glassmorphism, "GlassmorphicContainer.linearGradient");
  var borderGradient$0 = dart.privateName(glassmorphism, "GlassmorphicContainer.borderGradient");
  glassmorphism.GlassmorphicContainer = class GlassmorphicContainer extends framework.StatelessWidget {
    get key() {
      return this[key$0];
    }
    set key(value) {
      super.key = value;
    }
    get alignment() {
      return this[alignment$0];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get padding() {
      return this[padding$0];
    }
    set padding(value) {
      super.padding = value;
    }
    get width() {
      return this[width$0];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[height$0];
    }
    set height(value) {
      super.height = value;
    }
    get margin() {
      return this[margin$0];
    }
    set margin(value) {
      super.margin = value;
    }
    get transform() {
      return this[transform$0];
    }
    set transform(value) {
      super.transform = value;
    }
    get child() {
      return this[child$2];
    }
    set child(value) {
      super.child = value;
    }
    get borderRadius() {
      return this[borderRadius$1];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    get shape() {
      return this[shape$0];
    }
    set shape(value) {
      super.shape = value;
    }
    get constraints() {
      return this[constraints$0];
    }
    set constraints(value) {
      super.constraints = value;
    }
    get border() {
      return this[border$0];
    }
    set border(value) {
      super.border = value;
    }
    get blur() {
      return this[blur$0];
    }
    set blur(value) {
      super.blur = value;
    }
    get linearGradient() {
      return this[linearGradient$0];
    }
    set linearGradient(value) {
      super.linearGradient = value;
    }
    get borderGradient() {
      return this[borderGradient$0];
    }
    set borderGradient(value) {
      super.borderGradient = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let alignment = opts && 'alignment' in opts ? opts.alignment : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let shape = opts && 'shape' in opts ? opts.shape : C[64] || CT.C64;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      let margin = opts && 'margin' in opts ? opts.margin : null;
      let transform = opts && 'transform' in opts ? opts.transform : null;
      let width = opts && 'width' in opts ? opts.width : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let linearGradient = opts && 'linearGradient' in opts ? opts.linearGradient : null;
      let border = opts && 'border' in opts ? opts.border : null;
      let blur = opts && 'blur' in opts ? opts.blur : null;
      let borderGradient = opts && 'borderGradient' in opts ? opts.borderGradient : null;
      return new glassmorphism.GlassmorphicContainer.new({key: key, child: child, alignment: alignment, padding: padding, shape: shape, constraints: constraints, margin: margin, transform: transform, width: width, height: height, borderRadius: borderRadius, linearGradient: linearGradient, border: border, blur: blur, borderGradient: borderGradient});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (T.DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment, {showName: false, defaultValue: null}));
      properties.add(new (T.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (T.DiagnosticsPropertyOfBoxConstraints()).new("constraints", this.constraints, {defaultValue: null}));
      properties.add(new (T.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("margin", this.margin, {defaultValue: null}));
      properties.add(new (T.ObjectFlagPropertyOfMatrix4()).has("transform", this.transform));
    }
    build(context) {
      let t0, t0$;
      return new container.Container.new({key: this.key, width: this.width, margin: this.margin, alignment: this.alignment, constraints: this.constraints, height: this.height, transform: this.transform, child: new basic.Stack.new({alignment: (t0 = this.alignment, t0 == null ? alignment.Alignment.topLeft : t0), children: T.JSArrayOfWidget().of([new basic.ClipRRect.new({clipBehavior: ui.Clip.hardEdge, borderRadius: new border_radius.BorderRadius.circular(this.borderRadius), child: new basic.BackdropFilter.new({filter: ui.ImageFilter.blur({sigmaX: this.blur, sigmaY: this.blur * 2}), child: new container.Container.new({alignment: (t0$ = this.alignment, t0$ == null ? alignment.Alignment.topLeft : t0$), decoration: new box_decoration.BoxDecoration.new({borderRadius: new border_radius.BorderRadius.circular(this.borderRadius), gradient: this.linearGradient})})})}), new glassmorphism.GlassmorphicBorder.new({strokeWidth: this.border, radius: this.borderRadius, width: this.width, height: this.height, gradient: this.borderGradient}), new basic.ClipRRect.new({clipBehavior: ui.Clip.hardEdge, borderRadius: new border_radius.BorderRadius.circular(this.borderRadius), child: new container.Container.new({child: this.child, alignment: this.alignment})})])})});
    }
  };
  (glassmorphism.GlassmorphicContainer.new = function(opts) {
    let t0, t0$;
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let shape = opts && 'shape' in opts ? opts.shape : C[64] || CT.C64;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let transform = opts && 'transform' in opts ? opts.transform : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let linearGradient = opts && 'linearGradient' in opts ? opts.linearGradient : null;
    let border = opts && 'border' in opts ? opts.border : null;
    let blur = opts && 'blur' in opts ? opts.blur : null;
    let borderGradient = opts && 'borderGradient' in opts ? opts.borderGradient : null;
    this[key$0] = key;
    this[child$2] = child;
    this[alignment$0] = alignment;
    this[padding$0] = padding;
    this[shape$0] = shape;
    this[margin$0] = margin;
    this[transform$0] = transform;
    this[width$0] = width;
    this[height$0] = height;
    this[borderRadius$1] = borderRadius;
    this[linearGradient$0] = linearGradient;
    this[border$0] = border;
    this[blur$0] = blur;
    this[borderGradient$0] = borderGradient;
    if (!(margin == null || margin.isNonNegative)) dart.assertFailed(null, I[7], 312, 16, "margin == null || margin.isNonNegative");
    if (!(padding == null || padding.isNonNegative)) dart.assertFailed(null, I[7], 313, 16, "padding == null || padding.isNonNegative");
    if (!(constraints == null || constraints.debugAssertIsValid())) dart.assertFailed(null, I[7], 314, 16, "constraints == null || constraints.debugAssertIsValid()");
    this[constraints$0] = (t0$ = (t0 = constraints, t0 == null ? null : t0.tighten({width: width, height: height})), t0$ == null ? new box.BoxConstraints.tightFor({width: width, height: height}) : t0$);
    glassmorphism.GlassmorphicContainer.__proto__.new.call(this, {key: key});
    ;
  }).prototype = glassmorphism.GlassmorphicContainer.prototype;
  dart.addTypeTests(glassmorphism.GlassmorphicContainer);
  dart.addTypeCaches(glassmorphism.GlassmorphicContainer);
  dart.setMethodSignature(glassmorphism.GlassmorphicContainer, () => ({
    __proto__: dart.getMethods(glassmorphism.GlassmorphicContainer.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(glassmorphism.GlassmorphicContainer, I[8]);
  dart.setFieldSignature(glassmorphism.GlassmorphicContainer, () => ({
    __proto__: dart.getFields(glassmorphism.GlassmorphicContainer.__proto__),
    key: dart.finalFieldType(dart.nullable(key.Key)),
    alignment: dart.finalFieldType(dart.nullable(alignment.AlignmentGeometry)),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    width: dart.finalFieldType(core.double),
    height: dart.finalFieldType(core.double),
    margin: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    transform: dart.finalFieldType(dart.nullable(vector_math_64.Matrix4)),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    borderRadius: dart.finalFieldType(core.double),
    shape: dart.finalFieldType(box_border.BoxShape),
    constraints: dart.finalFieldType(dart.nullable(box.BoxConstraints)),
    border: dart.finalFieldType(core.double),
    blur: dart.finalFieldType(core.double),
    linearGradient: dart.finalFieldType(gradient.LinearGradient),
    borderGradient: dart.finalFieldType(gradient.LinearGradient)
  }));
  var width$1 = dart.privateName(glassmorphism, "GlassmorphicBorder.width");
  var height$1 = dart.privateName(glassmorphism, "GlassmorphicBorder.height");
  var _painter = dart.privateName(glassmorphism, "_painter");
  var _radius = dart.privateName(glassmorphism, "_radius");
  glassmorphism.GlassmorphicBorder = class GlassmorphicBorder extends framework.StatelessWidget {
    get width() {
      return this[width$1];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[height$1];
    }
    set height(value) {
      super.height = value;
    }
    static ['_#new#tearOff'](opts) {
      let strokeWidth = opts && 'strokeWidth' in opts ? opts.strokeWidth : null;
      let radius = opts && 'radius' in opts ? opts.radius : null;
      let gradient = opts && 'gradient' in opts ? opts.gradient : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let width = opts && 'width' in opts ? opts.width : null;
      return new glassmorphism.GlassmorphicBorder.new({strokeWidth: strokeWidth, radius: radius, gradient: gradient, height: height, width: width});
    }
    build(context) {
      return new basic.CustomPaint.new({painter: this[_painter], size: media_query.MediaQuery.of(context).size, child: new container.Container.new({decoration: new box_decoration.BoxDecoration.new({borderRadius: new border_radius.BorderRadius.all(new ui.Radius.circular(this[_radius]))}), width: T.doubleN().as(this.width), height: T.doubleN().as(this.height)})});
    }
  };
  (glassmorphism.GlassmorphicBorder.new = function(opts) {
    let strokeWidth = opts && 'strokeWidth' in opts ? opts.strokeWidth : null;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let gradient = opts && 'gradient' in opts ? opts.gradient : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let width = opts && 'width' in opts ? opts.width : null;
    this[height$1] = height;
    this[width$1] = width;
    this[_painter] = new glassmorphism._GradientPainter.new({strokeWidth: strokeWidth, radius: radius, gradient: gradient});
    this[_radius] = radius;
    glassmorphism.GlassmorphicBorder.__proto__.new.call(this);
    ;
  }).prototype = glassmorphism.GlassmorphicBorder.prototype;
  dart.addTypeTests(glassmorphism.GlassmorphicBorder);
  dart.addTypeCaches(glassmorphism.GlassmorphicBorder);
  dart.setMethodSignature(glassmorphism.GlassmorphicBorder, () => ({
    __proto__: dart.getMethods(glassmorphism.GlassmorphicBorder.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(glassmorphism.GlassmorphicBorder, I[8]);
  dart.setFieldSignature(glassmorphism.GlassmorphicBorder, () => ({
    __proto__: dart.getFields(glassmorphism.GlassmorphicBorder.__proto__),
    [_painter]: dart.finalFieldType(glassmorphism._GradientPainter),
    [_radius]: dart.finalFieldType(core.double),
    width: dart.finalFieldType(dart.dynamic),
    height: dart.finalFieldType(dart.dynamic)
  }));
  glassmorphism._GradientPainter = class _GradientPainter extends custom_paint.CustomPainter {
    static ['_#new#tearOff'](opts) {
      let strokeWidth = opts && 'strokeWidth' in opts ? opts.strokeWidth : null;
      let radius = opts && 'radius' in opts ? opts.radius : null;
      let gradient = opts && 'gradient' in opts ? opts.gradient : null;
      return new glassmorphism._GradientPainter.new({strokeWidth: strokeWidth, radius: radius, gradient: gradient});
    }
    paint(canvas, size) {
      let t0, t0$;
      let innerRect2 = new ui.RRect.fromRectAndRadius(new ui.Rect.fromLTRB(this.strokeWidth, this.strokeWidth, size.width - this.strokeWidth, size.height - this.strokeWidth), new ui.Radius.circular(this.radius - this.strokeWidth));
      let outerRect = new ui.RRect.fromRectAndRadius(new ui.Rect.fromLTRB(0, 0, size.width, size.height), new ui.Radius.circular(this.radius));
      this.paintObject.shader = this.gradient.createShader(ui.Offset.zero['&'](size));
      let outerRectPath = (t0 = ui.Path.new(), (() => {
        t0.addRRect(outerRect);
        return t0;
      })());
      let innerRectPath2 = (t0$ = ui.Path.new(), (() => {
        t0$.addRRect(innerRect2);
        return t0$;
      })());
      canvas.drawPath(ui.Path.combine(ui.PathOperation.difference, outerRectPath, ui.Path.combine(ui.PathOperation.intersect, outerRectPath, innerRectPath2)), this.paintObject);
    }
    shouldRepaint(oldDelegate) {
      custom_paint.CustomPainter.as(oldDelegate);
      return true;
    }
  };
  (glassmorphism._GradientPainter.new = function(opts) {
    let strokeWidth = opts && 'strokeWidth' in opts ? opts.strokeWidth : null;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let gradient = opts && 'gradient' in opts ? opts.gradient : null;
    this.paintObject = ui.Paint.new();
    this.paintObject2 = ui.Paint.new();
    this.strokeWidth = strokeWidth;
    this.radius = radius;
    this.gradient = gradient;
    glassmorphism._GradientPainter.__proto__.new.call(this);
    ;
  }).prototype = glassmorphism._GradientPainter.prototype;
  dart.addTypeTests(glassmorphism._GradientPainter);
  dart.addTypeCaches(glassmorphism._GradientPainter);
  dart.setMethodSignature(glassmorphism._GradientPainter, () => ({
    __proto__: dart.getMethods(glassmorphism._GradientPainter.__proto__),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size]),
    shouldRepaint: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(glassmorphism._GradientPainter, I[8]);
  dart.setFieldSignature(glassmorphism._GradientPainter, () => ({
    __proto__: dart.getFields(glassmorphism._GradientPainter.__proto__),
    radius: dart.finalFieldType(core.double),
    strokeWidth: dart.finalFieldType(core.double),
    gradient: dart.finalFieldType(gradient.Gradient),
    paintObject: dart.finalFieldType(ui.Paint),
    paintObject2: dart.finalFieldType(ui.Paint)
  }));
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant,
    "package:flutter_app/themes/light_mode.dart": light_mode,
    "file:///zapp/project/lib/modules/glassmorphic/views/glassmorphic_pg.dart": glassmorphic_pg,
    "file:///zapp/project/lib/modules/quiz/pages/quiz_pg.dart": quiz_pg,
    "file:///zapp/project/lib/themes/theme_options.dart": theme_options,
    "package:flutter_app/components/all_components.dart": all_components,
    "package:flutter_app/configs/all_configs.dart": all_configs,
    "package:flutter_app/components/myappbar.dart": myappbar,
    "package:flutter_app/components/mybuttons.dart": mybuttons,
    "package:flutter_app/components/menu_tab.dart": menu_tab,
    "package:flutter_app/components/custom_glassmorphism.dart": custom_glassmorphism,
    "package:flutter_app/configs/colors.dart": colors$0,
    "package:flutter_app/configs/sizes.dart": sizes,
    "package:flutter_app/configs/styles.dart": styles,
    "package:flutter_app/configs/themes.dart": themes,
    "package:glassmorphism/glassmorphism.dart": glassmorphism
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart","/zapp/project/lib/themes/light_mode.dart","/zapp/project/lib/modules/glassmorphic/views/glassmorphic_pg.dart","/zapp/project/lib/modules/quiz/pages/quiz_pg.dart","/zapp/project/lib/themes/theme_options.dart","/zapp/project/lib/components/myappbar.dart","/zapp/project/lib/components/mybuttons.dart","/zapp/project/lib/components/menu_tab.dart","/zapp/project/lib/components/custom_glassmorphism.dart","/zapp/project/lib/configs/colors.dart","/zapp/project/lib/configs/sizes.dart","/zapp/project/lib/configs/themes.dart","/zapp/pub/.pub_cache/hosted/pub.dev/glassmorphism-3.0.0/lib/glassmorphism.dart"],"names":[],"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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant,
    themes__light_mode: light_mode,
    zapp__project__lib__modules__glassmorphic__views__glassmorphic_pg: glassmorphic_pg,
    zapp__project__lib__modules__quiz__pages__quiz_pg: quiz_pg,
    zapp__project__lib__themes__theme_options: theme_options,
    components__all_components: all_components,
    configs__all_configs: all_configs,
    components__myappbar: myappbar,
    components__mybuttons: mybuttons,
    components__menu_tab: menu_tab,
    components__custom_glassmorphism: custom_glassmorphism,
    configs__colors: colors$0,
    configs__sizes: sizes,
    configs__styles: styles,
    configs__themes: themes,
    glassmorphism: glassmorphism
  };
}));

//# sourceMappingURL=main.js.map
